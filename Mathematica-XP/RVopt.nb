(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 10.0' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    468716,       9914]
NotebookOptionsPosition[    463356,       9741]
NotebookOutlinePosition[    463733,       9757]
CellTagsIndexPosition[    463690,       9754]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell["Maximization Problem", "Section",
 CellChangeTimes->{{3.7374593399385724`*^9, 3.737459345397752*^9}}],

Cell[CellGroupData[{

Cell["n = 1: one jump", "Subsection",
 CellChangeTimes->{{3.743823188592093*^9, 3.743823211771964*^9}}],

Cell[CellGroupData[{

Cell["- Caso \[Lambda] = 1", "Subsubsection",
 CellChangeTimes->{{3.7374593179260964`*^9, 3.73745936023143*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"lambda", "=", "1"}], ";"}]], "Input",
 CellChangeTimes->{{3.7318293890415454`*^9, 3.7318293914262023`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Solve", "[", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"lambda", "*", 
      RowBox[{"R", "^", 
       RowBox[{"(", 
        RowBox[{"lambda", "-", "1"}], ")"}]}], "*", "F", "*", "r"}], "-", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"R", "^", 
        RowBox[{"(", 
         RowBox[{"2", "*", "lambda"}], ")"}]}], "+", 
       RowBox[{"2", "*", 
        RowBox[{"R", "^", "lambda"}], "*", "r"}], "+", 
       RowBox[{"r", "^", "2"}]}], ")"}]}], "\[Equal]", "0"}], ",", "R"}], 
  "]"}]], "Input"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"R", "\[Rule]", 
     RowBox[{
      RowBox[{
       RowBox[{"-", 
        SqrtBox["F"]}], " ", 
       SqrtBox["r"]}], "-", "r"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"R", "\[Rule]", 
     RowBox[{
      RowBox[{
       SqrtBox["F"], " ", 
       SqrtBox["r"]}], "-", "r"}]}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.7318293952419014`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"D", "[", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"R", "^", "lambda"}], "/", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"R", "^", "lambda"}], "+", "r"}], ")"}]}], "*", "F"}], "-", 
    "R"}], ",", "R"}], "]"}]], "Input",
 CellChangeTimes->{{3.7318308304330015`*^9, 3.731830852866126*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"-", "1"}], "-", 
  FractionBox[
   RowBox[{"F", " ", "lambda", " ", 
    SuperscriptBox["R", 
     RowBox[{
      RowBox[{"-", "1"}], "+", 
      RowBox[{"2", " ", "lambda"}]}]]}], 
   SuperscriptBox[
    RowBox[{"(", 
     RowBox[{"r", "+", 
      SuperscriptBox["R", "lambda"]}], ")"}], "2"]], "+", 
  FractionBox[
   RowBox[{"F", " ", "lambda", " ", 
    SuperscriptBox["R", 
     RowBox[{
      RowBox[{"-", "1"}], "+", "lambda"}]]}], 
   RowBox[{"r", "+", 
    SuperscriptBox["R", "lambda"]}]]}]], "Output",
 CellChangeTimes->{3.7318312987364755`*^9, 3.731831746236985*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Simplify", "[", 
  RowBox[{"D", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       RowBox[{"lambda", "*", 
        RowBox[{"R", "^", 
         RowBox[{"(", 
          RowBox[{"lambda", "-", "1"}], ")"}]}], "*", "F", "*", "r"}], "-", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"R", "^", "lambda"}], "+", "r"}], ")"}], "^", "2"}]}], 
      ")"}], "/", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{"R", "^", "lambda"}], "+", "r"}], ")"}], "^", "2"}]}], ",", 
    "R"}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.731831184608757*^9, 3.7318312075139685`*^9}}],

Cell[BoxData[
 RowBox[{"-", 
  FractionBox[
   RowBox[{"F", " ", "lambda", " ", "r", " ", 
    SuperscriptBox["R", 
     RowBox[{
      RowBox[{"-", "2"}], "+", "lambda"}]], " ", 
    RowBox[{"(", 
     RowBox[{"r", "-", 
      RowBox[{"lambda", " ", "r"}], "+", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{"1", "+", "lambda"}], ")"}], " ", 
       SuperscriptBox["R", "lambda"]}]}], ")"}]}], 
   SuperscriptBox[
    RowBox[{"(", 
     RowBox[{"r", "+", 
      SuperscriptBox["R", "lambda"]}], ")"}], "3"]]}]], "Output",
 CellChangeTimes->{{3.7318311939883904`*^9, 3.7318312079532795`*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  FractionBox[
   RowBox[{
    RowBox[{"F", " ", "lambda", " ", "r", " ", 
     SuperscriptBox["R", 
      RowBox[{
       RowBox[{"-", "1"}], "+", "lambda"}]]}], "-", 
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{"r", "+", 
       SuperscriptBox["R", "lambda"]}], ")"}], "2"]}], 
   SuperscriptBox[
    RowBox[{"(", 
     RowBox[{"r", "+", 
      SuperscriptBox["R", "lambda"]}], ")"}], "2"]], "\[Equal]", 
  RowBox[{
   RowBox[{"-", "1"}], "-", 
   FractionBox[
    RowBox[{"F", " ", "lambda", " ", 
     SuperscriptBox["R", 
      RowBox[{
       RowBox[{"-", "1"}], "+", 
       RowBox[{"2", " ", "lambda"}]}]]}], 
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{"r", "+", 
       SuperscriptBox["R", "lambda"]}], ")"}], "2"]], "+", 
   FractionBox[
    RowBox[{"F", " ", "lambda", " ", 
     SuperscriptBox["R", 
      RowBox[{
       RowBox[{"-", "1"}], "+", "lambda"}]]}], 
    RowBox[{"r", "+", 
     SuperscriptBox["R", "lambda"]}]]}]}]], "Input",
 CellChangeTimes->{{3.7318310995576043`*^9, 3.731831119923006*^9}, 
   3.7318316236662865`*^9}],

Cell[BoxData["True"], "Output",
 CellChangeTimes->{{3.7318311078735065`*^9, 3.7318311206345224`*^9}, {
  3.7318316013575134`*^9, 3.731831625154339*^9}}]
}, Open  ]],

Cell[BoxData[
 RowBox[{"(*", 
  RowBox[{
   RowBox[{
   "resultado", " ", "da", " ", "primeira", " ", 
    "deriva\[CCedilla]\[ATilde]o", " ", "em", " ", "ordem", " ", "a", " ", 
    "R", " ", "bem"}], ",", " ", 
   RowBox[{"yay", "!"}]}], "*)"}]], "Input",
 CellChangeTimes->{{3.731831659393568*^9, 3.7318316725278444`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"D", "[", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"R", "^", "lambda"}], "/", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"R", "^", "lambda"}], "+", "r"}], ")"}]}], "*", "F"}], "-", 
    "R"}], ",", 
   RowBox[{"{", 
    RowBox[{"R", ",", "2"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.7318308676585884`*^9, 3.7318308709389086`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"-", 
   FractionBox[
    RowBox[{"2", " ", "F", " ", 
     SuperscriptBox["lambda", "2"], " ", 
     SuperscriptBox["R", 
      RowBox[{
       RowBox[{"-", "2"}], "+", 
       RowBox[{"2", " ", "lambda"}]}]]}], 
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{"r", "+", 
       SuperscriptBox["R", "lambda"]}], ")"}], "2"]]}], "+", 
  FractionBox[
   RowBox[{"F", " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"-", "1"}], "+", "lambda"}], ")"}], " ", "lambda", " ", 
    SuperscriptBox["R", 
     RowBox[{
      RowBox[{"-", "2"}], "+", "lambda"}]]}], 
   RowBox[{"r", "+", 
    SuperscriptBox["R", "lambda"]}]], "+", 
  RowBox[{"F", " ", 
   SuperscriptBox["R", "lambda"], " ", 
   RowBox[{"(", 
    RowBox[{
     FractionBox[
      RowBox[{"2", " ", 
       SuperscriptBox["lambda", "2"], " ", 
       SuperscriptBox["R", 
        RowBox[{
         RowBox[{"-", "2"}], "+", 
         RowBox[{"2", " ", "lambda"}]}]]}], 
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{"r", "+", 
         SuperscriptBox["R", "lambda"]}], ")"}], "3"]], "-", 
     FractionBox[
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "1"}], "+", "lambda"}], ")"}], " ", "lambda", " ", 
       SuperscriptBox["R", 
        RowBox[{
         RowBox[{"-", "2"}], "+", "lambda"}]]}], 
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{"r", "+", 
         SuperscriptBox["R", "lambda"]}], ")"}], "2"]]}], ")"}]}]}]], "Output",
 CellChangeTimes->{3.7318308725310545`*^9, 3.731831684446274*^9, 
  3.7318317500536766`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"-", 
    FractionBox[
     RowBox[{"2", " ", "F", " ", 
      SuperscriptBox["lambda", "2"], " ", 
      SuperscriptBox["R", 
       RowBox[{
        RowBox[{"-", "2"}], "+", 
        RowBox[{"2", " ", "lambda"}]}]]}], 
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{"r", "+", 
        SuperscriptBox["R", "lambda"]}], ")"}], "2"]]}], "+", 
   FractionBox[
    RowBox[{"F", " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "1"}], "+", "lambda"}], ")"}], " ", "lambda", " ", 
     SuperscriptBox["R", 
      RowBox[{
       RowBox[{"-", "2"}], "+", "lambda"}]]}], 
    RowBox[{"r", "+", 
     SuperscriptBox["R", "lambda"]}]], "+", 
   RowBox[{"F", " ", 
    SuperscriptBox["R", "lambda"], " ", 
    RowBox[{"(", 
     RowBox[{
      FractionBox[
       RowBox[{"2", " ", 
        SuperscriptBox["lambda", "2"], " ", 
        SuperscriptBox["R", 
         RowBox[{
          RowBox[{"-", "2"}], "+", 
          RowBox[{"2", " ", "lambda"}]}]]}], 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{"r", "+", 
          SuperscriptBox["R", "lambda"]}], ")"}], "3"]], "-", 
      FractionBox[
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "1"}], "+", "lambda"}], ")"}], " ", "lambda", " ", 
        SuperscriptBox["R", 
         RowBox[{
          RowBox[{"-", "2"}], "+", "lambda"}]]}], 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{"r", "+", 
          SuperscriptBox["R", "lambda"]}], ")"}], "2"]]}], ")"}]}]}], 
  "\[Equal]", " ", 
  RowBox[{"F", "*", "r", "*", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      RowBox[{
       RowBox[{"-", 
        RowBox[{"R", "^", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"2", "*", "lambda"}], "-", "2"}], ")"}]}]}], "*", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"lambda", "^", "2"}], "+", "lambda"}], ")"}]}], "+", 
      RowBox[{
       RowBox[{"R", "^", 
        RowBox[{"(", 
         RowBox[{"lambda", "-", "2"}], ")"}]}], "*", "r", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"lambda", "^", "2"}], "+", "lambda"}], ")"}]}]}], ")"}], "/", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       RowBox[{"R", "^", "lambda"}], "+", "r"}], ")"}], "^", 
     "3"}]}]}]}]], "Input",
 CellChangeTimes->{{3.731831682239713*^9, 3.731831682360799*^9}, {
  3.7318317579842844`*^9, 3.731831825851286*^9}, {3.731832724339884*^9, 
  3.7318327271748886`*^9}}],

Cell[BoxData["False"], "Output",
 CellChangeTimes->{{3.7318318266218395`*^9, 3.731831839576994*^9}, 
   3.731832732600736*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Simplify", "[", 
  RowBox[{
   RowBox[{"-", 
    FractionBox[
     RowBox[{"2", " ", "F", " ", 
      SuperscriptBox["lambda", "2"], " ", 
      SuperscriptBox["R", 
       RowBox[{
        RowBox[{"-", "2"}], "+", 
        RowBox[{"2", " ", "lambda"}]}]]}], 
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{"r", "+", 
        SuperscriptBox["R", "lambda"]}], ")"}], "2"]]}], "+", 
   FractionBox[
    RowBox[{"F", " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "1"}], "+", "lambda"}], ")"}], " ", "lambda", " ", 
     SuperscriptBox["R", 
      RowBox[{
       RowBox[{"-", "2"}], "+", "lambda"}]]}], 
    RowBox[{"r", "+", 
     SuperscriptBox["R", "lambda"]}]], "+", 
   RowBox[{"F", " ", 
    SuperscriptBox["R", "lambda"], " ", 
    RowBox[{"(", 
     RowBox[{
      FractionBox[
       RowBox[{"2", " ", 
        SuperscriptBox["lambda", "2"], " ", 
        SuperscriptBox["R", 
         RowBox[{
          RowBox[{"-", "2"}], "+", 
          RowBox[{"2", " ", "lambda"}]}]]}], 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{"r", "+", 
          SuperscriptBox["R", "lambda"]}], ")"}], "3"]], "-", 
      FractionBox[
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "1"}], "+", "lambda"}], ")"}], " ", "lambda", " ", 
        SuperscriptBox["R", 
         RowBox[{
          RowBox[{"-", "2"}], "+", "lambda"}]]}], 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{"r", "+", 
          SuperscriptBox["R", "lambda"]}], ")"}], "2"]]}], ")"}]}]}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.73183265029531*^9, 3.7318326530782785`*^9}}],

Cell[BoxData[
 RowBox[{"-", 
  FractionBox[
   RowBox[{"F", " ", "lambda", " ", "r", " ", 
    SuperscriptBox["R", 
     RowBox[{
      RowBox[{"-", "2"}], "+", "lambda"}]], " ", 
    RowBox[{"(", 
     RowBox[{"r", "-", 
      RowBox[{"lambda", " ", "r"}], "+", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{"1", "+", "lambda"}], ")"}], " ", 
       SuperscriptBox["R", "lambda"]}]}], ")"}]}], 
   SuperscriptBox[
    RowBox[{"(", 
     RowBox[{"r", "+", 
      SuperscriptBox["R", "lambda"]}], ")"}], "3"]]}]], "Output",
 CellChangeTimes->{{3.7318326535846367`*^9, 3.731832663816886*^9}}]
}, Open  ]],

Cell["", "PageBreak",
 PageBreakBelow->True]
}, Open  ]],

Cell[CellGroupData[{

Cell["- Caso \[Lambda] = 1/2", "Subsubsection",
 CellChangeTimes->{{3.7374593179260964`*^9, 3.7374593793810053`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"lambda", "=", 
   RowBox[{"1", "/", "2"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Solve", "[", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"lambda", "*", 
       RowBox[{"R", "^", 
        RowBox[{"(", 
         RowBox[{"lambda", "-", "1"}], ")"}]}], "*", "F", "*", "r"}], "-", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"R", "^", 
         RowBox[{"(", 
          RowBox[{"2", "*", "lambda"}], ")"}]}], "+", 
        RowBox[{"2", "*", 
         RowBox[{"R", "^", "lambda"}], "*", "r"}], "+", 
        RowBox[{"r", "^", "2"}]}], ")"}]}], "\[Equal]", "0"}], ",", "R"}], 
   "]"}], ";"}]}], "Input",
 CellChangeTimes->{{3.732274353270027*^9, 3.732274361275689*^9}, {
   3.7322745764738927`*^9, 3.732274584734747*^9}, 3.7439318650943375`*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"R", "\[Rule]", 
     RowBox[{
      FractionBox[
       RowBox[{"2", " ", 
        SuperscriptBox["r", "2"]}], "3"], "-", 
      FractionBox[
       RowBox[{
        RowBox[{"96", " ", "F", " ", 
         SuperscriptBox["r", "2"]}], "-", 
        RowBox[{"16", " ", 
         SuperscriptBox["r", "4"]}]}], 
       RowBox[{"24", " ", 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{
           RowBox[{"27", " ", 
            SuperscriptBox["F", "2"], " ", 
            SuperscriptBox["r", "2"]}], "-", 
           RowBox[{"144", " ", "F", " ", 
            SuperscriptBox["r", "4"]}], "-", 
           RowBox[{"8", " ", 
            SuperscriptBox["r", "6"]}], "+", 
           RowBox[{"3", " ", 
            SqrtBox["3"], " ", 
            SqrtBox[
             RowBox[{
              RowBox[{"27", " ", 
               SuperscriptBox["F", "4"], " ", 
               SuperscriptBox["r", "4"]}], "+", 
              RowBox[{"224", " ", 
               SuperscriptBox["F", "3"], " ", 
               SuperscriptBox["r", "6"]}], "+", 
              RowBox[{"496", " ", 
               SuperscriptBox["F", "2"], " ", 
               SuperscriptBox["r", "8"]}], "+", 
              RowBox[{"128", " ", "F", " ", 
               SuperscriptBox["r", "10"]}]}]]}]}], ")"}], 
         RowBox[{"1", "/", "3"}]]}]], "+", 
      RowBox[{
       FractionBox["1", "6"], " ", 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{
          RowBox[{"27", " ", 
           SuperscriptBox["F", "2"], " ", 
           SuperscriptBox["r", "2"]}], "-", 
          RowBox[{"144", " ", "F", " ", 
           SuperscriptBox["r", "4"]}], "-", 
          RowBox[{"8", " ", 
           SuperscriptBox["r", "6"]}], "+", 
          RowBox[{"3", " ", 
           SqrtBox["3"], " ", 
           SqrtBox[
            RowBox[{
             RowBox[{"27", " ", 
              SuperscriptBox["F", "4"], " ", 
              SuperscriptBox["r", "4"]}], "+", 
             RowBox[{"224", " ", 
              SuperscriptBox["F", "3"], " ", 
              SuperscriptBox["r", "6"]}], "+", 
             RowBox[{"496", " ", 
              SuperscriptBox["F", "2"], " ", 
              SuperscriptBox["r", "8"]}], "+", 
             RowBox[{"128", " ", "F", " ", 
              SuperscriptBox["r", "10"]}]}]]}]}], ")"}], 
        RowBox[{"1", "/", "3"}]]}]}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"R", "\[Rule]", 
     RowBox[{
      FractionBox[
       RowBox[{"2", " ", 
        SuperscriptBox["r", "2"]}], "3"], "+", 
      FractionBox[
       RowBox[{
        RowBox[{"(", 
         RowBox[{"1", "+", 
          RowBox[{"\[ImaginaryI]", " ", 
           SqrtBox["3"]}]}], ")"}], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"96", " ", "F", " ", 
           SuperscriptBox["r", "2"]}], "-", 
          RowBox[{"16", " ", 
           SuperscriptBox["r", "4"]}]}], ")"}]}], 
       RowBox[{"48", " ", 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{
           RowBox[{"27", " ", 
            SuperscriptBox["F", "2"], " ", 
            SuperscriptBox["r", "2"]}], "-", 
           RowBox[{"144", " ", "F", " ", 
            SuperscriptBox["r", "4"]}], "-", 
           RowBox[{"8", " ", 
            SuperscriptBox["r", "6"]}], "+", 
           RowBox[{"3", " ", 
            SqrtBox["3"], " ", 
            SqrtBox[
             RowBox[{
              RowBox[{"27", " ", 
               SuperscriptBox["F", "4"], " ", 
               SuperscriptBox["r", "4"]}], "+", 
              RowBox[{"224", " ", 
               SuperscriptBox["F", "3"], " ", 
               SuperscriptBox["r", "6"]}], "+", 
              RowBox[{"496", " ", 
               SuperscriptBox["F", "2"], " ", 
               SuperscriptBox["r", "8"]}], "+", 
              RowBox[{"128", " ", "F", " ", 
               SuperscriptBox["r", "10"]}]}]]}]}], ")"}], 
         RowBox[{"1", "/", "3"}]]}]], "-", 
      RowBox[{
       FractionBox["1", "12"], " ", 
       RowBox[{"(", 
        RowBox[{"1", "-", 
         RowBox[{"\[ImaginaryI]", " ", 
          SqrtBox["3"]}]}], ")"}], " ", 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{
          RowBox[{"27", " ", 
           SuperscriptBox["F", "2"], " ", 
           SuperscriptBox["r", "2"]}], "-", 
          RowBox[{"144", " ", "F", " ", 
           SuperscriptBox["r", "4"]}], "-", 
          RowBox[{"8", " ", 
           SuperscriptBox["r", "6"]}], "+", 
          RowBox[{"3", " ", 
           SqrtBox["3"], " ", 
           SqrtBox[
            RowBox[{
             RowBox[{"27", " ", 
              SuperscriptBox["F", "4"], " ", 
              SuperscriptBox["r", "4"]}], "+", 
             RowBox[{"224", " ", 
              SuperscriptBox["F", "3"], " ", 
              SuperscriptBox["r", "6"]}], "+", 
             RowBox[{"496", " ", 
              SuperscriptBox["F", "2"], " ", 
              SuperscriptBox["r", "8"]}], "+", 
             RowBox[{"128", " ", "F", " ", 
              SuperscriptBox["r", "10"]}]}]]}]}], ")"}], 
        RowBox[{"1", "/", "3"}]]}]}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"R", "\[Rule]", 
     RowBox[{
      FractionBox[
       RowBox[{"2", " ", 
        SuperscriptBox["r", "2"]}], "3"], "+", 
      FractionBox[
       RowBox[{
        RowBox[{"(", 
         RowBox[{"1", "-", 
          RowBox[{"\[ImaginaryI]", " ", 
           SqrtBox["3"]}]}], ")"}], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"96", " ", "F", " ", 
           SuperscriptBox["r", "2"]}], "-", 
          RowBox[{"16", " ", 
           SuperscriptBox["r", "4"]}]}], ")"}]}], 
       RowBox[{"48", " ", 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{
           RowBox[{"27", " ", 
            SuperscriptBox["F", "2"], " ", 
            SuperscriptBox["r", "2"]}], "-", 
           RowBox[{"144", " ", "F", " ", 
            SuperscriptBox["r", "4"]}], "-", 
           RowBox[{"8", " ", 
            SuperscriptBox["r", "6"]}], "+", 
           RowBox[{"3", " ", 
            SqrtBox["3"], " ", 
            SqrtBox[
             RowBox[{
              RowBox[{"27", " ", 
               SuperscriptBox["F", "4"], " ", 
               SuperscriptBox["r", "4"]}], "+", 
              RowBox[{"224", " ", 
               SuperscriptBox["F", "3"], " ", 
               SuperscriptBox["r", "6"]}], "+", 
              RowBox[{"496", " ", 
               SuperscriptBox["F", "2"], " ", 
               SuperscriptBox["r", "8"]}], "+", 
              RowBox[{"128", " ", "F", " ", 
               SuperscriptBox["r", "10"]}]}]]}]}], ")"}], 
         RowBox[{"1", "/", "3"}]]}]], "-", 
      RowBox[{
       FractionBox["1", "12"], " ", 
       RowBox[{"(", 
        RowBox[{"1", "+", 
         RowBox[{"\[ImaginaryI]", " ", 
          SqrtBox["3"]}]}], ")"}], " ", 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{
          RowBox[{"27", " ", 
           SuperscriptBox["F", "2"], " ", 
           SuperscriptBox["r", "2"]}], "-", 
          RowBox[{"144", " ", "F", " ", 
           SuperscriptBox["r", "4"]}], "-", 
          RowBox[{"8", " ", 
           SuperscriptBox["r", "6"]}], "+", 
          RowBox[{"3", " ", 
           SqrtBox["3"], " ", 
           SqrtBox[
            RowBox[{
             RowBox[{"27", " ", 
              SuperscriptBox["F", "4"], " ", 
              SuperscriptBox["r", "4"]}], "+", 
             RowBox[{"224", " ", 
              SuperscriptBox["F", "3"], " ", 
              SuperscriptBox["r", "6"]}], "+", 
             RowBox[{"496", " ", 
              SuperscriptBox["F", "2"], " ", 
              SuperscriptBox["r", "8"]}], "+", 
             RowBox[{"128", " ", "F", " ", 
              SuperscriptBox["r", "10"]}]}]]}]}], ")"}], 
        RowBox[{"1", "/", "3"}]]}]}]}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{
  3.732274363323138*^9, {3.732274580094454*^9, 3.732274585144023*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Simplify", "[", 
  RowBox[{
   FractionBox[
    RowBox[{"2", " ", 
     SuperscriptBox["r", "2"]}], "3"], "-", 
   FractionBox[
    RowBox[{
     RowBox[{"96", " ", "F", " ", 
      SuperscriptBox["r", "2"]}], "-", 
     RowBox[{"16", " ", 
      SuperscriptBox["r", "4"]}]}], 
    RowBox[{"24", " ", 
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{
        RowBox[{"27", " ", 
         SuperscriptBox["F", "2"], " ", 
         SuperscriptBox["r", "2"]}], "-", 
        RowBox[{"144", " ", "F", " ", 
         SuperscriptBox["r", "4"]}], "-", 
        RowBox[{"8", " ", 
         SuperscriptBox["r", "6"]}], "+", 
        RowBox[{"3", " ", 
         SqrtBox["3"], " ", 
         SqrtBox[
          RowBox[{
           RowBox[{"27", " ", 
            SuperscriptBox["F", "4"], " ", 
            SuperscriptBox["r", "4"]}], "+", 
           RowBox[{"224", " ", 
            SuperscriptBox["F", "3"], " ", 
            SuperscriptBox["r", "6"]}], "+", 
           RowBox[{"496", " ", 
            SuperscriptBox["F", "2"], " ", 
            SuperscriptBox["r", "8"]}], "+", 
           RowBox[{"128", " ", "F", " ", 
            SuperscriptBox["r", "10"]}]}]]}]}], ")"}], 
      RowBox[{"1", "/", "3"}]]}]], "+", 
   RowBox[{
    FractionBox["1", "6"], " ", 
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{
       RowBox[{"27", " ", 
        SuperscriptBox["F", "2"], " ", 
        SuperscriptBox["r", "2"]}], "-", 
       RowBox[{"144", " ", "F", " ", 
        SuperscriptBox["r", "4"]}], "-", 
       RowBox[{"8", " ", 
        SuperscriptBox["r", "6"]}], "+", 
       RowBox[{"3", " ", 
        SqrtBox["3"], " ", 
        SqrtBox[
         RowBox[{
          RowBox[{"27", " ", 
           SuperscriptBox["F", "4"], " ", 
           SuperscriptBox["r", "4"]}], "+", 
          RowBox[{"224", " ", 
           SuperscriptBox["F", "3"], " ", 
           SuperscriptBox["r", "6"]}], "+", 
          RowBox[{"496", " ", 
           SuperscriptBox["F", "2"], " ", 
           SuperscriptBox["r", "8"]}], "+", 
          RowBox[{"128", " ", "F", " ", 
           SuperscriptBox["r", "10"]}]}]]}]}], ")"}], 
     RowBox[{"1", "/", "3"}]]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.732275101717143*^9, 3.7322751059901667`*^9}}],

Cell[BoxData[
 FractionBox[
  RowBox[{
   RowBox[{
    RowBox[{"-", "24"}], " ", "F", " ", 
    SuperscriptBox["r", "2"]}], "+", 
   SuperscriptBox[
    RowBox[{"(", 
     RowBox[{
      RowBox[{"2", " ", 
       SuperscriptBox["r", "2"]}], "+", 
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{
         RowBox[{"27", " ", 
          SuperscriptBox["F", "2"], " ", 
          SuperscriptBox["r", "2"]}], "-", 
         RowBox[{"144", " ", "F", " ", 
          SuperscriptBox["r", "4"]}], "-", 
         RowBox[{"8", " ", 
          SuperscriptBox["r", "6"]}], "+", 
         RowBox[{"3", " ", 
          SqrtBox["3"], " ", 
          SqrtBox[
           RowBox[{"F", " ", 
            SuperscriptBox["r", "4"], " ", 
            SuperscriptBox[
             RowBox[{"(", 
              RowBox[{"F", "+", 
               RowBox[{"4", " ", 
                SuperscriptBox["r", "2"]}]}], ")"}], "2"], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"27", " ", "F"}], "+", 
              RowBox[{"8", " ", 
               SuperscriptBox["r", "2"]}]}], ")"}]}]]}]}], ")"}], 
       RowBox[{"1", "/", "3"}]]}], ")"}], "2"]}], 
  RowBox[{"6", " ", 
   SuperscriptBox[
    RowBox[{"(", 
     RowBox[{
      RowBox[{"27", " ", 
       SuperscriptBox["F", "2"], " ", 
       SuperscriptBox["r", "2"]}], "-", 
      RowBox[{"144", " ", "F", " ", 
       SuperscriptBox["r", "4"]}], "-", 
      RowBox[{"8", " ", 
       SuperscriptBox["r", "6"]}], "+", 
      RowBox[{"3", " ", 
       SqrtBox["3"], " ", 
       SqrtBox[
        RowBox[{"F", " ", 
         SuperscriptBox["r", "4"], " ", 
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{"F", "+", 
            RowBox[{"4", " ", 
             SuperscriptBox["r", "2"]}]}], ")"}], "2"], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"27", " ", "F"}], "+", 
           RowBox[{"8", " ", 
            SuperscriptBox["r", "2"]}]}], ")"}]}]]}]}], ")"}], 
    RowBox[{"1", "/", "3"}]]}]]], "Output",
 CellChangeTimes->{3.7322751068577785`*^9}]
}, Open  ]],

Cell["", "PageBreak",
 PageBreakBelow->True]
}, Open  ]],

Cell[CellGroupData[{

Cell["- Caso \[Lambda] \[Epsilon] (0,1)", "Subsubsection",
 CellChangeTimes->{{3.7374593179260964`*^9, 3.73745936023143*^9}, {
  3.7374593934959297`*^9, 3.7374594172658677`*^9}}],

Cell[BoxData[
 RowBox[{"(*", " ", 
  RowBox[{"Resultados", " ", "experimentais"}], " ", "*)"}]], "Input",
 CellChangeTimes->{{3.731847415361618*^9, 3.7318474338056965`*^9}, {
  3.737459438835396*^9, 3.737459439305139*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"F", "=", "5"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"r", "=", "0.05"}], ";"}]}], "Input",
 CellChangeTimes->{{3.7318448099288607`*^9, 3.731844827061965*^9}, {
   3.7318448597751026`*^9, 3.7318449079952064`*^9}, {3.731844939807707*^9, 
   3.7318449400939083`*^9}, 3.731847410263973*^9, 3.7374592837843523`*^9, 
   3.7374595958942966`*^9, {3.737459693517409*^9, 3.7374597167646065`*^9}}],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.7320243452856026`*^9, 3.732024347922458*^9}}],

Cell["\<\

Espa\[CCedilla]amento de 0.1.\
\>", "Text",
 CellChangeTimes->{{3.731847869932787*^9, 3.7318478941439295`*^9}, {
  3.737459442971554*^9, 3.737459458587678*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"AbsoluteTiming", "[", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"gammas", "=", 
    RowBox[{"Rest", "[", 
     RowBox[{"Range", "[", 
      RowBox[{"0", ",", "1", ",", "0.1"}], "]"}], "]"}]}], ";", 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"calcR", "[", "lambda_", "]"}], ":=", " ", 
    RowBox[{"Solve", "[", 
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{"F", " ", "lambda", " ", "r", " ", 
          SuperscriptBox["R", 
           RowBox[{
            RowBox[{"-", "1"}], "+", "lambda"}]]}], "-", 
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{"r", "+", 
            SuperscriptBox["R", "lambda"]}], ")"}], "2"]}], "\[Equal]", "0"}],
        "&&", 
       RowBox[{"R", ">", "0"}]}], ",", "R"}], "]"}]}], ";", 
   "\[IndentingNewLine]", 
   RowBox[{"Ropt", "=", 
    RowBox[{"R", "/.", 
     RowBox[{"Flatten", "[", 
      RowBox[{
       RowBox[{"Map", "[", 
        RowBox[{"calcR", ",", "gammas"}], "]"}], ",", "1"}], "]"}]}]}], ";", 
   " ", 
   RowBox[{"(*", " ", 
    RowBox[{"lista", " ", "R", " ", "optimais"}], " ", "*)"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"V", "[", 
     RowBox[{"gamma_", ",", "R_"}], "]"}], ":=", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"R", "^", "gamma"}], "/", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"R", "^", "gamma"}], "+", "r"}], ")"}]}], "*", "F"}], "-", 
     "R"}]}], ";", "\[IndentingNewLine]", 
   RowBox[{"Vopt", "=", 
    RowBox[{"MapThread", "[", 
     RowBox[{"V", ",", 
      RowBox[{"{", 
       RowBox[{"gammas", ",", "Ropt"}], "}"}]}], "]"}]}], ";", " ", 
   RowBox[{"(*", " ", 
    RowBox[{"lista", " ", "V", " ", "optimais"}], " ", "*)"}], 
   "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
    "gr\[AAcute]fico", " ", "com", " ", "comportamento", " ", "de", " ", "R", 
     " ", "optimal", " ", "e", " ", "V", " ", "optimal", " ", "de", " ", 
     "acordo", " ", "com", " ", "gamma"}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{"ListPlot", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"Transpose", "[", 
        RowBox[{"{", 
         RowBox[{"gammas", ",", "Ropt"}], "}"}], "]"}], ",", 
       RowBox[{"Transpose", "[", 
        RowBox[{"{", 
         RowBox[{"gammas", ",", "Vopt"}], "}"}], "]"}]}], "}"}], ",", 
     RowBox[{"Filling", "->", "Axis"}], ",", 
     RowBox[{"PlotLegends", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"\"\<R optimal\>\"", ",", "\"\<V optimal\>\""}], "}"}]}]}], 
    "]"}]}], "\[IndentingNewLine]", "]"}]], "Input",
 CellChangeTimes->{{3.7318449182134333`*^9, 3.7318449209283543`*^9}, 
   3.7318450640185566`*^9, {3.731845159386273*^9, 3.731845324070305*^9}, {
   3.73184535431446*^9, 3.7318453556336746`*^9}, {3.731845388756942*^9, 
   3.731845414982231*^9}, {3.7318456135650377`*^9, 3.731845614841674*^9}, {
   3.7318456588729677`*^9, 3.731845711875438*^9}, {3.7318458224012723`*^9, 
   3.731845845595272*^9}, {3.7318459337528267`*^9, 3.731845945107915*^9}, {
   3.7318459760649385`*^9, 3.7318460158970175`*^9}, 3.731846064680739*^9, {
   3.7318462963407044`*^9, 3.7318463374530153`*^9}, {3.731846467997674*^9, 
   3.73184647737739*^9}, {3.7318465637254972`*^9, 3.7318465716009846`*^9}, {
   3.7318468528780084`*^9, 3.731846890158196*^9}, {3.7318469329067698`*^9, 
   3.731847001059198*^9}, {3.7318476337162313`*^9, 3.731847700976263*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"1.95202079999999988935144301649415865541`6.311084354313727", ",", 
   TemplateBox[{GraphicsBox[{{}, 
       GraphicsComplexBox[CompressedData["
1:eJxTTMoPSmViYGCwAWIQPWsmCOy0F/YUOeG246w9hH/SfvX3N82lx+7amxiD
wGX7IwaLl/CKPIPK37TvfcAXd+vKG3sGMHhgL+JqeTu98SNU/WN7D0VOuVVO
X+zT00Dgmb3428bJkiu+QfW/tF+sN8Nl8cYf9mfPgMAbe1Gmq6W/k39Bzftg
H/BS3/z9sd/2MPfpaDKEfM2QcIC5T5Jz3szZmeIOMPd9WvnquNszMQeY+xZb
MZY3bBBzgLlvjdqm8FvrxRxg7vshYtSeeEXMAeY+nnYm7QVC4g4w9xX+7unj
SRJ3gLnvb5HcY6c94g4w90VwZ6R0yMDcsxPqblh4noTzYe5Dlb8J58Pch6r+
MZwPcx+q/pdwPsx9qOZ9QFM/+N03mv7IS38AwUdhUQ==
        "], {{{}, {}, {}, {}, {}, {
           Directive[
            RGBColor[0.368417, 0.506779, 0.709798], 
            Opacity[0.3]], 
           LineBox[{31, 1}], 
           LineBox[{32, 2}], 
           LineBox[{33, 3}], 
           LineBox[{34, 4}], 
           LineBox[{35, 5}], 
           LineBox[{36, 6}], 
           LineBox[{37, 7}], 
           LineBox[{38, 8}], 
           LineBox[{39, 9}], 
           LineBox[{40, 10}]}, {}, {
           Directive[
            RGBColor[0.880722, 0.611041, 0.142051], 
            Opacity[0.3]], 
           LineBox[{21, 11}], 
           LineBox[{22, 12}], 
           LineBox[{23, 13}], 
           LineBox[{24, 14}], 
           LineBox[{25, 15}], 
           LineBox[{26, 16}], 
           LineBox[{27, 17}], 
           LineBox[{28, 18}], 
           LineBox[{29, 19}], 
           LineBox[{30, 20}]}}, {{}, {
           Hue[0.67, 0.6, 0.6], 
           Directive[
            PointSize[0.019444444444444445`], 
            RGBColor[0.368417, 0.506779, 0.709798], 
            AbsoluteThickness[1.6]], 
           PointBox[{41, 42, 43, 44, 45, 46, 47, 48, 49, 50}]}, {
           Hue[0.9060679774997897, 0.6, 0.6], 
           Directive[
            PointSize[0.019444444444444445`], 
            RGBColor[0.880722, 0.611041, 0.142051], 
            AbsoluteThickness[1.6]], 
           PointBox[{51, 52, 53, 54, 55, 56, 57, 58, 59, 60}]}, {}}}], {}}, {
      DisplayFunction -> Identity, PlotRangePadding -> {{
          Scaled[0.02], 
          Scaled[0.02]}, {
          Scaled[0.02], 
          Scaled[0.05]}}, AxesOrigin -> {0, 0}, 
       PlotRange -> {{0, 1.}, {0, 6.10249835253698}}, DisplayFunction -> 
       Identity, AspectRatio -> NCache[GoldenRatio^(-1), 0.6180339887498948], 
       Axes -> {True, True}, AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, 
       DisplayFunction :> Identity, Frame -> {{False, False}, {False, False}},
        FrameLabel -> {{None, None}, {None, None}}, 
       FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
       GridLines -> {None, None}, GridLinesStyle -> Directive[
         GrayLevel[0.5, 0.4]], Method -> {}, 
       PlotRange -> {{0, 1.}, {0, 6.10249835253698}}, PlotRangeClipping -> 
       True, PlotRangePadding -> {{
          Scaled[0.02], 
          Scaled[0.02]}, {
          Scaled[0.02], 
          Scaled[0.05]}}, Ticks -> {Automatic, Automatic}}],FormBox[
      FormBox[
       TemplateBox[{"\"R optimal\"", "\"V optimal\""}, "PointLegend", 
        DisplayFunction -> (FormBox[
          StyleBox[
           StyleBox[
            PaneBox[
             TagBox[
              GridBox[{{
                 TagBox[
                  GridBox[{{
                    GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.7], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.7], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], 
                    PointBox[
                    NCache[{
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}]}, {
                    Scaled[{0.5, 0.5}]}]]}}}, AspectRatio -> Full, 
                    ImageSize -> {10, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                    GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.7], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.7], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], 
                    PointBox[
                    NCache[{
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}]}, {
                    Scaled[{0.5, 0.5}]}]]}}}, AspectRatio -> Full, 
                    ImageSize -> {10, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                   AutoDelete -> False, 
                   GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                   GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                   GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
               GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}},
                AutoDelete -> False, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
              "Grid"], Alignment -> Left, AppearanceElements -> None, 
             ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
             "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
           FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
           False], TraditionalForm]& ), 
        InterpretationFunction :> (RowBox[{"PointLegend", "[", 
           RowBox[{
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"PointSize", "[", "0.019444444444444445`", "]"}], 
                    ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                 ",", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"PointSize", "[", "0.019444444444444445`", "]"}], 
                    ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], 
                    "RGBColor[0.880722, 0.611041, 0.142051]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], 
                   "]"}]}], "}"}], ",", 
             RowBox[{"{", 
               RowBox[{#, ",", #2}], "}"}], ",", 
             RowBox[{"Joined", "\[Rule]", 
               RowBox[{"{", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "False"}], "}"}], "}"}]}], ",", 
             RowBox[{"LabelStyle", "\[Rule]", 
               RowBox[{"{", "}"}]}], ",", 
             RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}], ",", 
             RowBox[{"LegendMarkers", "\[Rule]", 
               RowBox[{"{", 
                 RowBox[{
                   RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                   RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}]}], "}"}]}]}], 
           "]"}]& ), Editable -> True], TraditionalForm], TraditionalForm]},
    "Legended",
    DisplayFunction->(GridBox[{{
        TagBox[
         ItemBox[
          PaneBox[
           TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
           BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
         "SkipImageSizeLevel"], 
        ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
      GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
      AutoDelete -> False, GridBoxItemSize -> Automatic, 
      BaselinePosition -> {1, 1}]& ),
    Editable->True,
    InterpretationFunction->(RowBox[{"Legended", "[", 
       RowBox[{#, ",", 
         RowBox[{"Placed", "[", 
           RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]}], "}"}]], "Output",
 CellChangeTimes->{
  3.7318468908642025`*^9, 3.7318469341115026`*^9, {3.731846979076273*^9, 
   3.7318469962916255`*^9}, {3.731847664976717*^9, 3.7318477050141134`*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"AbsoluteTiming", "[", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"gammas", "=", 
    RowBox[{"Rest", "[", 
     RowBox[{"Range", "[", 
      RowBox[{"0", ",", "1", ",", "0.1"}], "]"}], "]"}]}], ";", 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"calcR", "[", "lambda_", "]"}], ":=", " ", 
    RowBox[{"NSolve", "[", 
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{"F", " ", "lambda", " ", "r", " ", 
          SuperscriptBox["R", 
           RowBox[{
            RowBox[{"-", "1"}], "+", "lambda"}]]}], "-", 
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{"r", "+", 
            SuperscriptBox["R", "lambda"]}], ")"}], "2"]}], "\[Equal]", "0"}],
        "&&", 
       RowBox[{"R", ">", "0"}]}], ",", "R"}], "]"}]}], ";", 
   "\[IndentingNewLine]", 
   RowBox[{"Ropt1", "=", 
    RowBox[{"R", "/.", 
     RowBox[{"Flatten", "[", 
      RowBox[{
       RowBox[{"Map", "[", 
        RowBox[{"calcR", ",", "gammas"}], "]"}], ",", "1"}], "]"}]}]}], ";", 
   " ", 
   RowBox[{"(*", " ", 
    RowBox[{"lista", " ", "R", " ", "optimais"}], " ", "*)"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"V", "[", 
     RowBox[{"gamma_", ",", "R_"}], "]"}], ":=", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"R", "^", "gamma"}], "/", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"R", "^", "gamma"}], "+", "r"}], ")"}]}], "*", "F"}], "-", 
     "R"}]}], ";", "\[IndentingNewLine]", 
   RowBox[{"Vopt", "=", 
    RowBox[{"MapThread", "[", 
     RowBox[{"V", ",", 
      RowBox[{"{", 
       RowBox[{"gammas", ",", "Ropt1"}], "}"}]}], "]"}]}], ";", " ", 
   RowBox[{"(*", " ", 
    RowBox[{"lista", " ", "V", " ", "optimais"}], " ", "*)"}], 
   "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
    "gr\[AAcute]fico", " ", "com", " ", "comportamento", " ", "de", " ", "R", 
     " ", "optimal", " ", "e", " ", "V", " ", "optimal", " ", "de", " ", 
     "acordo", " ", "com", " ", "gamma"}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{"lambda", "=", 
    RowBox[{"Flatten", "[", 
     RowBox[{"MapThread", "[", 
      RowBox[{"Power", ",", " ", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", "Ropt", "}"}], ",", 
         RowBox[{"{", "gammas", "}"}]}], "}"}]}], "]"}], "]"}]}], ";", " ", 
   RowBox[{"(*", 
    RowBox[{"lamda", "=", 
     RowBox[{"R", "^", "gamma"}]}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{"ListPlot", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"Transpose", "[", 
        RowBox[{"{", 
         RowBox[{"gammas", ",", "Ropt1"}], "}"}], "]"}], ",", 
       RowBox[{"Transpose", "[", 
        RowBox[{"{", 
         RowBox[{"gammas", ",", "Vopt"}], "}"}], "]"}], ",", " ", 
       RowBox[{"Transpose", "[", 
        RowBox[{"{", 
         RowBox[{"gammas", ",", "lambda"}], "}"}], "]"}]}], "}"}], ",", 
     RowBox[{"Filling", "->", "Axis"}], ",", 
     RowBox[{"PlotLegends", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"\"\<R optimal\>\"", ",", "\"\<V optimal\>\""}], "}"}]}]}], 
    "]"}]}], "\[IndentingNewLine]", "]"}]], "Input",
 CellChangeTimes->{{3.7318473137203903`*^9, 3.7318473657317467`*^9}, 
   3.7318475292064075`*^9, {3.7318475749537*^9, 3.731847623335327*^9}, {
   3.7318477103848057`*^9, 3.7318477119127398`*^9}, {3.7322770736117887`*^9, 
   3.7322771094791546`*^9}, {3.7322792605071173`*^9, 3.732279313332467*^9}, {
   3.7322794437654734`*^9, 3.7322794495305634`*^9}, {3.743823905678629*^9, 
   3.743823912787649*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"0.20312579999999999524895599734009010717`5.32836500205132", ",", 
   TemplateBox[{GraphicsBox[{{}, 
       GraphicsComplexBox[CompressedData["
1:eJxTTMoPSmViYGCIAmIQPWsmCOy0N/we7fx3znx7CP+kva/qN+dfWZvsTYxB
4LK9CPOjR09j90Hlb9p7cf6t7Gw6as8ABg/sPVQS/Fs/noaqf2x/vv81z3ON
i/bpaSDwzH7qkWads85XoPpf2kf1ivpPdrhuf/YMCLyxr/B5q31P8hbUvA/2
p8Hid+xh7lu0lr/nfq+QA8x907lDFE6rCTnA3NcYm67jclrQAeY+ll+36y5V
CjrA3Ofwt9uq2VDQAea+wvm8lUUfBRxg7lsi47/98A4BB5j7WvnWLFnWJuAA
c9+0kE+q0VECDjD3gY0xhqnfaf/syXmvKTOfwcNPS/Dg7sTnj+Dhp3ix50n7
wwfw8MuetTJzS/R9ePhVT79/UPv5XXj48bYeXR7DexceftcUrF/KzL0DD797
TXNfrqy4Aw+/vDX/hO/13IGH3zm08GOAApj7YHyY+1Dlb8L5MPehqn8M58Pc
h6r/JZwPcx+qeR/Q1I+6j1L3jebf4Zl/AQTjKjw=
        "], {{{}, {}, {}, {}, {}, {}, {
           Directive[
            RGBColor[0.368417, 0.506779, 0.709798], 
            Opacity[0.3]], 
           LineBox[{51, 1}], 
           LineBox[{52, 2}], 
           LineBox[{53, 3}], 
           LineBox[{54, 4}], 
           LineBox[{55, 5}], 
           LineBox[{56, 6}], 
           LineBox[{57, 7}], 
           LineBox[{58, 8}], 
           LineBox[{59, 9}], 
           LineBox[{60, 10}]}, {}, {
           Directive[
            RGBColor[0.880722, 0.611041, 0.142051], 
            Opacity[0.3]], 
           LineBox[{41, 11}], 
           LineBox[{42, 12}], 
           LineBox[{43, 13}], 
           LineBox[{44, 14}], 
           LineBox[{45, 15}], 
           LineBox[{46, 16}], 
           LineBox[{47, 17}], 
           LineBox[{48, 18}], 
           LineBox[{49, 19}], 
           LineBox[{50, 20}]}, {}, {
           Directive[
            RGBColor[0.560181, 0.691569, 0.194885], 
            Opacity[0.3]], 
           LineBox[{31, 21}], 
           LineBox[{32, 22}], 
           LineBox[{33, 23}], 
           LineBox[{34, 24}], 
           LineBox[{35, 25}], 
           LineBox[{36, 26}], 
           LineBox[{37, 27}], 
           LineBox[{38, 28}], 
           LineBox[{39, 29}], 
           LineBox[{40, 30}]}}, {{}, {
           Hue[0.67, 0.6, 0.6], 
           Directive[
            PointSize[0.019444444444444445`], 
            RGBColor[0.368417, 0.506779, 0.709798], 
            AbsoluteThickness[1.6]], 
           PointBox[{61, 62, 63, 64, 65, 66, 67, 68, 69, 70}]}, {
           Hue[0.9060679774997897, 0.6, 0.6], 
           Directive[
            PointSize[0.019444444444444445`], 
            RGBColor[0.880722, 0.611041, 0.142051], 
            AbsoluteThickness[1.6]], 
           PointBox[{71, 72, 73, 74, 75, 76, 77, 78, 79, 80}]}, {
           Hue[0.1421359549995791, 0.6, 0.6], 
           Directive[
            PointSize[0.019444444444444445`], 
            RGBColor[0.560181, 0.691569, 0.194885], 
            AbsoluteThickness[1.6]], 
           PointBox[{81, 82, 83, 84, 85, 86, 87, 88, 89, 90}]}, {}}}], {}}, {
      DisplayFunction -> Identity, PlotRangePadding -> {{
          Scaled[0.02], 
          Scaled[0.02]}, {
          Scaled[0.02], 
          Scaled[0.05]}}, AxesOrigin -> {0, 0}, 
       PlotRange -> {{0, 1.}, {0, 4.638548077065396}}, DisplayFunction -> 
       Identity, AspectRatio -> NCache[GoldenRatio^(-1), 0.6180339887498948], 
       Axes -> {True, True}, AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, 
       DisplayFunction :> Identity, Frame -> {{False, False}, {False, False}},
        FrameLabel -> {{None, None}, {None, None}}, 
       FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
       GridLines -> {None, None}, GridLinesStyle -> Directive[
         GrayLevel[0.5, 0.4]], Method -> {}, 
       PlotRange -> {{0, 1.}, {0, 4.638548077065396}}, PlotRangeClipping -> 
       True, PlotRangePadding -> {{
          Scaled[0.02], 
          Scaled[0.02]}, {
          Scaled[0.02], 
          Scaled[0.05]}}, Ticks -> {Automatic, Automatic}}],FormBox[
      FormBox[
       TemplateBox[{"\"R optimal\"", "\"V optimal\""}, "PointLegend", 
        DisplayFunction -> (FormBox[
          StyleBox[
           StyleBox[
            PaneBox[
             TagBox[
              GridBox[{{
                 TagBox[
                  GridBox[{{
                    GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.7], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.7], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], 
                    PointBox[
                    NCache[{
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}]}, {
                    Scaled[{0.5, 0.5}]}]]}}}, AspectRatio -> Full, 
                    ImageSize -> {10, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                    GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.7], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.7], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], 
                    PointBox[
                    NCache[{
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}]}, {
                    Scaled[{0.5, 0.5}]}]]}}}, AspectRatio -> Full, 
                    ImageSize -> {10, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                   AutoDelete -> False, 
                   GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                   GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                   GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
               GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}},
                AutoDelete -> False, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
              "Grid"], Alignment -> Left, AppearanceElements -> None, 
             ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
             "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
           FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
           False], TraditionalForm]& ), 
        InterpretationFunction :> (RowBox[{"PointLegend", "[", 
           RowBox[{
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"PointSize", "[", "0.019444444444444445`", "]"}], 
                    ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                 ",", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"PointSize", "[", "0.019444444444444445`", "]"}], 
                    ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], 
                    "RGBColor[0.880722, 0.611041, 0.142051]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                 ",", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"PointSize", "[", "0.019444444444444445`", "]"}], 
                    ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.37345400000000006`, 0.461046, 0.12992333333333334`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], 
                    "RGBColor[0.560181, 0.691569, 0.194885]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], 
                   "]"}]}], "}"}], ",", 
             RowBox[{"{", 
               RowBox[{#, ",", #2}], "}"}], ",", 
             RowBox[{"Joined", "\[Rule]", 
               RowBox[{"{", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "False", ",", "False"}], "}"}], 
                 "}"}]}], ",", 
             RowBox[{"LabelStyle", "\[Rule]", 
               RowBox[{"{", "}"}]}], ",", 
             RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}], ",", 
             RowBox[{"LegendMarkers", "\[Rule]", 
               RowBox[{"{", 
                 RowBox[{
                   RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                   RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                   RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}]}], "}"}]}]}], 
           "]"}]& ), Editable -> True], TraditionalForm], TraditionalForm]},
    "Legended",
    DisplayFunction->(GridBox[{{
        TagBox[
         ItemBox[
          PaneBox[
           TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
           BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
         "SkipImageSizeLevel"], 
        ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
      GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
      AutoDelete -> False, GridBoxItemSize -> Automatic, 
      BaselinePosition -> {1, 1}]& ),
    Editable->True,
    InterpretationFunction->(RowBox[{"Legended", "[", 
       RowBox[{#, ",", 
         RowBox[{"Placed", "[", 
           RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]}], "}"}]], "Output",
 CellChangeTimes->{3.7322793885524354`*^9, 3.732279451229766*^9, 
  3.743823917270336*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"gammas", "=", 
   RowBox[{"Rest", "[", 
    RowBox[{"Range", "[", 
     RowBox[{"0", ",", "1", ",", "0.1"}], "]"}], "]"}]}], ";", 
  "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"calcR", "[", "lambda_", "]"}], ":=", " ", 
   RowBox[{"NSolve", "[", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{"F", " ", "lambda", " ", "r", " ", 
         SuperscriptBox["R", 
          RowBox[{
           RowBox[{"-", "1"}], "+", "lambda"}]]}], "-", 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{"r", "+", 
           SuperscriptBox["R", "lambda"]}], ")"}], "2"]}], "\[Equal]", "0"}], 
      "&&", 
      RowBox[{"R", ">", "0"}]}], ",", "R"}], "]"}]}], ";", 
  "\[IndentingNewLine]", 
  RowBox[{"Ropt", "=", 
   RowBox[{"R", "/.", 
    RowBox[{"Flatten", "[", 
     RowBox[{
      RowBox[{"Map", "[", 
       RowBox[{"calcR", ",", "gammas"}], "]"}], ",", "1"}], "]"}]}]}], ";", 
  " ", 
  RowBox[{"(*", " ", 
   RowBox[{"lista", " ", "R", " ", "optimais"}], " ", "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"V", "[", 
    RowBox[{"gamma_", ",", "R_"}], "]"}], ":=", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"R", "^", "gamma"}], "/", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"R", "^", "gamma"}], "+", "r"}], ")"}]}], "*", "F"}], "-", 
    "R"}]}], ";"}]], "Input"],

Cell[BoxData["$Aborted"], "Output",
 CellChangeTimes->{3.7322793692988157`*^9}]
}, Open  ]],

Cell["\<\

Espa\[CCedilla]amento de 0.05.\
\>", "Text",
 CellChangeTimes->{{3.7318478480833473`*^9, 3.7318478867326827`*^9}, {
  3.7374594647193465`*^9, 3.7374594751407595`*^9}, {3.7374598563439074`*^9, 
  3.7374598586945953`*^9}, {3.7374598964846077`*^9, 3.7374598971892786`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"gammas", "=", 
     RowBox[{"Rest", "[", 
      RowBox[{"Range", "[", 
       RowBox[{"0", ",", "1", ",", "0.05"}], "]"}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"calcR", "[", "lambda_", "]"}], ":=", " ", 
     RowBox[{"NSolve", "[", 
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{"F", " ", "lambda", " ", "r", " ", 
           SuperscriptBox["R", 
            RowBox[{
             RowBox[{"-", "1"}], "+", "lambda"}]]}], "-", 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{"r", "+", 
             SuperscriptBox["R", "lambda"]}], ")"}], "2"]}], "\[Equal]", 
         "0"}], "&&", 
        RowBox[{"R", ">", "0"}]}], ",", "R"}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Ropt", "=", 
     RowBox[{"R", "/.", 
      RowBox[{"Flatten", "[", 
       RowBox[{
        RowBox[{"Map", "[", 
         RowBox[{"calcR", ",", "gammas"}], "]"}], ",", "1"}], "]"}]}]}], ";", 
    " ", 
    RowBox[{"(*", " ", 
     RowBox[{"lista", " ", "R", " ", "optimais"}], " ", "*)"}], 
    "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"V", "[", 
      RowBox[{"gamma_", ",", "R_"}], "]"}], ":=", 
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{"R", "^", "gamma"}], "/", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"R", "^", "gamma"}], "+", "r"}], ")"}]}], "*", "F"}], "-", 
      "R"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Vopt", "=", 
     RowBox[{"MapThread", "[", 
      RowBox[{"V", ",", 
       RowBox[{"{", 
        RowBox[{"gammas", ",", "Ropt"}], "}"}]}], "]"}]}], ";", " ", 
    RowBox[{"(*", " ", 
     RowBox[{"lista", " ", "V", " ", "optimais"}], " ", "*)"}], 
    "\[IndentingNewLine]", 
    RowBox[{"lambda", "=", 
     RowBox[{"Flatten", "[", 
      RowBox[{"MapThread", "[", 
       RowBox[{"Power", ",", " ", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", "Ropt", "}"}], ",", 
          RowBox[{"{", "gammas", "}"}]}], "}"}]}], "]"}], "]"}]}], ";", " ", 
    RowBox[{"(*", 
     RowBox[{"lamda", "=", 
      RowBox[{"R", "^", "gamma"}]}], "*)"}], "\[IndentingNewLine]", 
    RowBox[{"(*", 
     RowBox[{
     "gr\[AAcute]fico", " ", "com", " ", "comportamento", " ", "de", " ", "R",
       " ", "optimal", " ", "e", " ", "V", " ", "optimal", " ", "de", " ", 
      "acordo", " ", "com", " ", "gamma"}], "*)"}], "\[IndentingNewLine]", 
    RowBox[{"(*", " ", 
     RowBox[{"ListPlot", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"Transpose", "[", 
          RowBox[{"{", 
           RowBox[{"gammas", ",", "Vopt"}], "}"}], "]"}], ",", 
         RowBox[{"Transpose", "[", 
          RowBox[{"{", 
           RowBox[{"gammas", ",", "lambda"}], "}"}], "]"}]}], "}"}], ",", 
       RowBox[{"Filling", "->", "Axis"}], ",", 
       RowBox[{"PlotLegends", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{
         "\"\<V optimal\>\"", ",", " ", "\"\<\[Lambda](R) optimal\>\""}], 
         "}"}]}]}], "]"}], "*)"}], "\[IndentingNewLine]", 
    RowBox[{"ListPlot", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"Transpose", "[", 
         RowBox[{"{", 
          RowBox[{"gammas", ",", "Ropt"}], "}"}], "]"}], ",", 
        RowBox[{"Transpose", "[", 
         RowBox[{"{", 
          RowBox[{"gammas", ",", "Vopt"}], "}"}], "]"}], ",", " ", 
        RowBox[{"Transpose", "[", 
         RowBox[{"{", 
          RowBox[{"gammas", ",", "lambda"}], "}"}], "]"}]}], "}"}], ",", 
      RowBox[{"Filling", "->", "Axis"}], ",", 
      RowBox[{"AxesLabel", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{"\"\<\[Gamma]\>\"", ",", " ", "\"\< \>\""}], "}"}]}], ",", 
      RowBox[{"PlotLegends", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{
        "\"\<R optimal\>\"", ",", "\"\<V optimal\>\"", ",", " ", 
         "\"\<\[Lambda](R optimal)\>\""}], "}"}]}]}], "]"}]}], " ", 
   "\[IndentingNewLine]"}]}]], "Input",
 CellChangeTimes->{{3.7318449182134333`*^9, 3.7318449209283543`*^9}, 
   3.7318450640185566`*^9, {3.731845159386273*^9, 3.731845324070305*^9}, {
   3.73184535431446*^9, 3.7318453556336746`*^9}, {3.731845388756942*^9, 
   3.731845414982231*^9}, {3.7318456135650377`*^9, 3.731845614841674*^9}, {
   3.7318456588729677`*^9, 3.731845711875438*^9}, {3.7318458224012723`*^9, 
   3.731845845595272*^9}, {3.7318459337528267`*^9, 3.731845945107915*^9}, {
   3.7318459760649385`*^9, 3.7318460158970175`*^9}, 3.731846064680739*^9, {
   3.7318462963407044`*^9, 3.7318463374530153`*^9}, {3.731846467997674*^9, 
   3.73184647737739*^9}, {3.7318465637254972`*^9, 3.7318465716009846`*^9}, {
   3.7318468528780084`*^9, 3.731846890158196*^9}, {3.7318469329067698`*^9, 
   3.731847001059198*^9}, {3.7318476337162313`*^9, 3.731847700976263*^9}, {
   3.731847799002621*^9, 3.731847812880454*^9}, {3.7322795164839168`*^9, 
   3.73227955978553*^9}, {3.732279621995529*^9, 3.732279650023365*^9}, {
   3.7322798160207577`*^9, 3.732279859262353*^9}, {3.7322798928561134`*^9, 
   3.732279907677592*^9}, {3.7374595176428547`*^9, 3.7374595195617685`*^9}, {
   3.737459637178216*^9, 3.7374596487147217`*^9}, {3.7374598614780283`*^9, 
   3.7374598945997047`*^9}, {3.737460030203664*^9, 3.7374600776095343`*^9}, 
   3.7374608613699045`*^9}],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{}, 
     GraphicsComplexBox[CompressedData["
1:eJztlW1Ik1EUx6cZZaZupkKhpJgluALTiDI4txYVWkghJC7JEpXMkCzEhQjO
fKNJRJZomiijGhX0IuVMDV1mc4r5lpqP072kjs05oxK1Wc7uvbAH+tiHYAce
Hg73nN+z/fjDDTyfcSrZmcPh1K88tndlha1k4Bmhb2kKkMCfXg5h80KBtaoG
IsJtpYC1Q/p0ybAMnyvhRPAPwWLaC+Cs1kdIvmKKWxI04Pl+8F6j1X5JaIHU
FFt9At435aWFk214fwSiXK2iEnE7dHfZigH/Q1GqWvkHzJuAY9sSYwrmVHhe
A82yxA3Xg3swXwc9N40bp0J68b4eXHx3ucrkffh7k3DnXT6/WzCAedMw+70z
T/h+EPMMEF/qE3MbDWGeESp2FORqnw9jngmyj8+Eqjd/xjwzdPEv6iKzRzHP
Air8u4m/Z8p1zpEdXoj4q3vqKRkv9ULEX7rrr1eNceRcCeVusQGq7V6I+Gsr
jl56Oc9DxF9eQir/sIqHiL+65YXiuFoeIv5cFkdz+0Q8RPzl1AVZymJ5iPhD
1hv788PIvAZSsta75XEJXweXa9xFmXNcRPyJho7uOTDARcSf1C/mtaKBi4g/
8+DWpNn7XET8FXg8kT4o5CLizyfJ17kvg/BMcDf2a7AwnvDMcDDXQ8c/QngW
WF0LJzwZSEcUK3/bQPOn0fdElVVM0vw1JTmJojP1NH8hvNY356a0NH9oXRVz
tVVD87ezV6Iv0kzQ/Bk7ZorEERM0f1mVsgv1wnGavy3+QdLREjXN37Xy8dbQ
qTGav7caq9O9tDGav90F7Q/PuI/R/P3MuXV2XydD8+cdGGnwq2Zo/hprT+9V
iRmav3pxtUGWzdD8KQLkyZU5DM1fzePlTWoJQ/NXqG5OdHrE/DV/HFzEH+mJ
P/tzJe2JP/v5ftoTf/b7I7Qn/ux5E6x5DYuvY+3rWd+bZPGmWTwDi2dk8Uws
npnFs7B4Dn/2PIc/e96/9+e4fx33r+P+/f/u399SAUte
      "], {{{}, {}, {}, {}, {}, {}, {
         Directive[
          RGBColor[0.368417, 0.506779, 0.709798], 
          Opacity[0.3]], 
         LineBox[{101, 1}], 
         LineBox[{102, 2}], 
         LineBox[{103, 3}], 
         LineBox[{104, 4}], 
         LineBox[{105, 5}], 
         LineBox[{106, 6}], 
         LineBox[{107, 7}], 
         LineBox[{108, 8}], 
         LineBox[{109, 9}], 
         LineBox[{110, 10}], 
         LineBox[{111, 11}], 
         LineBox[{112, 12}], 
         LineBox[{113, 13}], 
         LineBox[{114, 14}], 
         LineBox[{115, 15}], 
         LineBox[{116, 16}], 
         LineBox[{117, 17}], 
         LineBox[{118, 18}], 
         LineBox[{119, 19}], 
         LineBox[{120, 20}]}, {}, {
         Directive[
          RGBColor[0.880722, 0.611041, 0.142051], 
          Opacity[0.3]], 
         LineBox[{81, 21}], 
         LineBox[{82, 22}], 
         LineBox[{83, 23}], 
         LineBox[{84, 24}], 
         LineBox[{85, 25}], 
         LineBox[{86, 26}], 
         LineBox[{87, 27}], 
         LineBox[{88, 28}], 
         LineBox[{89, 29}], 
         LineBox[{90, 30}], 
         LineBox[{91, 31}], 
         LineBox[{92, 32}], 
         LineBox[{93, 33}], 
         LineBox[{94, 34}], 
         LineBox[{95, 35}], 
         LineBox[{96, 36}], 
         LineBox[{97, 37}], 
         LineBox[{98, 38}], 
         LineBox[{99, 39}], 
         LineBox[{100, 40}]}, {}, {
         Directive[
          RGBColor[0.560181, 0.691569, 0.194885], 
          Opacity[0.3]], 
         LineBox[{61, 41}], 
         LineBox[{62, 42}], 
         LineBox[{63, 43}], 
         LineBox[{64, 44}], 
         LineBox[{65, 45}], 
         LineBox[{66, 46}], 
         LineBox[{67, 47}], 
         LineBox[{68, 48}], 
         LineBox[{69, 49}], 
         LineBox[{70, 50}], 
         LineBox[{71, 51}], 
         LineBox[{72, 52}], 
         LineBox[{73, 53}], 
         LineBox[{74, 54}], 
         LineBox[{75, 55}], 
         LineBox[{76, 56}], 
         LineBox[{77, 57}], 
         LineBox[{78, 58}], 
         LineBox[{79, 59}], 
         LineBox[{80, 60}]}}, {{}, {
         Hue[0.67, 0.6, 0.6], 
         Directive[
          PointSize[0.016666666666666666`], 
          RGBColor[0.368417, 0.506779, 0.709798], 
          AbsoluteThickness[1.6]], 
         PointBox[{121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132,
           133, 134, 135, 136, 137, 138, 139, 140}]}, {
         Hue[0.9060679774997897, 0.6, 0.6], 
         Directive[
          PointSize[0.016666666666666666`], 
          RGBColor[0.880722, 0.611041, 0.142051], 
          AbsoluteThickness[1.6]], 
         PointBox[{141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152,
           153, 154, 155, 156, 157, 158, 159, 160}]}, {
         Hue[0.1421359549995791, 0.6, 0.6], 
         Directive[
          PointSize[0.016666666666666666`], 
          RGBColor[0.560181, 0.691569, 0.194885], 
          AbsoluteThickness[1.6]], 
         PointBox[{161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172,
           173, 174, 175, 176, 177, 178, 179, 180}]}, {}}}], {}}, {
    DisplayFunction -> Identity, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.05]}}, AxesOrigin -> {0, 0}, 
     PlotRange -> {{0, 1.}, {0, 4.694561034894306}}, DisplayFunction -> 
     Identity, AspectRatio -> NCache[GoldenRatio^(-1), 0.6180339887498948], 
     Axes -> {True, True}, AxesLabel -> {
       FormBox["\"\[Gamma]\"", TraditionalForm], 
       FormBox["\" \"", TraditionalForm]}, AxesOrigin -> {0, 0}, 
     DisplayFunction :> Identity, Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], Method -> {}, 
     PlotRange -> {{0, 1.}, {0, 4.694561034894306}}, PlotRangeClipping -> 
     True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.05]}}, Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{
      "\"R optimal\"", "\"V optimal\"", "\"\[Lambda](R optimal)\""}, 
      "PointLegend", DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.6], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.6], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], 
                    PointBox[
                    NCache[{
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}]}, {
                    Scaled[{0.5, 0.5}]}]]}}}, AspectRatio -> Full, 
                    ImageSize -> {10, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.6], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.6], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], 
                    PointBox[
                    NCache[{
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}]}, {
                    Scaled[{0.5, 0.5}]}]]}}}, AspectRatio -> Full, ImageSize -> {\
10, 10}, PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                   GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.6], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.6], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], 
                    PointBox[
                    NCache[{
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}]}, {
                    Scaled[{0.5, 0.5}]}]]}}}, AspectRatio -> Full, 
                    ImageSize -> {10, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"PointLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.016666666666666666`", "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.016666666666666666`", "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], 
                    "RGBColor[0.880722, 0.611041, 0.142051]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.016666666666666666`", "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.37345400000000006`, 0.461046, 0.12992333333333334`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], 
                    "RGBColor[0.560181, 0.691569, 0.194885]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2, ",", #3}], "}"}], ",", 
           RowBox[{"Joined", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{"{", 
                 RowBox[{"False", ",", "False", ",", "False"}], "}"}], 
               "}"}]}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}]}], "}"}]}]}], 
         "]"}]& ), Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{3.737460759361004*^9, 3.7374608649160047`*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{"\[IndentingNewLine]", "\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{"\[Gamma]", "=", 
     RowBox[{"1", "/", "k"}]}], " ", ",", " ", 
    RowBox[{"k", "=", "1"}], ",", "...", ",", "100"}], " ", "*)"}]}]], "Input",
 CellChangeTimes->{{3.732280158929284*^9, 3.7322802120118265`*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"k", "=", 
   RowBox[{"Range", "[", 
    RowBox[{"1", ",", "30"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"gammas", "=", 
   RowBox[{"1.", "/", "k"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"calcR", "[", "lambda_", "]"}], ":=", " ", 
   RowBox[{"NSolve", "[", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{"F", " ", "lambda", " ", "r", " ", 
         SuperscriptBox["R", 
          RowBox[{
           RowBox[{"-", "1"}], "+", "lambda"}]]}], "-", 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{"r", "+", 
           SuperscriptBox["R", "lambda"]}], ")"}], "2"]}], "\[Equal]", "0"}], 
      "&&", 
      RowBox[{"R", ">", "0"}]}], ",", "R"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Ropt", "=", 
   RowBox[{"R", "/.", 
    RowBox[{"Flatten", "[", 
     RowBox[{
      RowBox[{"Map", "[", 
       RowBox[{"calcR", ",", "gammas"}], "]"}], ",", "1"}], "]"}]}]}], ";", 
  " ", 
  RowBox[{"(*", " ", 
   RowBox[{"lista", " ", "R", " ", "optimais"}], " ", "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"V", "[", 
    RowBox[{"gamma_", ",", "R_"}], "]"}], ":=", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"R", "^", "gamma"}], "/", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"R", "^", "gamma"}], "+", "r"}], ")"}]}], "*", "F"}], "-", 
    "R"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Vopt", "=", 
   RowBox[{"MapThread", "[", 
    RowBox[{"V", ",", 
     RowBox[{"{", 
      RowBox[{"gammas", ",", "Ropt"}], "}"}]}], "]"}]}], ";", " ", 
  RowBox[{"(*", " ", 
   RowBox[{"lista", " ", "V", " ", "optimais"}], " ", "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{"lambda", "=", 
   RowBox[{"Flatten", "[", 
    RowBox[{"MapThread", "[", 
     RowBox[{"Power", ",", " ", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", "Ropt", "}"}], ",", 
        RowBox[{"{", "gammas", "}"}]}], "}"}]}], "]"}], "]"}]}], ";", " ", 
  RowBox[{"(*", 
   RowBox[{"lamda", "=", 
    RowBox[{"R", "^", "gamma"}]}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{
   "gr\[AAcute]fico", " ", "com", " ", "comportamento", " ", "de", " ", "R", 
    " ", "optimal", " ", "e", " ", "V", " ", "optimal", " ", "de", " ", 
    "acordo", " ", "com", " ", "gamma"}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{"ListPlot", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"Transpose", "[", 
        RowBox[{"{", 
         RowBox[{"gammas", ",", "Vopt"}], "}"}], "]"}], ",", 
       RowBox[{"Transpose", "[", 
        RowBox[{"{", 
         RowBox[{"gammas", ",", "lambda"}], "}"}], "]"}]}], "}"}], ",", 
     RowBox[{"Filling", "->", "Axis"}], ",", 
     RowBox[{"PlotLegends", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
       "\"\<V optimal\>\"", ",", " ", "\"\<\[Lambda](R) optimal\>\""}], 
       "}"}]}]}], "]"}], " ", "*)"}], "\[IndentingNewLine]", 
  RowBox[{"ListPlot", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"Transpose", "[", 
       RowBox[{"{", 
        RowBox[{"gammas", ",", "Ropt"}], "}"}], "]"}], ",", 
      RowBox[{"Transpose", "[", 
       RowBox[{"{", 
        RowBox[{"gammas", ",", "Vopt"}], "}"}], "]"}], ",", " ", 
      RowBox[{"Transpose", "[", 
       RowBox[{"{", 
        RowBox[{"gammas", ",", "lambda"}], "}"}], "]"}]}], "}"}], ",", 
    RowBox[{"Filling", "->", "Axis"}], ",", 
    RowBox[{"AxesLabel", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{"\"\<\[Gamma]\>\"", ",", " ", "\"\< \>\""}], "}"}]}], ",", " ", 
    RowBox[{"PlotLegends", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{
      "\"\<R optimal\>\"", ",", "\"\<V optimal\>\"", ",", " ", 
       "\"\<\[Lambda](R optimal)\>\""}], "}"}]}]}], 
   "]"}]}], "\[IndentingNewLine]"}], "Input",
 CellChangeTimes->{{3.7322800502484174`*^9, 3.7322801204831114`*^9}, {
  3.7322806764032755`*^9, 3.732280693075067*^9}, {3.737459528169547*^9, 
  3.737459586674576*^9}, {3.7374597380618715`*^9, 3.737459743679257*^9}, {
  3.737460122879322*^9, 3.737460129008864*^9}, {3.737460169409234*^9, 
  3.737460272133773*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"k", "=", 
   RowBox[{"Range", "[", 
    RowBox[{"1", ",", "50"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"gammas", "=", 
    RowBox[{"1.", "/", "k"}]}], ";"}], "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"gammas", "=", 
     RowBox[{"Delete", "[", 
      RowBox[{"gammas", ",", "29"}], "]"}]}], ";"}], 
   "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"calcR", "[", "lambda_", "]"}], ":=", " ", 
   RowBox[{"NSolve", "[", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{"F", " ", "lambda", " ", "r", " ", 
         SuperscriptBox["R", 
          RowBox[{
           RowBox[{"-", "1"}], "+", "lambda"}]]}], "-", 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{"r", "+", 
           SuperscriptBox["R", "lambda"]}], ")"}], "2"]}], "\[Equal]", "0"}], 
      "&&", 
      RowBox[{"R", ">", "0"}]}], ",", "R"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Ropt", "=", 
    RowBox[{"R", "/.", 
     RowBox[{"Flatten", "[", 
      RowBox[{
       RowBox[{"Map", "[", 
        RowBox[{"calcR", ",", "gammas"}], "]"}], ",", "1"}], "]"}]}]}], ";"}],
   " ", 
  RowBox[{"(*", " ", 
   RowBox[{"lista", " ", "R", " ", "optimais"}], " ", 
   "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"V", "[", 
    RowBox[{"gamma_", ",", "R_"}], "]"}], ":=", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"R", "^", "gamma"}], "/", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"R", "^", "gamma"}], "+", "r"}], ")"}]}], "*", "F"}], "-", 
    "R"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Vopt", "=", 
    RowBox[{"MapThread", "[", 
     RowBox[{"V", ",", 
      RowBox[{"{", 
       RowBox[{"gammas", ",", "Ropt"}], "}"}]}], "]"}]}], ";"}], " ", 
  RowBox[{"(*", " ", 
   RowBox[{"lista", " ", "V", " ", "optimais"}], " ", 
   "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"lambda", "=", 
   RowBox[{"Flatten", "[", 
    RowBox[{"MapThread", "[", 
     RowBox[{"Power", ",", " ", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", "Ropt", "}"}], ",", 
        RowBox[{"{", "gammas", "}"}]}], "}"}]}], "]"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"ListPlot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"Transpose", "[", 
      RowBox[{"{", 
       RowBox[{"gammas", ",", "Ropt"}], "}"}], "]"}], ",", 
     RowBox[{"Transpose", "[", 
      RowBox[{"{", 
       RowBox[{"gammas", ",", "Vopt"}], "}"}], "]"}], ",", " ", 
     RowBox[{"Transpose", "[", 
      RowBox[{"{", 
       RowBox[{"gammas", ",", "lambda"}], "}"}], "]"}]}], "}"}], ",", 
   RowBox[{"Filling", "->", "Axis"}], ",", 
   RowBox[{"PlotLegends", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
     "\"\<R optimal\>\"", ",", "\"\<V optimal\>\"", ",", " ", 
      "\"\<\[Lambda](R) optimal\>\""}], "}"}]}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.7322807210428467`*^9, 3.7322807213831015`*^9}, {
  3.7322809769518423`*^9, 3.732280988885296*^9}, {3.7322810319260397`*^9, 
  3.7322810713259125`*^9}, {3.7322811050627728`*^9, 3.732281115180928*^9}, {
  3.7322811589098577`*^9, 3.7322811614716687`*^9}, {3.732281260212504*^9, 
  3.7322812604987106`*^9}}],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.732284320154218*^9, 3.732284321349064*^9}, {
   3.732284466493718*^9, 3.7322844896921253`*^9}, {3.7322845373528347`*^9, 
   3.732284576721677*^9}, {3.732284988000575*^9, 3.7322849986891203`*^9}, 
   3.732339998267892*^9}],

Cell[BoxData[
 RowBox[{"\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{
    "detec\[CCedilla]\[ATilde]o", " ", "dos", " ", "casos", " ", "em", " ", 
     "que", " ", "obtemos", " ", "solu\[CCedilla]\[ATilde]o"}], ",", " ", 
    RowBox[{
     RowBox[{"considerando", " ", "gammas"}], "=", 
     RowBox[{"1.", "/", "k"}]}]}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"k", "=", 
     RowBox[{"Range", "[", 
      RowBox[{"1", ",", "100"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"gammas", "=", 
     RowBox[{"1.", "/", "k"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"i", "=", "1"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"falha", "=", 
     RowBox[{"{", "}"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"posvalor", "=", 
     RowBox[{"{", "}"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"While", "[", 
     RowBox[{
      RowBox[{"i", "\[LessEqual]", 
       RowBox[{"Length", "[", "k", "]"}]}], ",", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"o", "=", " ", 
        RowBox[{"calcR", "[", 
         RowBox[{"gammas", "[", 
          RowBox[{"[", "i", "]"}], "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"falha", "=", 
        RowBox[{"Append", "[", 
         RowBox[{"falha", ",", "o"}], "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{"o", "!=", 
          RowBox[{"{", "}"}]}], ",", "\[IndentingNewLine]", 
         RowBox[{"posvalor", "=", 
          RowBox[{"Append", "[", 
           RowBox[{"posvalor", ",", "i"}], "]"}]}]}], "\[IndentingNewLine]", 
        "]"}], ";", "\[IndentingNewLine]", 
       RowBox[{"i", "=", 
        RowBox[{"i", "+", "1"}]}], ";"}]}], "]"}], ";"}], 
   "\[IndentingNewLine]", "falha", "\[IndentingNewLine]", 
   "posvalor"}]}]], "Input",
 CellChangeTimes->{{3.7322812150115366`*^9, 3.7322812640692315`*^9}, {
  3.7322841499929743`*^9, 3.7322843023125987`*^9}, {3.7322844004510107`*^9, 
  3.732284531469673*^9}, {3.7322849845631313`*^9, 3.7322849854067297`*^9}, {
  3.7323399767059717`*^9, 3.7323400167439594`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"AbsoluteTiming", "[", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"k", "=", 
    RowBox[{"Flatten", "[", 
     RowBox[{"Append", "[", 
      RowBox[{
       RowBox[{"Range", "[", 
        RowBox[{"1", ",", "28"}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"30", ",", "32", ",", "65"}], "}"}]}], "]"}], "]"}]}], ";", 
   "\[IndentingNewLine]", 
   RowBox[{"gammas", "=", 
    RowBox[{"1.", "/", "k"}]}], ";", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"calcR", "[", "l_", "]"}], ":=", " ", 
    RowBox[{"NSolve", "[", 
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{"F", " ", "l", " ", "r", " ", 
          SuperscriptBox["R", 
           RowBox[{
            RowBox[{"-", "1"}], "+", "l"}]]}], "-", 
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{"r", "+", 
            SuperscriptBox["R", "l"]}], ")"}], "2"]}], "\[Equal]", "0"}], "&&", 
       RowBox[{"R", ">", "0"}]}], ",", "R"}], "]"}]}], ";", 
   "\[IndentingNewLine]", 
   RowBox[{"Ropt", "=", 
    RowBox[{"R", "/.", 
     RowBox[{"Flatten", "[", 
      RowBox[{
       RowBox[{"Map", "[", 
        RowBox[{"calcR", ",", "gammas"}], "]"}], ",", "1"}], "]"}]}]}], ";", 
   " ", 
   RowBox[{"(*", " ", 
    RowBox[{"lista", " ", "R", " ", "optimais"}], " ", "*)"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"V", "[", 
     RowBox[{"gamma_", ",", "R_"}], "]"}], ":=", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"R", "^", "gamma"}], "/", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"R", "^", "gamma"}], "+", "r"}], ")"}]}], "*", "F"}], "-", 
     "R"}]}], ";", "\[IndentingNewLine]", 
   RowBox[{"Vopt", "=", 
    RowBox[{"MapThread", "[", 
     RowBox[{"V", ",", 
      RowBox[{"{", 
       RowBox[{"gammas", ",", "Ropt"}], "}"}]}], "]"}]}], ";", " ", 
   RowBox[{"(*", " ", 
    RowBox[{"lista", " ", "V", " ", "optimais"}], " ", "*)"}], 
   "\[IndentingNewLine]", 
   RowBox[{"lambda", "=", 
    RowBox[{"Flatten", "[", 
     RowBox[{"MapThread", "[", 
      RowBox[{"Power", ",", " ", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", "Ropt", "}"}], ",", 
         RowBox[{"{", "gammas", "}"}]}], "}"}]}], "]"}], "]"}]}], ";", " ", 
   RowBox[{"(*", 
    RowBox[{"lamda", "=", 
     RowBox[{"R", "^", "gamma"}]}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
    "gr\[AAcute]fico", " ", "com", " ", "comportamento", " ", "de", " ", "R", 
     " ", "optimal", " ", "e", " ", "V", " ", "optimal", " ", "de", " ", 
     "acordo", " ", "com", " ", "gamma"}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{"(*", " ", 
    RowBox[{"ListPlot", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"Transpose", "[", 
         RowBox[{"{", 
          RowBox[{"gammas", ",", "Vopt"}], "}"}], "]"}], ",", 
        RowBox[{"Transpose", "[", 
         RowBox[{"{", 
          RowBox[{"gammas", ",", "lambda"}], "}"}], "]"}]}], "}"}], ",", 
      RowBox[{"Filling", "->", "Axis"}], ",", 
      RowBox[{"PlotLegends", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{
        "\"\<V optimal\>\"", ",", " ", "\"\<\[Lambda](R) optimal\>\""}], 
        "}"}]}]}], "]"}], " ", "*)"}], "\[IndentingNewLine]", 
   RowBox[{"ListPlot", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"Transpose", "[", 
        RowBox[{"{", 
         RowBox[{"gammas", ",", "Ropt"}], "}"}], "]"}], ",", 
       RowBox[{"Transpose", "[", 
        RowBox[{"{", 
         RowBox[{"gammas", ",", "Vopt"}], "}"}], "]"}], ",", " ", 
       RowBox[{"Transpose", "[", 
        RowBox[{"{", 
         RowBox[{"gammas", ",", "lambda"}], "}"}], "]"}]}], "}"}], ",", 
     RowBox[{"Filling", "->", "Axis"}], ",", 
     RowBox[{"PlotLegends", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
       "\"\<R optimal\>\"", ",", "\"\<V optimal\>\"", ",", " ", 
        "\"\<\[Lambda](R) optimal\>\""}], "}"}]}]}], "]"}]}], 
  "\[IndentingNewLine]", "]"}]], "Input",
 CellChangeTimes->{{3.732288310752781*^9, 3.732288335977621*^9}, {
  3.732288416206888*^9, 3.7322884180732045`*^9}, {3.7322885583934402`*^9, 
  3.732288573246957*^9}, {3.7322888579813366`*^9, 3.732288867110783*^9}, {
  3.7322906478861084`*^9, 3.7322906490929976`*^9}, {3.7322908537226896`*^9, 
  3.7322908564636326`*^9}, {3.732290920470931*^9, 3.732290931206508*^9}, {
  3.73229100454436*^9, 3.7322910062485785`*^9}, {3.7323381323016267`*^9, 
  3.732338132454747*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"8.68815810000000077195636549731716513634`6.959527628532322", ",", 
   TemplateBox[{GraphicsBox[{{}, 
       GraphicsComplexBox[CompressedData["
1:eJztlolPFFccx5dGwIYmQKXMTkGUowhNUUwglqP9vULFttFaCCJgAUFACFDk
cFuKGkDkEAttTWixVN1FWZYgx8p9VFjlMoC00dJCwS0WBWZWji6yTTmKOO8l
Y9I/wGRfJpl882be+/3yySf5WYbF+0S8JBAIKB2B4On72ZqF/VM7ds10/QvP
shI27XYZOZo+BwfW1z1IPDOfIQub5PYHwbbXxcU2exwuFD1dvRC3yJ4+3jXK
fd8JbcMDbw8P/Qbf2ny49iggP3mj4YWP7nH/t0O/dUFc9Y+/gHl3wtrTCuN2
pyM7sge585rAN8Skx6uxH7yooOSfdzfAasyM256l29z5dSBw0yhXanvAxK1m
k1vNddDRrcyRdHdx98mh/NKpgJWtnWC8vmpge/6hRrX8Jnd/NayEmw5NJyrA
Yn1VgtA11kzh38HVUwGb76RJ7YLbwa5K3Jo1Xw616KQaLf3E1ScDx9+39x2I
bgNhVujaUwZn/fc9oJZbuHql8LU4JMJd3gzhlgYBPR6loBv1yfvhmU1c/Vfh
SOhReya+EVJNKvf8+eUVqEqR2igSGrh+SqC4cKPaJ7seonaI2zKfSGDzsSey
6Mo6rj8JnHfyNbeeqOX6E0OPvt45p9TrXH+XIY9eTWLflcNWTfoWTXoBzP3x
QOneJwbM+6BBVHiOuRBh3hW28oPDVaYI887dxYw79psizPuf3g9E9uYUwrzp
ly8W/RBNIczbb+CvE4evUQjzdjbL3Xf4EYUw7xuur01soIUI87Yx6p+57SlE
mLeDvcB3IUqIMO+Tgbdms3KFCPOu6wz5eG+pEGHeugXFxo9uCBHmHdPieWvo
VyHCvKNfyUs9w+D+qsGKOlvquSJEmLdRV1CcnyGNMO/sLOXSggWNMG8zUYSe
twONMO9uq4KyfFcaYd5e6SaTd7xohHmvjjXfdfShEeY96Wcf3/spjTDvvpnW
4MpIGmHe9t7fZMzF0wjzViAqUvIFjTBvddupSwNpNMK8h33rzDNyaIR5Rwbt
7JAW0gjzLrOMWQ4ooRHmLSvKcU4xeh39n9+vFuYZhrTOEr8Lp6/p57uqiN9T
BWOKmSmG+J3i6fFOxnGG+J2kM+rQ6MsQv40TY5e3+TPEb/cE4888Yhnid32A
6r5+DkP8rhlyUutJGeL39GPP9xa6GOJ35LbZ8IsPGeI3a53mFKrLEr9H7zs4
qKxY4vfIhOmiBbDE74cin042gCV+n2j+3O5QEkv8XvZL/l6UxxK/x2Qtxfsl
LPGbki7maRpY4rcm3cg5s48lfreND1O6Spb47V2+qD43zxK/dSzMzr+1QUX8
HrVZvfK3iYr4HaixujlroyJ+B7J7E3Y6qYjfVEzHmwoPFfG73uCNcUGwivh9
t/u7r1ZEKuL3yJZjRWFHHhO/BbylJBnz5u8Pkox587/vJBnz5v/fTjLmzT+v
iWTMm39+HcmYN/8+OcmYN//+apIxb349FSRj3vz6ZCRj3vx6pSRj3vz6r5KM
efP7KSEZ8+b3J3muP/Fz/V0mGfPm72t58+vR8ubva3nj/KLy1s7n2vlcO59r
53PMWzufv5jz+X9mld1N
        "], {{{}, {}, {}, {}, {}, {}, {
           Directive[
            RGBColor[0.368417, 0.506779, 0.709798], 
            Opacity[0.3]], 
           LineBox[{156, 1}], 
           LineBox[{157, 2}], 
           LineBox[{158, 3}], 
           LineBox[{159, 4}], 
           LineBox[{160, 5}], 
           LineBox[{161, 6}], 
           LineBox[{162, 7}], 
           LineBox[{163, 8}], 
           LineBox[{164, 9}], 
           LineBox[{165, 10}], 
           LineBox[{166, 11}], 
           LineBox[{167, 12}], 
           LineBox[{168, 13}], 
           LineBox[{169, 14}], 
           LineBox[{170, 15}], 
           LineBox[{171, 16}], 
           LineBox[{172, 17}], 
           LineBox[{173, 18}], 
           LineBox[{174, 19}], 
           LineBox[{175, 20}], 
           LineBox[{176, 21}], 
           LineBox[{177, 22}], 
           LineBox[{178, 23}], 
           LineBox[{179, 24}], 
           LineBox[{180, 25}], 
           LineBox[{181, 26}], 
           LineBox[{182, 27}], 
           LineBox[{183, 28}], 
           LineBox[{184, 29}], 
           LineBox[{185, 30}], 
           LineBox[{186, 31}]}, {}, {
           Directive[
            RGBColor[0.880722, 0.611041, 0.142051], 
            Opacity[0.3]], 
           LineBox[{125, 32}], 
           LineBox[{126, 33}], 
           LineBox[{127, 34}], 
           LineBox[{128, 35}], 
           LineBox[{129, 36}], 
           LineBox[{130, 37}], 
           LineBox[{131, 38}], 
           LineBox[{132, 39}], 
           LineBox[{133, 40}], 
           LineBox[{134, 41}], 
           LineBox[{135, 42}], 
           LineBox[{136, 43}], 
           LineBox[{137, 44}], 
           LineBox[{138, 45}], 
           LineBox[{139, 46}], 
           LineBox[{140, 47}], 
           LineBox[{141, 48}], 
           LineBox[{142, 49}], 
           LineBox[{143, 50}], 
           LineBox[{144, 51}], 
           LineBox[{145, 52}], 
           LineBox[{146, 53}], 
           LineBox[{147, 54}], 
           LineBox[{148, 55}], 
           LineBox[{149, 56}], 
           LineBox[{150, 57}], 
           LineBox[{151, 58}], 
           LineBox[{152, 59}], 
           LineBox[{153, 60}], 
           LineBox[{154, 61}], 
           LineBox[{155, 62}]}, {}, {
           Directive[
            RGBColor[0.560181, 0.691569, 0.194885], 
            Opacity[0.3]], 
           LineBox[{94, 63}], 
           LineBox[{95, 64}], 
           LineBox[{96, 65}], 
           LineBox[{97, 66}], 
           LineBox[{98, 67}], 
           LineBox[{99, 68}], 
           LineBox[{100, 69}], 
           LineBox[{101, 70}], 
           LineBox[{102, 71}], 
           LineBox[{103, 72}], 
           LineBox[{104, 73}], 
           LineBox[{105, 74}], 
           LineBox[{106, 75}], 
           LineBox[{107, 76}], 
           LineBox[{108, 77}], 
           LineBox[{109, 78}], 
           LineBox[{110, 79}], 
           LineBox[{111, 80}], 
           LineBox[{112, 81}], 
           LineBox[{113, 82}], 
           LineBox[{114, 83}], 
           LineBox[{115, 84}], 
           LineBox[{116, 85}], 
           LineBox[{117, 86}], 
           LineBox[{118, 87}], 
           LineBox[{119, 88}], 
           LineBox[{120, 89}], 
           LineBox[{121, 90}], 
           LineBox[{122, 91}], 
           LineBox[{123, 92}], 
           LineBox[{124, 93}]}}, {{}, {
           Hue[0.67, 0.6, 0.6], 
           Directive[
            PointSize[0.016666666666666666`], 
            RGBColor[0.368417, 0.506779, 0.709798], 
            AbsoluteThickness[1.6]], 
           
           PointBox[{187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 
            198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 
            211, 212, 213, 214, 215, 216, 217}]}, {
           Hue[0.9060679774997897, 0.6, 0.6], 
           Directive[
            PointSize[0.016666666666666666`], 
            RGBColor[0.880722, 0.611041, 0.142051], 
            AbsoluteThickness[1.6]], 
           
           PointBox[{218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 
            229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 
            242, 243, 244, 245, 246, 247, 248}]}, {
           Hue[0.1421359549995791, 0.6, 0.6], 
           Directive[
            PointSize[0.016666666666666666`], 
            RGBColor[0.560181, 0.691569, 0.194885], 
            AbsoluteThickness[1.6]], 
           
           PointBox[{249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 
            260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 
            273, 274, 275, 276, 277, 278, 279}]}, {}}}], {}}, {
      DisplayFunction -> Identity, PlotRangePadding -> {{
          Scaled[0.02], 
          Scaled[0.02]}, {
          Scaled[0.02], 
          Scaled[0.05]}}, AxesOrigin -> {0, 0}, 
       PlotRange -> {{0, 0.3589743589743589}, {0, 6.516087376081864}}, 
       DisplayFunction -> Identity, AspectRatio -> 
       NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
       AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
       Identity, Frame -> {{False, False}, {False, False}}, 
       FrameLabel -> {{None, None}, {None, None}}, 
       FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
       GridLines -> {None, None}, GridLinesStyle -> Directive[
         GrayLevel[0.5, 0.4]], Method -> {}, 
       PlotRange -> {{0, 0.3589743589743589}, {0, 6.516087376081864}}, 
       PlotRangeClipping -> True, PlotRangePadding -> {{
          Scaled[0.02], 
          Scaled[0.02]}, {
          Scaled[0.02], 
          Scaled[0.05]}}, Ticks -> {Automatic, Automatic}}],FormBox[
      FormBox[
       TemplateBox[{
        "\"R optimal\"", "\"V optimal\"", "\"\[Lambda](R) optimal\""}, 
        "PointLegend", DisplayFunction -> (FormBox[
          StyleBox[
           StyleBox[
            PaneBox[
             TagBox[
              GridBox[{{
                 TagBox[
                  GridBox[{{
                    GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.6], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.6], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], 
                    PointBox[
                    NCache[{
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}]}, {
                    Scaled[{0.5, 0.5}]}]]}}}, AspectRatio -> Full, 
                    ImageSize -> {10, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                    GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.6], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.6], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], 
                    PointBox[
                    NCache[{
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}]}, {
                    Scaled[{0.5, 0.5}]}]]}}}, AspectRatio -> Full, 
                    ImageSize -> {10, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                    GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.6], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.6], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], 
                    PointBox[
                    NCache[{
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}]}, {
                    Scaled[{0.5, 0.5}]}]]}}}, AspectRatio -> Full, 
                    ImageSize -> {10, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                   AutoDelete -> False, 
                   GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                   GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                   GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
               GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}},
                AutoDelete -> False, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
              "Grid"], Alignment -> Left, AppearanceElements -> None, 
             ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
             "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
           FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
           False], TraditionalForm]& ), 
        InterpretationFunction :> (RowBox[{"PointLegend", "[", 
           RowBox[{
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"PointSize", "[", "0.016666666666666666`", "]"}], 
                    ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                 ",", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"PointSize", "[", "0.016666666666666666`", "]"}], 
                    ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], 
                    "RGBColor[0.880722, 0.611041, 0.142051]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                 ",", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"PointSize", "[", "0.016666666666666666`", "]"}], 
                    ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.37345400000000006`, 0.461046, 0.12992333333333334`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], 
                    "RGBColor[0.560181, 0.691569, 0.194885]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], 
                   "]"}]}], "}"}], ",", 
             RowBox[{"{", 
               RowBox[{#, ",", #2, ",", #3}], "}"}], ",", 
             RowBox[{"Joined", "\[Rule]", 
               RowBox[{"{", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "False", ",", "False"}], "}"}], 
                 "}"}]}], ",", 
             RowBox[{"LabelStyle", "\[Rule]", 
               RowBox[{"{", "}"}]}], ",", 
             RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}], ",", 
             RowBox[{"LegendMarkers", "\[Rule]", 
               RowBox[{"{", 
                 RowBox[{
                   RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                   RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                   RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}]}], "}"}]}]}], 
           "]"}]& ), Editable -> True], TraditionalForm], TraditionalForm]},
    "Legended",
    DisplayFunction->(GridBox[{{
        TagBox[
         ItemBox[
          PaneBox[
           TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
           BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
         "SkipImageSizeLevel"], 
        ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
      GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
      AutoDelete -> False, GridBoxItemSize -> Automatic, 
      BaselinePosition -> {1, 1}]& ),
    Editable->True,
    InterpretationFunction->(RowBox[{"Legended", "[", 
       RowBox[{#, ",", 
         RowBox[{"Placed", "[", 
           RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]}], "}"}]], "Output",
 CellChangeTimes->{
  3.7322884283724804`*^9, 3.732288517657629*^9, {3.7322885690219574`*^9, 
   3.7322885832079897`*^9}, 3.7322888793834763`*^9, 3.732290351380413*^9, 
   3.7322908660083923`*^9, 3.7322909303779182`*^9, 3.732338147412323*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{"(*", " ", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"problemas", " ", "de", " ", "c\[OAcute]digo"}], " ", "&"}], " ",
     "resultado"}], " ", "\[Rule]", " ", 
   RowBox[{"brute", " ", "force", " ", "nos", " ", 
    RowBox[{"resultados", " ", ".", 
     RowBox[{"-", "."}]}]}]}], " ", "*)"}]], "Input",
 CellChangeTimes->{{3.732339950792618*^9, 3.7323399688217864`*^9}}],

Cell[BoxData[
 RowBox[{"\[IndentingNewLine]", "\[IndentingNewLine]"}]], "Input",
 CellChangeTimes->{{3.7438235193815355`*^9, 3.7438235195389805`*^9}}],

Cell[" ", "Text",
 Editable->False,
 Selectable->False,
 CellFrame->{{0, 0}, {0, 3}},
 ShowCellBracket->False,
 CellMargins->{{0, 0}, {1, 1}},
 CellElementSpacings->{"CellMinHeight"->1},
 CellFrameMargins->0,
 CellFrameColor->RGBColor[0, 0, 1],
 CellSize->{Inherited, 5}]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["n > 1: multiple jumps", "Subsection",
 CellChangeTimes->{{3.743823188592093*^9, 3.743823211771964*^9}, {
  3.743823527911565*^9, 3.743823535738095*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"F", "=", "5"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"r", "=", "0.05"}], ";"}]}], "Input",
 CellChangeTimes->{{3.743823861858639*^9, 3.7438238704683104`*^9}, {
   3.743824027655944*^9, 3.743824027878809*^9}, {3.7438292975529065`*^9, 
   3.743829334186098*^9}, {3.7438293866660633`*^9, 3.743829399547516*^9}, 
   3.7438294911272955`*^9, {3.7438302708115883`*^9, 3.743830271156429*^9}, {
   3.743833995807675*^9, 3.743833996324332*^9}, {3.743834923397805*^9, 
   3.743834923585292*^9}}],

Cell[BoxData[
 RowBox[{"\[IndentingNewLine]", 
  RowBox[{"C\[AAcute]lculo", " ", "de", " ", 
   RowBox[{
    SuperscriptBox["R", "*"], ":"}]}]}]], "Text",
 CellChangeTimes->{{3.7439253966638594`*^9, 3.7439254447037973`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"calcR", "[", 
    RowBox[{"\[Gamma]_", ",", "n_"}], "]"}], ":=", " ", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"V", ",", "d2", ",", 
       RowBox[{"i", "=", "1"}], ",", "max", ",", "ptstat", ",", "maxrelat", 
       ",", "neg", ",", "tam"}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{
       RowBox[{"V", "[", "R_", "]"}], ":=", 
       RowBox[{
        RowBox[{
         SuperscriptBox[
          RowBox[{"(", 
           FractionBox[
            SuperscriptBox["R", "\[Gamma]"], 
            RowBox[{"r", "+", 
             SuperscriptBox["R", "\[Gamma]"]}]], ")"}], "n"], " ", "*", "F"}],
         "-", "R"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"ptstat", "=", 
       RowBox[{"Flatten", "[", 
        RowBox[{"Values", "[", 
         RowBox[{"NSolve", "[", 
          RowBox[{
           RowBox[{
            RowBox[{
             RowBox[{
              RowBox[{"r", " ", "R"}], "+", 
              SuperscriptBox["R", 
               RowBox[{"1", "+", "\[Gamma]"}]], "-", 
              RowBox[{"F", " ", "n", " ", "r", " ", 
               SuperscriptBox[
                RowBox[{"(", 
                 FractionBox[
                  SuperscriptBox["R", "\[Gamma]"], 
                  RowBox[{"r", "+", 
                   SuperscriptBox["R", "\[Gamma]"]}]], ")"}], "n"], " ", 
               "\[Gamma]"}]}], "\[Equal]", "0"}], "&&", 
            RowBox[{"R", ">", "0"}]}], ",", "R"}], "]"}], "]"}], "]"}]}], ";",
       " ", 
      RowBox[{"(*", " ", 
       RowBox[{"ra\[IAcute]zes", " ", "da", " ", "1", "a", " ", "derivada"}], 
       " ", "*)"}], "\[IndentingNewLine]", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{"ptstat", "\[Equal]", 
         RowBox[{"{", "}"}]}], ",", "\[IndentingNewLine]", 
        RowBox[{"ptstat", "=", 
         RowBox[{"Flatten", "[", 
          RowBox[{"Values", "[", 
           RowBox[{"FindRoot", "[", 
            RowBox[{
             RowBox[{
              RowBox[{
               RowBox[{"r", " ", "R"}], "+", 
               SuperscriptBox["R", 
                RowBox[{"1", "+", "\[Gamma]"}]], "-", 
               RowBox[{"F", " ", "n", " ", "r", " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  FractionBox[
                   SuperscriptBox["R", "\[Gamma]"], 
                   RowBox[{"r", "+", 
                    SuperscriptBox["R", "\[Gamma]"]}]], ")"}], "n"], " ", 
                "\[Gamma]"}]}], "\[Equal]", "0"}], ",", 
             RowBox[{"{", 
              RowBox[{"R", ",", "0.5"}], "}"}]}], "]"}], "]"}], "]"}]}]}], 
       "  ", 
       RowBox[{"(*", " ", 
        RowBox[{
        "outro", " ", "m\[EAcute]todo", " ", "para", " ", "calcular", " ", 
         "ra\[IAcute]zes", " ", "da", " ", "1", "a", " ", "derivada"}], " ", 
        "*)"}], "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"d2", "[", "R_", "]"}], ":=", 
       FractionBox[
        RowBox[{"F", " ", "n", " ", "r", " ", 
         SuperscriptBox[
          RowBox[{"(", 
           FractionBox[
            SuperscriptBox["R", "\[Gamma]"], 
            RowBox[{"r", "+", 
             SuperscriptBox["R", "\[Gamma]"]}]], ")"}], "n"], " ", "\[Gamma]",
          " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{"-", 
             SuperscriptBox["R", "\[Gamma]"]}], " ", 
            RowBox[{"(", 
             RowBox[{"1", "+", "\[Gamma]"}], ")"}]}], "+", 
           RowBox[{"r", " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "1"}], "+", 
              RowBox[{"n", " ", "\[Gamma]"}]}], ")"}]}]}], ")"}]}], 
        RowBox[{
         SuperscriptBox["R", "2"], " ", 
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{"r", "+", 
            SuperscriptBox["R", "\[Gamma]"]}], ")"}], "2"]}]]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"maxrelat", "=", 
       RowBox[{
        RowBox[{
         RowBox[{"Negative", "@", 
          RowBox[{"Map", "[", 
           RowBox[{"d2", ",", "ptstat"}], "]"}]}], "//.", 
         RowBox[{"False", "\[Rule]", "0"}]}], "//.", 
        RowBox[{"True", "\[Rule]", "1"}]}]}], ";", "  ", 
      RowBox[{"(*", " ", 
       RowBox[{
        RowBox[{
        "pontos", " ", "estacion\[AAcute]rios", " ", "com", " ", "2", "a", 
         " ", "derivada"}], " ", "<", "0"}], " ", "*)"}], 
      "\[IndentingNewLine]", 
      RowBox[{"neg", "=", 
       RowBox[{"maxrelat", "*", "ptstat"}]}], ";", " ", 
      RowBox[{"(*", " ", 
       RowBox[{
        RowBox[{
         RowBox[{
         "vector", " ", "com", " ", "entradas", " ", "dadas", " ", "por", " ",
           "pontos", " ", 
          RowBox[{"est", ".", " ", "com"}], " ", "2", "a", " ", "derivada"}], 
         " ", "<", "0"}], ",", " ", 
        RowBox[{"cc", " ", "entrada", " ", "a", " ", "zero"}]}], " ", "*)"}], 
      "\[IndentingNewLine]", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"Norm", "[", "maxrelat", "]"}], "\[Equal]", "1"}], ",", " ", 
        RowBox[{"(*", " ", 
         RowBox[{
          RowBox[{
           RowBox[{"existe", " ", "apenas", " ", "1", " ", "ponto", " ", 
            RowBox[{"est", ".", " ", "com"}], " ", "2", "a", " ", 
            RowBox[{"derv", "."}]}], " ", "<", "0"}], " ", "\[Rule]", " ", 
          RowBox[{"\[EAcute]", " ", "m\[AAcute]ximo", " ", 
           RowBox[{"global", "!"}]}]}], " ", "*)"}], "\[IndentingNewLine]", 
        RowBox[{"max", "=", 
         RowBox[{"Norm", "[", 
          RowBox[{"ptstat", "*", 
           RowBox[{"neg", "/", 
            RowBox[{"Norm", "[", "neg", "]"}]}]}], "]"}]}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"max", "=", "0"}], ";", "\[IndentingNewLine]", 
         RowBox[{"tam", "=", 
          RowBox[{"Length", "[", "ptstat", "]"}]}], ";", 
         "\[IndentingNewLine]", 
         RowBox[{"While", "[", 
          RowBox[{
           RowBox[{"i", "\[LessEqual]", "tam"}], ",", " ", 
           RowBox[{"(*", " ", 
            RowBox[{
             RowBox[{
             "teste", " ", "para", " ", "escolher", " ", "qual", " ", "dos", 
              " ", "pontos", " ", 
              RowBox[{"est", ".", " ", "com"}], " ", "2", "a", " ", 
              RowBox[{"derv", "."}]}], " ", "<", 
             RowBox[{
             "0", " ", "\[EAcute]", " ", "m\[AAcute]ximo", " ", "global"}]}], 
            " ", "*)"}], "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{"If", "[", 
             RowBox[{
              RowBox[{
               RowBox[{"V", "[", 
                RowBox[{"maxrelat", "[", 
                 RowBox[{"[", "i", "]"}], "]"}], "]"}], ">", "max"}], ",", 
              "\[IndentingNewLine]", 
              RowBox[{"max", "=", 
               RowBox[{"maxrelat", "[", 
                RowBox[{"[", "i", "]"}], "]"}]}]}], "]"}], ";", 
            "\[IndentingNewLine]", 
            RowBox[{"i", "++"}]}]}], "]"}], ";"}]}], "\[IndentingNewLine]", 
       "]"}], ";", "\[IndentingNewLine]", "max"}]}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.743834867214512*^9, 3.743834884352543*^9}, {
   3.7439254547386885`*^9, 3.743925633502863*^9}, 3.7439318284997435`*^9, {
   3.743931884825986*^9, 3.7439318853366933`*^9}}],

Cell["\<\

Gerador de R^* para at\[EAcute] 5 saltos:\
\>", "Text",
 CellChangeTimes->{{3.7438350129888477`*^9, 3.7438350367888713`*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"n", "=", "1"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"RoptSaltos", "=", 
   RowBox[{"{", "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"While", "[", 
   RowBox[{
    RowBox[{"n", "\[LessEqual]", "5"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"gammas", "=", 
      RowBox[{"Rest", "[", 
       RowBox[{"Range", "[", 
        RowBox[{"0", ",", "1", ",", "0.05"}], "]"}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"Ropt", "=", 
      RowBox[{"MapThread", "[", 
       RowBox[{"calcR", ",", 
        RowBox[{"{", 
         RowBox[{"gammas", ",", " ", 
          RowBox[{"Table", "[", 
           RowBox[{"n", ",", 
            RowBox[{"{", 
             RowBox[{"i", ",", "1", ",", 
              RowBox[{"Length", "[", "gammas", "]"}]}], "}"}]}], "]"}]}], 
         "}"}]}], "]"}]}], ";", " ", 
     RowBox[{"(*", " ", 
      RowBox[{"lista", " ", "R", " ", "optimais"}], " ", "*)"}], 
     "\[IndentingNewLine]", 
     RowBox[{"RoptSaltos", "=", 
      RowBox[{"Append", "[", 
       RowBox[{"RoptSaltos", ",", "Ropt"}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"n", "++"}]}]}], "]"}], ";"}], "\[IndentingNewLine]"}], "Input",
 CellChangeTimes->{{3.7438237470275097`*^9, 3.743823771769164*^9}, {
   3.7438238489866867`*^9, 3.743823857187895*^9}, {3.743823984488617*^9, 
   3.743823994832553*^9}, {3.743824221084013*^9, 3.74382425020826*^9}, {
   3.7438242803016763`*^9, 3.743824412514151*^9}, {3.7438245057029657`*^9, 
   3.743824724743454*^9}, {3.743826756756315*^9, 3.743826778252201*^9}, {
   3.7438269472605267`*^9, 3.7438269496524086`*^9}, {3.7438270325363345`*^9, 
   3.7438270445410657`*^9}, 3.7438287929412794`*^9, 3.7438290072747383`*^9, {
   3.7438292734155464`*^9, 3.7438292907246876`*^9}, {3.74382938228463*^9, 
   3.7438294992269564`*^9}, {3.743829847624913*^9, 3.743829877860146*^9}, {
   3.7438300980089607`*^9, 3.743830115236294*^9}, {3.7438302376103463`*^9, 
   3.74383026808004*^9}, {3.7438310638178596`*^9, 3.743831067423847*^9}, 
   3.743831151050162*^9, {3.743831200727661*^9, 3.743831260434209*^9}, {
   3.7438313047002945`*^9, 3.743831305478099*^9}, {3.743831364984994*^9, 
   3.7438313652703357`*^9}, {3.7438339639688773`*^9, 
   3.7438339857804737`*^9}, {3.743834088595964*^9, 3.743834101713478*^9}, {
   3.7438341597724404`*^9, 3.743834160365174*^9}, {3.7438342857459755`*^9, 
   3.743834286417069*^9}, {3.743834486265887*^9, 3.743834486875272*^9}, {
   3.74383462490858*^9, 3.7438346254702964`*^9}, {3.7438346695013866`*^9, 
   3.743834694496128*^9}, {3.7438347279184456`*^9, 3.7438347288607416`*^9}, {
   3.7438347983537846`*^9, 3.743834800242976*^9}, {3.74383493202516*^9, 
   3.743835011567299*^9}, {3.7438350563716536`*^9, 3.7438350679360437`*^9}}],

Cell[CellGroupData[{

Cell[BoxData["gammas"], "Input",
 CellChangeTimes->{{3.7439388373329287`*^9, 3.7439388378774347`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "0.05`", ",", "0.1`", ",", "0.15000000000000002`", ",", "0.2`", ",", 
   "0.25`", ",", "0.30000000000000004`", ",", "0.35000000000000003`", ",", 
   "0.4`", ",", "0.45`", ",", "0.5`", ",", "0.55`", ",", 
   "0.6000000000000001`", ",", "0.65`", ",", "0.7000000000000001`", ",", 
   "0.75`", ",", "0.8`", ",", "0.8500000000000001`", ",", "0.9`", ",", 
   "0.9500000000000001`", ",", "1.`"}], "}"}]], "Output",
 CellChangeTimes->{3.7439388382685623`*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{"\[IndentingNewLine]", 
  RowBox[{"Plot", " ", "de", " ", 
   RowBox[{"(", 
    RowBox[{"\[Gamma]", ",", 
     SuperscriptBox["R", "*"]}], ")"}], " ", "conectando", " ", "apenas", " ",
    "valores", " ", "de", " ", 
   SuperscriptBox["R", "*"], " ", "que", " ", "se", " ", "conseguiu", " ", 
   RowBox[{"descobrir", ":"}]}]}]], "Text",
 CellChangeTimes->{{3.7438350713889885`*^9, 3.743835124111885*^9}, {
  3.743925266969121*^9, 3.7439252683809085`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{
   "ap\[OAcute]s", " ", "modifica\[CCedilla]\[ATilde]o", " ", "do", " ", 
    "calcR", " ", "alg"}], " ", "*)"}], "\[IndentingNewLine]", 
  RowBox[{"ListPlot", "[", 
   RowBox[{
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{"Transpose", "[", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"Delete", "[", 
          RowBox[{"gammas", ",", 
           RowBox[{"Position", "[", 
            RowBox[{
             RowBox[{"RoptSaltos", "[", 
              RowBox[{"[", "i", "]"}], "]"}], ",", 
             RowBox[{"_", "0"}]}], "]"}]}], "]"}], ",", 
         RowBox[{"Delete", "[", 
          RowBox[{
           RowBox[{"RoptSaltos", "[", 
            RowBox[{"[", "i", "]"}], "]"}], ",", 
           RowBox[{"Position", "[", 
            RowBox[{
             RowBox[{"RoptSaltos", "[", 
              RowBox[{"[", "i", "]"}], "]"}], ",", 
             RowBox[{"_", "0"}]}], "]"}]}], "]"}]}], "}"}], "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"i", ",", "1", ",", "5"}], "}"}]}], "]"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{"PlotLegends", "\[Rule]", 
     RowBox[{"Placed", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"Prepend", "[", 
         RowBox[{
          RowBox[{"Table", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"TextCell", "[", "i", "]"}], " ", "\"\<jumps\>\""}], ",", 
            RowBox[{"{", 
             RowBox[{"i", ",", "2", ",", "5"}], "}"}]}], "]"}], ",", 
          "\"\<1 jump\>\""}], "]"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"Scaled", "[", 
          RowBox[{"{", 
           RowBox[{"0", ",", "0.5"}], "}"}], "]"}], ",", " ", 
         RowBox[{"{", 
          RowBox[{"0", ",", " ", "0.5"}], "}"}]}], "}"}]}], "]"}]}], ",", 
    RowBox[{"AxesLabel", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{
      "\"\<\[Gamma]\>\"", ",", 
       "\"\<\!\(\*SuperscriptBox[\(R\), \(*\)]\)\>\""}], "}"}]}], ",", 
    RowBox[{"Joined", "\[Rule]", "True"}], ",", 
    RowBox[{"PlotStyle", "->", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"Darker", "[", "Blue", "]"}], ",", "Blue", ",", 
       RowBox[{"Darker", "[", "Cyan", "]"}], ",", "Cyan", ",", "Green"}], 
      "}"}]}], ",", "\[IndentingNewLine]", 
    RowBox[{"Mesh", "\[Rule]", "All"}], ",", "\[IndentingNewLine]", 
    RowBox[{"MeshStyle", "\[Rule]", 
     RowBox[{"PointSize", "[", "Medium", "]"}]}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.7439319039114113`*^9, 3.74393191637881*^9}, {
  3.743935660368244*^9, 3.7439356946181593`*^9}}],

Cell[BoxData[
 TagBox[
  GraphicsBox[{{{}, GraphicsComplexBox[CompressedData["
1:eJxF0g1Qi3EcwPHZpZqQJHSHOEVKhdyRnD/Fpfck5erIht4mvbvyMhrlbSXz
dps0hRLSLbsYmV5py1az1vvLevbWWjp1XvKSGI+f391ut3ue57fn832eJZSE
4INEAoEQ8vtj+GazDFOKPFarBFWLGejvbz5K+xLhOZHPQWtdDVOHBq3Vhxgd
pfhxIQq1++z5La4CEf5MC4pNGd793fMZfr4MvSVimHqPAEVHGaYNkX4I47/u
qMWv70TrSRMZ5+kNSPzWMD0o6Kx3UyG/Ed+nQN62+wKzRpvw8wfQ+fLIaWfs
mvH9SvTwkn661l6KX69CgRonUin/Hf5/GrSr/vRKsWcrvm8Qff0kyox4Lcf3
6VBWjlXglc3t+D496uOdoWHcDnzfMPLxf+/YZ92F7xtBzHiq0j29G9/3AUnw
+/7XLzTbvci9lQX9QmymFKQ4PYJ+7AiyFyWlEvrJ6/MmN3i9gn4+5dcz9Kvq
od81Szf+seZG6FfGLWs4liSGflYPq2jLjKXQjx3pIcF8ZdDP3P9EsyxbDv2o
FM3KW7x26BfkQJ9Hk3VCv5PkgPE1WDf0GxBfEPX090K/2yG2q0ea+qFfcklu
2QyZAnot37fC2I+JQR8b4lHqGmcV9JnIYGJtpCLoM+pmJCoIewJ9MGLi/miy
APos9j+g7dXUQx/JxqjZHK4I+jSbjihdN7VAn6b5WmzWAhn0kdSkekmH5dCD
J+DdZYd1g1+cZDG1bq0CvNsrJ5/HMDDwBlTtpLvdU4L3julnfQxXBe9LO6E9
OpGrhvcjRPpSejxHC/58nyOmh2MGwe9SKNpierYY/FF5UQHefU/BP/boJoma
Vwv+4Ll7y1mhQvCPcZjViRYt4J+ZutCuP0EG/twyM+deQRv4XyT0xErGO8G/
lbMpEpkrwN8imMNkajDwvxEyxtNpavDfuMwap1VowF/e5fixtU0Lz9svtnho
aFQH/tQpTiUs3RD4axUmkVSZHvxLKX3hlkcegJ+emG6W2/gC/NaP1WheWgP4
jw++n6FYJAZ/9U8jX2vyO/DXyInmPNv/Xpc64ej3A73g7eKcM06eg4E3blt4
Rq7zf5+JmdXFiu068HU6O2wsyRyC5ztBv7yu5r4evDkUe7urgmHwOS4inDLh
j6Bf8iFtoQ==
      "], {{{}, {}, 
        {RGBColor[0, 0, 
          NCache[
           Rational[2, 3], 0.6666666666666666]], PointSize[
         0.016666666666666666`], AbsoluteThickness[1.6], 
         LineBox[{1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 
          18, 19, 20}]}, 
        {RGBColor[0, 0, 1], PointSize[0.016666666666666666`], 
         AbsoluteThickness[1.6], 
         LineBox[{21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 
          36, 37, 38}]}, 
        {RGBColor[0, 
          NCache[
           Rational[2, 3], 0.6666666666666666], 
          NCache[
           Rational[2, 3], 0.6666666666666666]], PointSize[
         0.016666666666666666`], AbsoluteThickness[1.6], 
         LineBox[{39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 
          54}]}, 
        {RGBColor[0, 1, 1], PointSize[0.016666666666666666`], 
         AbsoluteThickness[1.6], 
         LineBox[{55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 
          70}]}, 
        {RGBColor[0, 1, 0], PointSize[0.016666666666666666`], 
         AbsoluteThickness[1.6], 
         LineBox[{71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84}]}}, {
        {PointSize[Medium], 
         PointBox[{1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 
          18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 
          35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 
          52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 
          69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 
          84}]}, {}, {}, {}, {}, {}, {}}}], {}}, 
    GeometricTransformationBox[InsetBox[
      TemplateBox[{"\"1 jump\"",RowBox[{
          InterpretationBox[
           Cell[
            BoxData[
             FormBox["2", TraditionalForm]]], 
           TextCell[2]], " ", "\"jumps\""}],RowBox[{
          InterpretationBox[
           Cell[
            BoxData[
             FormBox["3", TraditionalForm]]], 
           TextCell[3]], " ", "\"jumps\""}],RowBox[{
          InterpretationBox[
           Cell[
            BoxData[
             FormBox["4", TraditionalForm]]], 
           TextCell[4]], " ", "\"jumps\""}],RowBox[{
          InterpretationBox[
           Cell[
            BoxData[
             FormBox["5", TraditionalForm]]], 
           TextCell[5]], " ", "\"jumps\""}]},
       "PointLegend",
       DisplayFunction->(FormBox[
         StyleBox[
          StyleBox[
           PaneBox[
            TagBox[
             GridBox[{{
                TagBox[
                 GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.3], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 
                    NCache[
                    Rational[2, 3], 0.6666666666666666]]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.3], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 
                    NCache[
                    Rational[2, 3], 0.6666666666666666]]], {}}}, AspectRatio -> 
                    Full, ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.3], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 1]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.3], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 1]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.3], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 
                    NCache[
                    Rational[2, 3], 0.6666666666666666], 
                    NCache[
                    Rational[2, 3], 0.6666666666666666]]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.3], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 
                    NCache[
                    Rational[2, 3], 0.6666666666666666], 
                    NCache[
                    Rational[2, 3], 0.6666666666666666]]], {}}}, AspectRatio -> 
                    Full, ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.3], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 1, 1]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.3], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 1, 1]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.3], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 1, 0]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.3], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 1, 0]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #5}}, 
                  GridBoxAlignment -> {
                   "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                  AutoDelete -> False, 
                  GridBoxDividers -> {
                   "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                  GridBoxItemSize -> {
                   "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                  GridBoxSpacings -> {
                   "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
              GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
              AutoDelete -> False, 
              GridBoxItemSize -> {
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
              GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
             "Grid"], Alignment -> Left, AppearanceElements -> None, 
            ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
            "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
          FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
          False], TraditionalForm]& ),
       Editable->True,
       InterpretationFunction:>(RowBox[{"PointLegend", "[", 
          RowBox[{
            RowBox[{"{", 
              RowBox[{
                RowBox[{"Directive", "[", 
                  RowBox[{
                    RowBox[{"PointSize", "[", "0.016666666666666666`", "]"}], 
                    ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 0, 
                    Rational[2, 3]], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> RGBColor[0., 0., 0.4444444444444444], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], "RGBColor[0, 0, 2/3]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 0, 
                    Rational[2, 3]]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0, 0, 
                    Rational[2, 3]], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
                RowBox[{"Directive", "[", 
                  RowBox[{
                    RowBox[{"PointSize", "[", "0.016666666666666666`", "]"}], 
                    ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 0, 1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> RGBColor[0., 0., 0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], "RGBColor[0, 0, 1]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 0, 1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0, 0, 1], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
                RowBox[{"Directive", "[", 
                  RowBox[{
                    RowBox[{"PointSize", "[", "0.016666666666666666`", "]"}], 
                    ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 
                    Rational[2, 3], 
                    Rational[2, 3]], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[0., 0.4444444444444444, 0.4444444444444444], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], "RGBColor[0, 2/3, 2/3]"], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[0, 
                    Rational[2, 3], 
                    Rational[2, 3]]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0, 
                    Rational[2, 3], 
                    Rational[2, 3]], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
                RowBox[{"Directive", "[", 
                  RowBox[{
                    RowBox[{"PointSize", "[", "0.016666666666666666`", "]"}], 
                    ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 1, 1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[0., 0.6666666666666666, 0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], "RGBColor[0, 1, 1]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 1, 1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0, 1, 1], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
                RowBox[{"Directive", "[", 
                  RowBox[{
                    RowBox[{"PointSize", "[", "0.016666666666666666`", "]"}], 
                    ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 1, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> RGBColor[0., 0.6666666666666666, 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], "RGBColor[0, 1, 0]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 1, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0, 1, 0], Editable -> False, Selectable -> 
                    False]}], "]"}]}], "}"}], ",", 
            RowBox[{"{", 
              RowBox[{#, ",", #2, ",", #3, ",", #4, ",", #5}], "}"}], ",", 
            RowBox[{"Joined", "\[Rule]", 
              RowBox[{"{", 
                RowBox[{"{", 
                  
                  RowBox[{
                   "True", ",", "True", ",", "True", ",", "True", ",", 
                    "True"}], "}"}], "}"}]}], ",", 
            RowBox[{"LabelStyle", "\[Rule]", 
              RowBox[{"{", "}"}]}], ",", 
            RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}], ",", 
            RowBox[{"LegendMarkers", "\[Rule]", 
              RowBox[{"{", 
                RowBox[{
                  RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                  RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                  RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                  RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                  RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}]}], "}"}]}]}], 
          "]"}]& )], Scaled[{0, 0.5}], ImageScaled[{0, 0.5}],
      BaseStyle->{FontSize -> Larger},
      FormatType->StandardForm], {{0.059314475094412344`, 
     0.22527133359999452`}}]},
   AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
   Axes->{True, True},
   AxesLabel->{
     FormBox["\"\[Gamma]\"", TraditionalForm], 
     FormBox[
     "\"\\!\\(\\*SuperscriptBox[\\(R\\), \\(*\\)]\\)\"", TraditionalForm]},
   AxesOrigin->{0, 0},
   DisplayFunction->Identity,
   Frame->{{False, False}, {False, False}},
   FrameLabel->{{None, None}, {None, None}},
   FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
   GridLines->{None, None},
   GridLinesStyle->Directive[
     GrayLevel[0.5, 0.4]],
   ImagePadding->{{11.326531, 15.}, {12.875569, 19.}},
   Method->{},
   PlotRange->{{-0.020833333333333336`, 
    1.0208333333333333`}, {-0.020647023313807397`, 1.0117041423765625`}},
   PlotRangeClipping->True,
   PlotRangePadding->Automatic,
   Ticks->{Automatic, Automatic}],
  InterpretTemplate[Legended[
    Graphics[{{}, 
      GraphicsComplex[CompressedData["
1:eJxF0g1Qi3EcwPHZpZqQJHSHOEVKhdyRnD/Fpfck5erIht4mvbvyMhrlbSXz
dps0hRLSLbsYmV5py1az1vvLevbWWjp1XvKSGI+f391ut3ue57fn832eJZSE
4INEAoEQ8vtj+GazDFOKPFarBFWLGejvbz5K+xLhOZHPQWtdDVOHBq3Vhxgd
pfhxIQq1++z5La4CEf5MC4pNGd793fMZfr4MvSVimHqPAEVHGaYNkX4I47/u
qMWv70TrSRMZ5+kNSPzWMD0o6Kx3UyG/Ed+nQN62+wKzRpvw8wfQ+fLIaWfs
mvH9SvTwkn661l6KX69CgRonUin/Hf5/GrSr/vRKsWcrvm8Qff0kyox4Lcf3
6VBWjlXglc3t+D496uOdoWHcDnzfMPLxf+/YZ92F7xtBzHiq0j29G9/3AUnw
+/7XLzTbvci9lQX9QmymFKQ4PYJ+7AiyFyWlEvrJ6/MmN3i9gn4+5dcz9Kvq
od81Szf+seZG6FfGLWs4liSGflYPq2jLjKXQjx3pIcF8ZdDP3P9EsyxbDv2o
FM3KW7x26BfkQJ9Hk3VCv5PkgPE1WDf0GxBfEPX090K/2yG2q0ea+qFfcklu
2QyZAnot37fC2I+JQR8b4lHqGmcV9JnIYGJtpCLoM+pmJCoIewJ9MGLi/miy
APos9j+g7dXUQx/JxqjZHK4I+jSbjihdN7VAn6b5WmzWAhn0kdSkekmH5dCD
J+DdZYd1g1+cZDG1bq0CvNsrJ5/HMDDwBlTtpLvdU4L3julnfQxXBe9LO6E9
OpGrhvcjRPpSejxHC/58nyOmh2MGwe9SKNpierYY/FF5UQHefU/BP/boJoma
Vwv+4Ll7y1mhQvCPcZjViRYt4J+ZutCuP0EG/twyM+deQRv4XyT0xErGO8G/
lbMpEpkrwN8imMNkajDwvxEyxtNpavDfuMwap1VowF/e5fixtU0Lz9svtnho
aFQH/tQpTiUs3RD4axUmkVSZHvxLKX3hlkcegJ+emG6W2/gC/NaP1WheWgP4
jw++n6FYJAZ/9U8jX2vyO/DXyInmPNv/Xpc64ej3A73g7eKcM06eg4E3blt4
Rq7zf5+JmdXFiu068HU6O2wsyRyC5ztBv7yu5r4evDkUe7urgmHwOS4inDLh
j6Bf8iFtoQ==
       "], {{{}, {}, {
          Hue[0.67, 0.6, 0.6], 
          Directive[
           PointSize[0.016666666666666666`], 
           AbsoluteThickness[1.6], 
           RGBColor[0, 0, 
            Rational[2, 3]]], 
          Line[{1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18,
            19, 20}]}, {
          Hue[0.9060679774997897, 0.6, 0.6], 
          Directive[
           PointSize[0.016666666666666666`], 
           AbsoluteThickness[1.6], 
           RGBColor[0, 0, 1]], 
          
          Line[{21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 
           36, 37, 38}]}, {
          Hue[0.1421359549995791, 0.6, 0.6], 
          Directive[
           PointSize[0.016666666666666666`], 
           AbsoluteThickness[1.6], 
           RGBColor[0, 
            Rational[2, 3], 
            Rational[2, 3]]], 
          
          Line[{39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 
           54}]}, {
          Hue[0.37820393249936934`, 0.6, 0.6], 
          Directive[
           PointSize[0.016666666666666666`], 
           AbsoluteThickness[1.6], 
           RGBColor[0, 1, 1]], 
          
          Line[{55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 
           70}]}, {
          Hue[0.6142719099991583, 0.6, 0.6], 
          Directive[
           PointSize[0.016666666666666666`], 
           AbsoluteThickness[1.6], 
           RGBColor[0, 1, 0]], 
          Line[{71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84}]}}, {{
          PointSize[Medium], 
          
          Point[{1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 
           18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34,
            35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 
           51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67,
            68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 
           84}]}, {}, {}, {}, {}, {}, {}}}], {}}, {
     DisplayFunction -> Identity, PlotRangePadding -> {{
         Scaled[0.02], 
         Scaled[0.02]}, {
         Scaled[0.02], 
         Scaled[0.05]}}, AxesOrigin -> {0, 0}, 
      PlotRange -> {{0, 1.}, {0, 0.960086584092044}}, DisplayFunction -> 
      Identity, AspectRatio -> GoldenRatio^(-1), Axes -> {True, True}, 
      AxesLabel -> {"\[Gamma]", "\!\(\*SuperscriptBox[\(R\), \(*\)]\)"}, 
      AxesOrigin -> {0, 0}, DisplayFunction :> Identity, 
      Frame -> {{False, False}, {False, False}}, 
      FrameLabel -> {{None, None}, {None, None}}, 
      FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
      GridLines -> {None, None}, GridLinesStyle -> Directive[
        GrayLevel[0.5, 0.4]], Method -> {}, 
      PlotRange -> {{0, 1.}, {0, 0.960086584092044}}, PlotRangeClipping -> 
      True, PlotRangePadding -> {{
         Scaled[0.02], 
         Scaled[0.02]}, {
         Scaled[0.02], 
         Scaled[0.05]}}, Ticks -> {Automatic, Automatic}}], 
    Placed[
     Unevaluated[
      PointLegend[{
        Directive[
         PointSize[0.016666666666666666`], 
         AbsoluteThickness[1.6], 
         RGBColor[0, 0, 
          Rational[2, 3]]], 
        Directive[
         PointSize[0.016666666666666666`], 
         AbsoluteThickness[1.6], 
         RGBColor[0, 0, 1]], 
        Directive[
         PointSize[0.016666666666666666`], 
         AbsoluteThickness[1.6], 
         RGBColor[0, 
          Rational[2, 3], 
          Rational[2, 3]]], 
        Directive[
         PointSize[0.016666666666666666`], 
         AbsoluteThickness[1.6], 
         RGBColor[0, 1, 1]], 
        Directive[
         PointSize[0.016666666666666666`], 
         AbsoluteThickness[1.6], 
         RGBColor[0, 1, 0]]}, {
       "1 jump", "jumps" TextCell[2], "jumps" TextCell[3], "jumps" 
        TextCell[4], "jumps" TextCell[5]}, 
       Joined -> {{True, True, True, True, True}}, LabelStyle -> {}, 
       LegendLayout -> "Column", 
       LegendMarkers -> {{False, Automatic}, {False, Automatic}, {
         False, Automatic}, {False, Automatic}, {False, Automatic}}]], {
      Scaled[{0, 0.5}], {0, 0.5}}, Identity]]& ],
  AutoDelete->True,
  Editable->True,
  SelectWithContents->False,
  Selectable->True]], "Input",
 CellChangeTimes->{3.7439357002882347`*^9}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{
   "ap\[OAcute]s", " ", "modifica\[CCedilla]\[ATilde]o", " ", "do", " ", 
    "calcR", " ", "alg"}], " ", "*)"}], "\[IndentingNewLine]", 
  RowBox[{"Show", "[", 
   RowBox[{
    RowBox[{"ListPlot3D", "[", 
     RowBox[{
      RowBox[{"Flatten", "[", 
       RowBox[{
        RowBox[{"Table", "[", 
         RowBox[{
          RowBox[{"Transpose", "[", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"Table", "[", 
              RowBox[{"i", ",", 
               RowBox[{"{", 
                RowBox[{"j", ",", "1", ",", 
                 RowBox[{"Length", "[", 
                  RowBox[{"Delete", "[", 
                   RowBox[{"gammas", ",", 
                    RowBox[{"Position", "[", 
                    RowBox[{
                    RowBox[{"RoptSaltos", "[", 
                    RowBox[{"[", "i", "]"}], "]"}], ",", 
                    RowBox[{"_", "0"}]}], "]"}]}], "]"}], "]"}]}], "}"}]}], 
              "]"}], ",", 
             RowBox[{"Delete", "[", 
              RowBox[{"gammas", ",", 
               RowBox[{"Position", "[", 
                RowBox[{
                 RowBox[{"RoptSaltos", "[", 
                  RowBox[{"[", "i", "]"}], "]"}], ",", 
                 RowBox[{"_", "0"}]}], "]"}]}], "]"}], ",", 
             RowBox[{"Delete", "[", 
              RowBox[{
               RowBox[{"RoptSaltos", "[", 
                RowBox[{"[", "i", "]"}], "]"}], ",", 
               RowBox[{"Position", "[", 
                RowBox[{
                 RowBox[{"RoptSaltos", "[", 
                  RowBox[{"[", "i", "]"}], "]"}], ",", 
                 RowBox[{"_", "0"}]}], "]"}]}], "]"}]}], "}"}], "]"}], ",", 
          RowBox[{"{", 
           RowBox[{"i", ",", "1", ",", "5"}], "}"}]}], "]"}], ",", "1"}], 
       "]"}], "\[IndentingNewLine]", 
      RowBox[{"(*", 
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{"Transpose", "[", 
          RowBox[{"{", 
           RowBox[{"gammas", ",", 
            RowBox[{"RoptSaltos", "[", 
             RowBox[{"[", "i", "]"}], "]"}]}], "}"}], "]"}], ",", 
         RowBox[{"{", 
          RowBox[{"i", ",", "1", ",", "5"}], "}"}]}], "]"}], "*)"}], ",", 
      RowBox[{"AxesLabel", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{
        "\"\<n\>\"", ",", "\"\<\[Gamma]\>\"", ",", 
         "\"\<\!\(\*SuperscriptBox[\(R\), \(*\)]\)\>\""}], "}"}]}], ",", 
      RowBox[{"ColorFunction", "\[Rule]", "\"\<BlueGreenYellow\>\""}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"Mesh", "\[Rule]", "All"}]}], "]"}], ",", "\[IndentingNewLine]", 
    RowBox[{"ListPointPlot3D", "[", 
     RowBox[{
      RowBox[{"Flatten", "[", 
       RowBox[{
        RowBox[{"Table", "[", 
         RowBox[{
          RowBox[{"Transpose", "[", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"Table", "[", 
              RowBox[{"i", ",", 
               RowBox[{"{", 
                RowBox[{"j", ",", "1", ",", 
                 RowBox[{"Length", "[", 
                  RowBox[{"Delete", "[", 
                   RowBox[{"gammas", ",", 
                    RowBox[{"Position", "[", 
                    RowBox[{
                    RowBox[{"RoptSaltos", "[", 
                    RowBox[{"[", "i", "]"}], "]"}], ",", 
                    RowBox[{"_", "0"}]}], "]"}]}], "]"}], "]"}]}], "}"}]}], 
              "]"}], ",", 
             RowBox[{"Delete", "[", 
              RowBox[{"gammas", ",", 
               RowBox[{"Position", "[", 
                RowBox[{
                 RowBox[{"RoptSaltos", "[", 
                  RowBox[{"[", "i", "]"}], "]"}], ",", 
                 RowBox[{"_", "0"}]}], "]"}]}], "]"}], ",", 
             RowBox[{"Delete", "[", 
              RowBox[{
               RowBox[{"RoptSaltos", "[", 
                RowBox[{"[", "i", "]"}], "]"}], ",", 
               RowBox[{"Position", "[", 
                RowBox[{
                 RowBox[{"RoptSaltos", "[", 
                  RowBox[{"[", "i", "]"}], "]"}], ",", 
                 RowBox[{"_", "0"}]}], "]"}]}], "]"}]}], "}"}], "]"}], ",", 
          RowBox[{"{", 
           RowBox[{"i", ",", "1", ",", "5"}], "}"}]}], "]"}], ",", "1"}], 
       "]"}], "\[IndentingNewLine]", ",", 
      RowBox[{"PlotStyle", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"PointSize", "[", "0.013", "]"}], ",", "Black"}], "}"}]}]}], 
     "]"}]}], "\n", "]"}]}]], "Input",
 CellChangeTimes->{{3.743931944236123*^9, 3.7439319445170307`*^9}, {
  3.74393579849669*^9, 3.7439358478278103`*^9}, {3.7439358841778955`*^9, 
  3.743935934757344*^9}}],

Cell[BoxData[
 Graphics3DBox[{GraphicsComplex3DBox[CompressedData["
1:eJxdkg1Qk3Ucx+cy2CJDEzLu8qUL0kTw9a4Iz59JHYICpoSeXCFTeXEZKOhB
2srlSxYQrrcbmUstkZS44c56kqa8Fc9wg/mw4Xh9eLY929jcDa8UM7K49vy7
fr+73e4+97vP93+/7/O0rGjjTrFIJMr85/eQSJgA1Kgnpw7WLHXom+ZVwP85
BfvuZidNnNQQvmL55LSCO8r5ZsXNOrRPQ1bMnaQ/djUS/u9/NxSW+LbcT/oR
eRi4LuY45+t6wvPzJscK0j/p3fdebUF+G7wgnSg/rmwn3Hh9cgZgw7GUztNU
B8plISV6W8aRsU7kGYHjDTmPHI7pQu+xw4WPvY+6FpiR3wEZfJy0jrqB3snD
a23vLzIm9aBcN9z73XAo+xcLyvXAkcrIjE9W96JcLwzpDis47U2U64PUtFux
Q1F9KNcPqt1ye2JZP8oNgCl4j2DBq4V+s44mnknsUSNOQebcKadK4i4SLvRb
k52bLCu5jPZpsLRVP3gx+SrhQr+pDZ+Xe5e0IQ8Dn81MoA50dRAu9FuvrW8/
sMeI/DaIvNCkeDbETLjQb03OGhO3jkG5LISnvdPFHLUgzwjIZfyir3S96D12
2LBQOUvB2JDfAe/mpo8v4/rRO3kYMX5oGBgeRLlu+Dozeqm/cxjlemBvbVX9
NIZFfh/M3/ZcyHoVhzwBmCt+W74s3hHkEtLXRLmKs0rPIE7BWMJUw6nNlwgX
+uLExdvzc/Von4Z5aTtcg3wb4UJfppV5j2u0BuRhoEvity9f1U240Ffnky5u
+lMM8tvA1FyabPZZkJ8FnV73Tc3mfuS3g3HPjIdbV7DIz8Payw9+KqjgkMcN
6U2blAnf2lGuB85K7ngLtA7k90KvqDe/WOtEfj9kmn82H6x0IX8ATqbul7xV
4A7y6eT+i08bXpIcO4c4BXnVeekpQz8QLtz/9sUvpfLqFrRPw8Yn3mhQZ9GE
C/e/rVFdK57RjTwMPFY6O2a4iCFcuH9VfVj8oN6K/Da4UjRQaBq3IT8LL2tW
5UA4i/x26NZHqFQ8h/w8/EpXjJcpnMjjhi9OqMcVjTzK9UBDX+xvPVYX4cJ3
vr7w3OjomAf5/VA6Ja5W7RlF/gC0sKE5csYb5BHk/s/IhrbO3P8d4hQoi8vC
qjquEC7cP+p7J8za1472aTjovjWNnWMkXLj/tb+mrovKvYE8DDRbxOG6aCvy
2GBxKz12f8cg8rDQp/kgZG8Ehzx22PXK1vKqeCfad0NoWORHjWs9yO8BW/zC
lbWHRpHHCxPKE883n//vPsKdK2ULYj7V+5A/ALFzRO+FUn74GwTEl+Y=
    "], {
     {RGBColor[0.880722, 0.611041, 0.142051], EdgeForm[GrayLevel[0.2]], 
      Specularity[
       GrayLevel[1], 3], 
      StyleBox[GraphicsGroup3DBox[Polygon3DBox[CompressedData["
1:eJwNxNVh4gAAAFAOdylH3AXiHoh7KA6FTtAFusHNfny8R//8Pn+ajUbj31vr
bSMAJKEDzVULAFfNP2i/1wLbUKcNd6BWE+jCSBfpgVAbQXtYH4VEaYAPB31s
gOGbnYATw24HXm2AyZgSQGBEjkVQIEcESY3r1zcEivR0IskwJMHMlJ4yMwWR
VQ1DVWw+Y1FFlRF4znLcYs6wM2I05BecKHg6rmk49sEv10uewPUJRS/4D0/Y
6Qb5d7kmDUr0fENPacoQfcmkjUCWzNwyGZo1LcZkQzlQ5DCKVSVSlTCyOYtj
LYezj/7B4TnH5fUkvWc33l2v3a2uJbGmZkZ68L3Pg7f79DLTSLQ4y00UUay8
uOdZcDzFl6ttFaVjl3YRnMLTOYyjyyU6n6PQqdyyctyqDvzj1q39QLplaXxN
kmt6f+TXW7rf1vmjqF71syq/ysfzXfF4vqp9/f0fTYNCyA==
         "]]],
       Lighting->"Neutral"]}, {}, {}, {}, {}},
    VertexColors->CompressedData["
1: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
/gmoKmxnVVWMYw9LXkU5tAv/Au6r/MQ=
     "],
    VertexNormals->CompressedData["
1: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
HNP8cPQfTAxQsw==
     "]], 
   {GrayLevel[0], PointSize[0.013], Point3DBox[CompressedData["
1:eJxdkg1Qk3Ucx+cy2CJDEzLu8qUL0kTw9a4Iz59JHYICpoSeXCFTeXEZKOhB
2srlSxYQrrcbmUstkZS44c56kqa8Fc9wg/mw4Xh9eLY929jcDa8UM7K49vy7
fr+73e4+97vP93+/7/O0rGjjTrFIJMr85/eQSJgA1Kgnpw7WLHXom+ZVwP85
BfvuZidNnNQQvmL55LSCO8r5ZsXNOrRPQ1bMnaQ/djUS/u9/NxSW+LbcT/oR
eRi4LuY45+t6wvPzJscK0j/p3fdebUF+G7wgnSg/rmwn3Hh9cgZgw7GUztNU
B8plISV6W8aRsU7kGYHjDTmPHI7pQu+xw4WPvY+6FpiR3wEZfJy0jrqB3snD
a23vLzIm9aBcN9z73XAo+xcLyvXAkcrIjE9W96JcLwzpDis47U2U64PUtFux
Q1F9KNcPqt1ye2JZP8oNgCl4j2DBq4V+s44mnknsUSNOQebcKadK4i4SLvRb
k52bLCu5jPZpsLRVP3gx+SrhQr+pDZ+Xe5e0IQ8Dn81MoA50dRAu9FuvrW8/
sMeI/DaIvNCkeDbETLjQb03OGhO3jkG5LISnvdPFHLUgzwjIZfyir3S96D12
2LBQOUvB2JDfAe/mpo8v4/rRO3kYMX5oGBgeRLlu+Dozeqm/cxjlemBvbVX9
NIZFfh/M3/ZcyHoVhzwBmCt+W74s3hHkEtLXRLmKs0rPIE7BWMJUw6nNlwgX
+uLExdvzc/Von4Z5aTtcg3wb4UJfppV5j2u0BuRhoEvity9f1U240Ffnky5u
+lMM8tvA1FyabPZZkJ8FnV73Tc3mfuS3g3HPjIdbV7DIz8Payw9+KqjgkMcN
6U2blAnf2lGuB85K7ngLtA7k90KvqDe/WOtEfj9kmn82H6x0IX8ATqbul7xV
4A7y6eT+i08bXpIcO4c4BXnVeekpQz8QLtz/9sUvpfLqFrRPw8Yn3mhQZ9GE
C/e/rVFdK57RjTwMPFY6O2a4iCFcuH9VfVj8oN6K/Da4UjRQaBq3IT8LL2tW
5UA4i/x26NZHqFQ8h/w8/EpXjJcpnMjjhi9OqMcVjTzK9UBDX+xvPVYX4cJ3
vr7w3OjomAf5/VA6Ja5W7RlF/gC0sKE5csYb5BHk/s/IhrbO3P8d4hQoi8vC
qjquEC7cP+p7J8za1472aTjovjWNnWMkXLj/tb+mrovKvYE8DDRbxOG6aCvy
2GBxKz12f8cg8rDQp/kgZG8Ehzx22PXK1vKqeCfad0NoWORHjWs9yO8BW/zC
lbWHRpHHCxPKE883n//vPsKdK2ULYj7V+5A/ALFzRO+FUn74GwTEl+Y=
     "]]}},
  AutomaticImageSize->True,
  Axes->True,
  AxesLabel->{
    FormBox["\"n\"", TraditionalForm], 
    FormBox["\"\[Gamma]\"", TraditionalForm], 
    FormBox[
    "\"\\!\\(\\*SuperscriptBox[\\(R\\), \\(*\\)]\\)\"", TraditionalForm]},
  BoxRatios->{1, 1, 0.4},
  DisplayFunction->Identity,
  FaceGridsStyle->Automatic,
  ImageSize->{430.72369309763616`, 253.216332396471},
  Lighting->"Neutral",
  Method->{"DefaultBoundaryStyle" -> Directive[
      GrayLevel[0.3]], "RotationControl" -> "Globe"},
  PlotRange->{{1., 5.}, {0.05, 1.}, {0., 0.960086584092044}},
  PlotRangePadding->{
    Scaled[0.02], 
    Scaled[0.02], 
    Scaled[0.02]},
  Ticks->{Automatic, Automatic, Automatic},
  ViewPoint->{-2.6762755068627624`, -1.8063971103326462`, 1.012165446529588},
  ViewVertical->{0., 0., 1.}]], "Output",
 CellChangeTimes->{{3.7439358295678763`*^9, 3.7439358482362113`*^9}, {
  3.7439358847177515`*^9, 3.743935935247693*^9}}]
}, Open  ]],

Cell[BoxData[
 RowBox[{"\[IndentingNewLine]", "\[IndentingNewLine]"}]], "Input",
 CellChangeTimes->{{3.743931946907464*^9, 3.743931947131461*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{
   "ap\[OAcute]s", " ", "modifica\[CCedilla]\[ATilde]o", " ", "do", " ", 
    "calcR", " ", "alg"}], " ", "*)"}], "\[IndentingNewLine]", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", "lambda", "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{
      RowBox[{"lambda", "[", "gR_", "]"}], ":=", " ", 
      RowBox[{
       RowBox[{"gR", "[", 
        RowBox[{"[", "2", "]"}], "]"}], "^", 
       RowBox[{"gR", "[", 
        RowBox[{"[", "1", "]"}], "]"}]}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"Show", "[", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"ListPlot3D", "[", 
        RowBox[{
         RowBox[{"Flatten", "[", 
          RowBox[{
           RowBox[{"Table", "[", 
            RowBox[{
             RowBox[{"Transpose", "[", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{"Table", "[", 
                 RowBox[{"i", ",", 
                  RowBox[{"{", 
                   RowBox[{"j", ",", "1", ",", 
                    RowBox[{"Length", "[", 
                    RowBox[{"Delete", "[", 
                    RowBox[{"gammas", ",", 
                    RowBox[{"Position", "[", 
                    RowBox[{
                    RowBox[{"RoptSaltos", "[", 
                    RowBox[{"[", "i", "]"}], "]"}], ",", 
                    RowBox[{"_", "0"}]}], "]"}]}], "]"}], "]"}]}], "}"}]}], 
                 "]"}], ",", 
                RowBox[{"Delete", "[", 
                 RowBox[{"gammas", ",", 
                  RowBox[{"Position", "[", 
                   RowBox[{
                    RowBox[{"RoptSaltos", "[", 
                    RowBox[{"[", "i", "]"}], "]"}], ",", 
                    RowBox[{"_", "0"}]}], "]"}]}], "]"}], ",", 
                "\[IndentingNewLine]", 
                RowBox[{"Map", "[", 
                 RowBox[{"lambda", ",", 
                  RowBox[{"Transpose", "@", 
                   RowBox[{"{", 
                    RowBox[{
                    RowBox[{"Delete", "[", 
                    RowBox[{"gammas", ",", 
                    RowBox[{"Position", "[", 
                    RowBox[{
                    RowBox[{"RoptSaltos", "[", 
                    RowBox[{"[", "i", "]"}], "]"}], ",", 
                    RowBox[{"_", "0"}]}], "]"}]}], "]"}], ",", 
                    RowBox[{"Delete", "[", 
                    RowBox[{
                    RowBox[{"RoptSaltos", "[", 
                    RowBox[{"[", "i", "]"}], "]"}], ",", 
                    RowBox[{"Position", "[", 
                    RowBox[{
                    RowBox[{"RoptSaltos", "[", 
                    RowBox[{"[", "i", "]"}], "]"}], ",", 
                    RowBox[{"_", "0"}]}], "]"}]}], "]"}]}], "}"}]}]}], 
                 "]"}]}], "}"}], "]"}], ",", 
             RowBox[{"{", 
              RowBox[{"i", ",", "1", ",", "5"}], "}"}]}], "]"}], ",", "1"}], 
          "]"}], ",", "\[IndentingNewLine]", 
         RowBox[{"AxesLabel", "\[Rule]", 
          RowBox[{"{", 
           RowBox[{
           "\"\<n\>\"", ",", "\"\<\[Gamma]\>\"", ",", 
            "\"\<\[Lambda](\!\(\*SuperscriptBox[\(R\), \(*\)]\))\>\""}], 
           "}"}]}], ",", 
         RowBox[{"ColorFunction", "\[Rule]", "\"\<BlueGreenYellow\>\""}], ",",
          "\[IndentingNewLine]", 
         RowBox[{"Mesh", "\[Rule]", "All"}]}], "]"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"ListPointPlot3D", "[", 
        RowBox[{
         RowBox[{"Flatten", "[", 
          RowBox[{
           RowBox[{"Table", "[", 
            RowBox[{
             RowBox[{"Transpose", "[", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{"Table", "[", 
                 RowBox[{"i", ",", 
                  RowBox[{"{", 
                   RowBox[{"j", ",", "1", ",", 
                    RowBox[{"Length", "[", 
                    RowBox[{"Delete", "[", 
                    RowBox[{"gammas", ",", 
                    RowBox[{"Position", "[", 
                    RowBox[{
                    RowBox[{"RoptSaltos", "[", 
                    RowBox[{"[", "i", "]"}], "]"}], ",", 
                    RowBox[{"_", "0"}]}], "]"}]}], "]"}], "]"}]}], "}"}]}], 
                 "]"}], ",", 
                RowBox[{"Delete", "[", 
                 RowBox[{"gammas", ",", 
                  RowBox[{"Position", "[", 
                   RowBox[{
                    RowBox[{"RoptSaltos", "[", 
                    RowBox[{"[", "i", "]"}], "]"}], ",", 
                    RowBox[{"_", "0"}]}], "]"}]}], "]"}], ",", 
                "\[IndentingNewLine]", 
                RowBox[{"Map", "[", 
                 RowBox[{"lambda", ",", 
                  RowBox[{"Transpose", "@", 
                   RowBox[{"{", 
                    RowBox[{
                    RowBox[{"Delete", "[", 
                    RowBox[{"gammas", ",", 
                    RowBox[{"Position", "[", 
                    RowBox[{
                    RowBox[{"RoptSaltos", "[", 
                    RowBox[{"[", "i", "]"}], "]"}], ",", 
                    RowBox[{"_", "0"}]}], "]"}]}], "]"}], ",", 
                    RowBox[{"Delete", "[", 
                    RowBox[{
                    RowBox[{"RoptSaltos", "[", 
                    RowBox[{"[", "i", "]"}], "]"}], ",", 
                    RowBox[{"Position", "[", 
                    RowBox[{
                    RowBox[{"RoptSaltos", "[", 
                    RowBox[{"[", "i", "]"}], "]"}], ",", 
                    RowBox[{"_", "0"}]}], "]"}]}], "]"}]}], "}"}]}]}], 
                 "]"}]}], "}"}], "]"}], ",", 
             RowBox[{"{", 
              RowBox[{"i", ",", "1", ",", "5"}], "}"}]}], "]"}], ",", "1"}], 
          "]"}], "\[IndentingNewLine]", ",", 
         RowBox[{"PlotStyle", "\[Rule]", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"PointSize", "[", "0.013", "]"}], ",", "Black"}], 
           "}"}]}]}], "]"}]}], "\[IndentingNewLine]", "]"}]}]}], 
   "\[IndentingNewLine]", "]"}]}]], "Input",
 CellChangeTimes->{{3.743931965812585*^9, 3.7439319661045265`*^9}, {
  3.743936088686824*^9, 3.7439361126768093`*^9}}],

Cell[BoxData[
 Graphics3DBox[{GraphicsComplex3DBox[CompressedData["
1:eJxdkn9MlHUcxw/U0PSwH2wpGQaTmlhO5cQg680fiYoIm9Fwmp6EYHLuGkRO
T47ZubK2W0ZdCchlihYUbbRgcbOVCGIHpLATubMDnrvn4flxB8eZykKmK5bf
h/X5brfbXvvs9f7s/Xni33pnW2GkRqPJ/fc3S8NeGDXV068BxzztyckuBf/n
DojCtUxbtahyXfL0a0ejIeLwllKBzDuR9HjbhXzJr/L//nuRHlXrLWvzEY8L
8X1W4biPU/m+oul3AwVdY8ctOo74PTDUNOxv3jms8j96pp8XG1sSzv358RDJ
5XDk5HDbCmmQeHy4or8fcap4kOzDQ/vB5W/f1A4Sv4DsrZX61C4v2VNE/7Mv
K0vsXpIro/1M3rpui5fkKhiy2JWGQ16SG8RrTa2FNeVekjsKY+ODJ4esNDeE
1rhf90TU09wwrj7s4+GB09l9bT5zWtrpAOEOFORZb43cklTO7tsbkzG7OEUk
807Y9n13Y/HsEZWz+0a7b19pThKIx4Vortz13gle5ey+A1V7rcF4nvg9aDia
2rZpwK9ydl/93ktPxdb7SS6HkPu2ft4JP/H48HmL93riR36yD4+OyW2V735K
/QJMz+xvqjvvJ3uKGBZeNAqXaa6M7QvSBy6O01wFv6fs8s5L4Il/FDvMY68/
V8sTTxhLI02GNStZb3PVe908sN6/4Ikg4Q5s/nE8K+NnWeXsXgvXZ7l3viqR
eSfslReLSjaIKmf3WvdlU8fo6RHiceGzm7qv1qyd4exe2eHBVSsn6J4eGK+V
T024BeLnEJGWM+dwQCB+Hlt+qTi2O4P6RejL3QeN7hHikTGHu5d7drVIchXU
b51fMssmEn8QndtDvcIDkfhDcLsKbdUBifjDqM08ONf4NuvzMbV/+6Lnm4/o
g4Q7sPvQjpTWVxSVs/611oKlT9+RyLwT/BulFbrEGc7674hZXNz5jUg8LlRP
lk3V5M9w1n/08rU95o0i8XuQsCrWsihHJH4Oezrvjhd8T/08vohpTQvkSsQv
ojkpuyv1JZl4ZEz2D0iWC7QfBWV5f5kmNs30wL7zR07KmS0VAeIPoctwJvr9
xCDxh3GJi9IbXIzHqP3f/+mHhbFVlDuQnnd3s/1rReWs/3PJ2aecJpnMO1F3
vW5+YY+kcta/bvlElXRAIh4XVucvWRaXIRGPBznnzz4aWUI9HIr+jjLbtTLx
8Pit33T1kymZzMsYUrobc/sCxK/ghfys6GUfBoknCO2ue32ZG0ZVznrurjKX
3tGOEX8YK+I0R6McIfwDjqaeGw==
    "], {
     {RGBColor[0.880722, 0.611041, 0.142051], EdgeForm[GrayLevel[0.2]], 
      Specularity[
       GrayLevel[1], 3], 
      StyleBox[GraphicsGroup3DBox[Polygon3DBox[CompressedData["
1:eJwNxNVh4gAAAFAOdylH3AXiHoh7KA6FTtAFusHNfny8R//8Pn+ajUbj31vr
bSMAJKEDzVULAFfNP2i/1wLbUKcNd6BWE+jCSBfpgVAbQXtYH4VEaYAPB31s
gOGbnYATw24HXm2AyZgSQGBEjkVQIEcESY3r1zcEivR0IskwJMHMlJ4yMwWR
VQ1DVWw+Y1FFlRF4znLcYs6wM2I05BecKHg6rmk49sEv10uewPUJRS/4D0/Y
6Qb5d7kmDUr0fENPacoQfcmkjUCWzNwyGZo1LcZkQzlQ5DCKVSVSlTCyOYtj
LYezj/7B4TnH5fUkvWc33l2v3a2uJbGmZkZ68L3Pg7f79DLTSLQ4y00UUay8
uOdZcDzFl6ttFaVjl3YRnMLTOYyjyyU6n6PQqdyyctyqDvzj1q39QLplaXxN
kmt6f+TXW7rf1vmjqF71syq/ysfzXfF4vqp9/f0fTYNCyA==
         "]]],
       Lighting->"Neutral"]}, {}, {}, {}, {}},
    VertexColors->CompressedData["
1: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
24/YoGRSx6j9AMs6xfUq4YP4P4O09RA=
     "],
    VertexNormals->CompressedData["
1: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
SX3z8A/ZeDST
     "]], 
   {GrayLevel[0], PointSize[0.013], Point3DBox[CompressedData["
1:eJxdkn9MlHUcxw/U0PSwH2wpGQaTmlhO5cQg680fiYoIm9Fwmp6EYHLuGkRO
T47ZubK2W0ZdCchlihYUbbRgcbOVCGIHpLATubMDnrvn4flxB8eZykKmK5bf
h/X5brfbXvvs9f7s/Xni33pnW2GkRqPJ/fc3S8NeGDXV068BxzztyckuBf/n
DojCtUxbtahyXfL0a0ejIeLwllKBzDuR9HjbhXzJr/L//nuRHlXrLWvzEY8L
8X1W4biPU/m+oul3AwVdY8ctOo74PTDUNOxv3jms8j96pp8XG1sSzv358RDJ
5XDk5HDbCmmQeHy4or8fcap4kOzDQ/vB5W/f1A4Sv4DsrZX61C4v2VNE/7Mv
K0vsXpIro/1M3rpui5fkKhiy2JWGQ16SG8RrTa2FNeVekjsKY+ODJ4esNDeE
1rhf90TU09wwrj7s4+GB09l9bT5zWtrpAOEOFORZb43cklTO7tsbkzG7OEUk
807Y9n13Y/HsEZWz+0a7b19pThKIx4Vortz13gle5ey+A1V7rcF4nvg9aDia
2rZpwK9ydl/93ktPxdb7SS6HkPu2ft4JP/H48HmL93riR36yD4+OyW2V735K
/QJMz+xvqjvvJ3uKGBZeNAqXaa6M7QvSBy6O01wFv6fs8s5L4Il/FDvMY68/
V8sTTxhLI02GNStZb3PVe908sN6/4Ikg4Q5s/nE8K+NnWeXsXgvXZ7l3viqR
eSfslReLSjaIKmf3WvdlU8fo6RHiceGzm7qv1qyd4exe2eHBVSsn6J4eGK+V
T024BeLnEJGWM+dwQCB+Hlt+qTi2O4P6RejL3QeN7hHikTGHu5d7drVIchXU
b51fMssmEn8QndtDvcIDkfhDcLsKbdUBifjDqM08ONf4NuvzMbV/+6Lnm4/o
g4Q7sPvQjpTWVxSVs/611oKlT9+RyLwT/BulFbrEGc7674hZXNz5jUg8LlRP
lk3V5M9w1n/08rU95o0i8XuQsCrWsihHJH4Oezrvjhd8T/08vohpTQvkSsQv
ojkpuyv1JZl4ZEz2D0iWC7QfBWV5f5kmNs30wL7zR07KmS0VAeIPoctwJvr9
xCDxh3GJi9IbXIzHqP3f/+mHhbFVlDuQnnd3s/1rReWs/3PJ2aecJpnMO1F3
vW5+YY+kcta/bvlElXRAIh4XVucvWRaXIRGPBznnzz4aWUI9HIr+jjLbtTLx
8Pit33T1kymZzMsYUrobc/sCxK/ghfys6GUfBoknCO2ue32ZG0ZVznrurjKX
3tGOEX8YK+I0R6McIfwDjqaeGw==
     "]]}},
  Axes->True,
  AxesLabel->{
    FormBox["\"n\"", TraditionalForm], 
    FormBox["\"\[Gamma]\"", TraditionalForm], 
    FormBox[
    "\"\[Lambda](\\!\\(\\*SuperscriptBox[\\(R\\), \\(*\\)]\\))\"", 
     TraditionalForm]},
  BoxRatios->{1, 1, 0.4},
  DisplayFunction->Identity,
  FaceGridsStyle->Automatic,
  ImageSize->{684.9807768028771, 412.22222222222223`},
  Lighting->"Neutral",
  Method->{"DefaultBoundaryStyle" -> Directive[
      GrayLevel[0.3]], "RotationControl" -> "Globe"},
  PlotRange->{{1., 5.}, {0.05, 1.}, {0.44486472906105046`, 0.960086584092044}},
  PlotRangePadding->{
    Scaled[0.02], 
    Scaled[0.02], 
    Scaled[0.02]},
  Ticks->{Automatic, Automatic, Automatic},
  ViewPoint->{3.152748306655274, -0.9983030400576861, 0.7166373944289285},
  ViewVertical->{0., 0., 1.}]], "Output",
 CellChangeTimes->{3.743936113323092*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{"\[IndentingNewLine]", "\[IndentingNewLine]"}]], "Input",
 CellChangeTimes->{{3.7439411085024333`*^9, 3.743941108635357*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{
   "ap\[OAcute]s", " ", "modifica\[CCedilla]\[ATilde]o", " ", "do", " ", 
    "calcR", " ", "alg"}], " ", "*)"}], "\[IndentingNewLine]", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"lambda", ",", "V"}], "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{
      RowBox[{"V", "[", 
       RowBox[{"\[Gamma]_", ",", "R_"}], "]"}], ":=", 
      RowBox[{
       RowBox[{
        SuperscriptBox[
         RowBox[{"(", 
          FractionBox[
           SuperscriptBox["R", "\[Gamma]"], 
           RowBox[{"r", "+", 
            SuperscriptBox["R", "\[Gamma]"]}]], ")"}], "n"], " ", "*", "F"}], 
       "-", "R"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"Show", "[", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"ListPlot3D", "[", 
        RowBox[{
         RowBox[{"Flatten", "[", 
          RowBox[{
           RowBox[{"Table", "[", 
            RowBox[{
             RowBox[{"Transpose", "[", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{"Table", "[", 
                 RowBox[{"i", ",", 
                  RowBox[{"{", 
                   RowBox[{"j", ",", "1", ",", 
                    RowBox[{"Length", "[", 
                    RowBox[{"Delete", "[", 
                    RowBox[{"gammas", ",", 
                    RowBox[{"Position", "[", 
                    RowBox[{
                    RowBox[{"RoptSaltos", "[", 
                    RowBox[{"[", "i", "]"}], "]"}], ",", 
                    RowBox[{"_", "0"}]}], "]"}]}], "]"}], "]"}]}], "}"}]}], 
                 "]"}], ",", 
                RowBox[{"Delete", "[", 
                 RowBox[{"gammas", ",", 
                  RowBox[{"Position", "[", 
                   RowBox[{
                    RowBox[{"RoptSaltos", "[", 
                    RowBox[{"[", "i", "]"}], "]"}], ",", 
                    RowBox[{"_", "0"}]}], "]"}]}], "]"}], ",", 
                "\[IndentingNewLine]", 
                RowBox[{"MapThread", "[", 
                 RowBox[{"V", ",", 
                  RowBox[{"{", 
                   RowBox[{
                    RowBox[{"Delete", "[", 
                    RowBox[{"gammas", ",", 
                    RowBox[{"Position", "[", 
                    RowBox[{
                    RowBox[{"RoptSaltos", "[", 
                    RowBox[{"[", "i", "]"}], "]"}], ",", 
                    RowBox[{"_", "0"}]}], "]"}]}], "]"}], ",", 
                    RowBox[{"Delete", "[", 
                    RowBox[{
                    RowBox[{"RoptSaltos", "[", 
                    RowBox[{"[", "i", "]"}], "]"}], ",", 
                    RowBox[{"Position", "[", 
                    RowBox[{
                    RowBox[{"RoptSaltos", "[", 
                    RowBox[{"[", "i", "]"}], "]"}], ",", 
                    RowBox[{"_", "0"}]}], "]"}]}], "]"}]}], "}"}]}], "]"}]}], 
               "}"}], "]"}], ",", 
             RowBox[{"{", 
              RowBox[{"i", ",", "1", ",", "5"}], "}"}]}], "]"}], ",", "1"}], 
          "]"}], ",", "\[IndentingNewLine]", 
         RowBox[{"AxesLabel", "\[Rule]", 
          RowBox[{"{", 
           RowBox[{
           "\"\<n\>\"", ",", "\"\<\[Gamma]\>\"", ",", 
            "\"\<V(\!\(\*SuperscriptBox[\(R\), \(*\)]\))\>\""}], "}"}]}], ",", 
         RowBox[{"ColorFunction", "\[Rule]", "\"\<BlueGreenYellow\>\""}], ",",
          "\[IndentingNewLine]", 
         RowBox[{"Mesh", "\[Rule]", "All"}]}], "]"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"ListPointPlot3D", "[", 
        RowBox[{
         RowBox[{"Flatten", "[", 
          RowBox[{
           RowBox[{"Table", "[", 
            RowBox[{
             RowBox[{"Transpose", "[", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{"Table", "[", 
                 RowBox[{"i", ",", 
                  RowBox[{"{", 
                   RowBox[{"j", ",", "1", ",", 
                    RowBox[{"Length", "[", 
                    RowBox[{"Delete", "[", 
                    RowBox[{"gammas", ",", 
                    RowBox[{"Position", "[", 
                    RowBox[{
                    RowBox[{"RoptSaltos", "[", 
                    RowBox[{"[", "i", "]"}], "]"}], ",", 
                    RowBox[{"_", "0"}]}], "]"}]}], "]"}], "]"}]}], "}"}]}], 
                 "]"}], ",", 
                RowBox[{"Delete", "[", 
                 RowBox[{"gammas", ",", 
                  RowBox[{"Position", "[", 
                   RowBox[{
                    RowBox[{"RoptSaltos", "[", 
                    RowBox[{"[", "i", "]"}], "]"}], ",", 
                    RowBox[{"_", "0"}]}], "]"}]}], "]"}], ",", 
                "\[IndentingNewLine]", 
                RowBox[{"MapThread", "[", 
                 RowBox[{"V", ",", 
                  RowBox[{"{", 
                   RowBox[{
                    RowBox[{"Delete", "[", 
                    RowBox[{"gammas", ",", 
                    RowBox[{"Position", "[", 
                    RowBox[{
                    RowBox[{"RoptSaltos", "[", 
                    RowBox[{"[", "i", "]"}], "]"}], ",", 
                    RowBox[{"_", "0"}]}], "]"}]}], "]"}], ",", 
                    RowBox[{"Delete", "[", 
                    RowBox[{
                    RowBox[{"RoptSaltos", "[", 
                    RowBox[{"[", "i", "]"}], "]"}], ",", 
                    RowBox[{"Position", "[", 
                    RowBox[{
                    RowBox[{"RoptSaltos", "[", 
                    RowBox[{"[", "i", "]"}], "]"}], ",", 
                    RowBox[{"_", "0"}]}], "]"}]}], "]"}]}], "}"}]}], "]"}]}], 
               "}"}], "]"}], ",", 
             RowBox[{"{", 
              RowBox[{"i", ",", "1", ",", "5"}], "}"}]}], "]"}], ",", "1"}], 
          "]"}], "\[IndentingNewLine]", ",", 
         RowBox[{"PlotStyle", "\[Rule]", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"PointSize", "[", "0.013", "]"}], ",", "Black"}], 
           "}"}]}]}], "]"}]}], "\[IndentingNewLine]", "]"}]}]}], 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.743931965812585*^9, 3.7439319661045265`*^9}, {
   3.743936088686824*^9, 3.7439361126768093`*^9}, {3.743941163166834*^9, 
   3.743941189688442*^9}, {3.7439412912965145`*^9, 3.743941359916512*^9}, 
   3.7439414169887724`*^9}],

Cell[BoxData[
 Graphics3DBox[{GraphicsComplex3DBox[CompressedData["
1:eJxdkg1MzHEYx68THae7//9mRKKY5qXbpJO38pzmpTRvuZmVMFE2y5EmV3ZJ
lrwUS15K3t8pJro6TFHo6lAu6rzkzuW6k87JS0vLS/K73zzPdvvv/9mzz/Pf
93teq+Rha7gcDkf259eLQ8YOuTndcwmua1y40x6JpP9zNZwpEO59m0G5xK97
ymFd31+qW0vxvgaO8GWe1d6U9zxr4H56aOeNdhZ5dJASGeMzs5rymOjueQFn
fnakLz3FIr8enH+8Uj5TUP5Y2z2vYevpkfZsGYvuGkDatWdqqi/2GCFmM4+f
wuDvMcGGE66KuM8M8jeBon7OxIA6ynu+0wznhi4oLi9h0F0LtD4fHvXpOIPu
WiFNkH/2fBqD7rbAgKiB3GdyfPcjHJK1jYoIx3dtMEMpMPnMxnft8FfnRzhH
Svo94L87x1wuQlwNuZKyjV/TKCf9bvBwDRXPx/saEI4bv+WyG+Wk35eigBXD
zCzy6MBYk3ZzpYpy0i+/1TNo8S4W+fVw9HtOl3455aTf2HmJZQ3+lJN+58pu
NkxgsccIgSm7JdWtNAfSb3J8RvEOLYP8TTB6THBmUAHlpF/1pEcKyz7Kex4W
WMvzco6Ixzlb4WjzvPzkcOz/CNwrK64ljsMeO3RWepS6cwnnOfraFu12yfeu
CHE1THM56bkkiXLSl6nJyedOAN7XQDF3Y1KeE+Wkr5qExUUlGhZ5dPBGv8nw
KZty0lfSrMMN3lEs8utBZ5kpDZKwyG+AbaoK+fVGBvlN8DxzRmTwAQb5zWCo
Si3qt4hBHgtM5a3bKfDD+Vhhx2St0mkQ9rfACINvZUqHEPltoMtc1i89V4j8
dtgVWhFikxPOOPJ/ErfMOqFEhLga4r/kqcLklJP8L1TuLGoei/c1kKC9qw38
wDo4yb9KevuqRwGLPDooE7knrt1EOcn/8nour1cgi/x6+JZ8j6nti/0G6N9Y
z8/IZ5DfBF6GhKqccAb5zaB6V1tiFTHIY4Fo57HnxO9xPlYI62wuNV6knPzP
H0hCOsIDhMhvg2R1W9d5vhD57VD3vcMjolHw732AI//CijixolCE+J/8Bxb6
/oyinOTfO+SBacoQvK+BLHX7U2Ud6+Ak/7KI0u0Hs1jk0cGXwSNWR8pY5NGD
v2t75953DPIYoF68+aC7kkEeExx73SeW6433LWDr35QdHCtEfis83B9b2kcs
RJ4W2ONye/rCzzQfkvPhvNQ2o1qA/Hb4ddHU9XKJQPobzw9U7g==
    "], {
     {RGBColor[0.880722, 0.611041, 0.142051], EdgeForm[GrayLevel[0.2]], 
      Specularity[
       GrayLevel[1], 3], 
      StyleBox[GraphicsGroup3DBox[Polygon3DBox[CompressedData["
1:eJwNxNVh4gAAAFAOdylH3AXiHoh7KA6FTtAFusHNfny8R//8Pn+ajUbj31vr
bSMAJKEDzVULAFfNP2i/1wLbUKcNd6BWE+jCSBfpgVAbQXtYH4VEaYAPB31s
gOGbnYATw24HXm2AyZgSQGBEjkVQIEcESY3r1zcEivR0IskwJMHMlJ4yMwWR
VQ1DVWw+Y1FFlRF4znLcYs6wM2I05BecKHg6rmk49sEv10uewPUJRS/4D0/Y
6Qb5d7kmDUr0fENPacoQfcmkjUCWzNwyGZo1LcZkQzlQ5DCKVSVSlTCyOYtj
LYezj/7B4TnH5fUkvWc33l2v3a2uJbGmZkZ68L3Pg7f79DLTSLQ4y00UUay8
uOdZcDzFl6ttFaVjl3YRnMLTOYyjyyU6n6PQqdyyctyqDvzj1q39QLplaXxN
kmt6f+TXW7rf1vmjqF71syq/ysfzXfF4vqp9/f0fTYNCyA==
         "]]],
       Lighting->"Neutral"]}, {}, {}, {}, {}},
    VertexColors->CompressedData["
1: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
1Q2qkV12WVvhZjBu3P0crHKrG/8B6ywe+w==
     "],
    VertexNormals->CompressedData["
1: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
QO3ZHaTQP4waTsuW5O8S/B82vQvC
     "]], 
   {GrayLevel[0], PointSize[0.013], Point3DBox[CompressedData["
1:eJxdkg1MzHEYx68THae7//9mRKKY5qXbpJO38pzmpTRvuZmVMFE2y5EmV3ZJ
lrwUS15K3t8pJro6TFHo6lAu6rzkzuW6k87JS0vLS/K73zzPdvvv/9mzz/Pf
93teq+Rha7gcDkf259eLQ8YOuTndcwmua1y40x6JpP9zNZwpEO59m0G5xK97
ymFd31+qW0vxvgaO8GWe1d6U9zxr4H56aOeNdhZ5dJASGeMzs5rymOjueQFn
fnakLz3FIr8enH+8Uj5TUP5Y2z2vYevpkfZsGYvuGkDatWdqqi/2GCFmM4+f
wuDvMcGGE66KuM8M8jeBon7OxIA6ynu+0wznhi4oLi9h0F0LtD4fHvXpOIPu
WiFNkH/2fBqD7rbAgKiB3GdyfPcjHJK1jYoIx3dtMEMpMPnMxnft8FfnRzhH
Svo94L87x1wuQlwNuZKyjV/TKCf9bvBwDRXPx/saEI4bv+WyG+Wk35eigBXD
zCzy6MBYk3ZzpYpy0i+/1TNo8S4W+fVw9HtOl3455aTf2HmJZQ3+lJN+58pu
NkxgsccIgSm7JdWtNAfSb3J8RvEOLYP8TTB6THBmUAHlpF/1pEcKyz7Kex4W
WMvzco6Ixzlb4WjzvPzkcOz/CNwrK64ljsMeO3RWepS6cwnnOfraFu12yfeu
CHE1THM56bkkiXLSl6nJyedOAN7XQDF3Y1KeE+Wkr5qExUUlGhZ5dPBGv8nw
KZty0lfSrMMN3lEs8utBZ5kpDZKwyG+AbaoK+fVGBvlN8DxzRmTwAQb5zWCo
Si3qt4hBHgtM5a3bKfDD+Vhhx2St0mkQ9rfACINvZUqHEPltoMtc1i89V4j8
dtgVWhFikxPOOPJ/ErfMOqFEhLga4r/kqcLklJP8L1TuLGoei/c1kKC9qw38
wDo4yb9KevuqRwGLPDooE7knrt1EOcn/8nour1cgi/x6+JZ8j6nti/0G6N9Y
z8/IZ5DfBF6GhKqccAb5zaB6V1tiFTHIY4Fo57HnxO9xPlYI62wuNV6knPzP
H0hCOsIDhMhvg2R1W9d5vhD57VD3vcMjolHw732AI//CijixolCE+J/8Bxb6
/oyinOTfO+SBacoQvK+BLHX7U2Ud6+Ak/7KI0u0Hs1jk0cGXwSNWR8pY5NGD
v2t75953DPIYoF68+aC7kkEeExx73SeW6433LWDr35QdHCtEfis83B9b2kcs
RJ4W2ONye/rCzzQfkvPhvNQ2o1qA/Hb4ddHU9XKJQPobzw9U7g==
     "]]}},
  Axes->True,
  AxesLabel->{
    FormBox["\"n\"", TraditionalForm], 
    FormBox["\"\[Gamma]\"", TraditionalForm], 
    FormBox[
    "\"V(\\!\\(\\*SuperscriptBox[\\(R\\), \\(*\\)]\\))\"", TraditionalForm]},
  BoxRatios->{1, 1, 0.4},
  DisplayFunction->Identity,
  FaceGridsStyle->Automatic,
  ImageSize->{613.3744074654717, 413.3333333333333},
  Lighting->"Neutral",
  Method->{"DefaultBoundaryStyle" -> Directive[
      GrayLevel[0.3]], "RotationControl" -> "Globe"},
  PlotRange->{{1., 5.}, {0.05, 1.}, {3.7924098811246263`, 4.694561034894307}},
  PlotRangePadding->{
    Scaled[0.02], 
    Scaled[0.02], 
    Scaled[0.02]},
  Ticks->{Automatic, Automatic, Automatic},
  ViewPoint->{-3.2181110148948906`, 1.0457052370167175`, -0.01618805386567421},
  ViewVertical->{0., 0., 1.}]], "Output",
 CellChangeTimes->{3.7439413608500366`*^9, 3.7439414181296873`*^9}]
}, Open  ]],

Cell[BoxData["\n"], "Input",
 CellChangeTimes->{3.7439412441109047`*^9}],

Cell[BoxData[
 RowBox[{"\[IndentingNewLine]", "\[IndentingNewLine]"}]], "Input",
 CellChangeTimes->{{3.7439319685935726`*^9, 3.743931968740492*^9}}],

Cell[" ", "Text",
 Editable->False,
 Selectable->False,
 CellFrame->{{0, 0}, {0, 3}},
 ShowCellBracket->False,
 CellMargins->{{0, 0}, {1, 1}},
 CellElementSpacings->{"CellMinHeight"->1},
 CellFrameMargins->0,
 CellFrameColor->RGBColor[0, 0, 1],
 CellSize->{Inherited, 5}],

Cell["Estudo de R optimal para n=1:", "Text",
 CellChangeTimes->{{3.743929037748047*^9, 3.743929058907114*^9}}],

Cell[BoxData[
 RowBox[{"(*", 
  RowBox[{"correr", " ", "RoptSaltos", " ", 
   RowBox[{"primeiro", "!"}]}], "*)"}]], "Input",
 CellChangeTimes->{{3.7439296225871353`*^9, 3.743929630321705*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"n", "=", "1"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"V", "[", 
    RowBox[{"\[Gamma]_", ",", "R_"}], "]"}], ":=", 
   RowBox[{
    RowBox[{
     SuperscriptBox[
      RowBox[{"(", 
       FractionBox[
        SuperscriptBox["R", "\[Gamma]"], 
        RowBox[{"r", "+", 
         SuperscriptBox["R", "\[Gamma]"]}]], ")"}], "n"], " ", "*", "F"}], 
    "-", "R"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.7439340713120985`*^9, 3.74393407368756*^9}}],

Cell[BoxData[
 RowBox[{"(*", " ", 
  RowBox[{
  "ap\[OAcute]s", " ", "modifica\[CCedilla]\[ATilde]o", " ", "do", " ", 
   "calcR", " ", "alg"}], " ", "*)"}]], "Input"],

Cell[BoxData[
 RowBox[{"Show", "[", 
  RowBox[{
   RowBox[{"Plot3D", "[", 
    RowBox[{
     RowBox[{"V", "[", 
      RowBox[{"\[Gamma]", ",", "R"}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"R", ",", "0", ",", "1"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"\[Gamma]", ",", "0", ",", "1"}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"AxesLabel", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"\"\<R\>\"", ",", "\"\<\[Gamma]\>\"", ",", "\"\<V(R)\>\""}], 
       "}"}]}], ",", 
     RowBox[{"ColorFunction", "\[Rule]", "\"\<BlueGreenYellow\>\""}]}], "]"}],
    ",", "\[IndentingNewLine]", 
   RowBox[{"ListPointPlot3D", "[", 
    RowBox[{
     RowBox[{"Transpose", "@", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"Delete", "[", 
         RowBox[{
          RowBox[{"RoptSaltos", "[", 
           RowBox[{"[", "1", "]"}], "]"}], ",", 
          RowBox[{"Position", "[", 
           RowBox[{
            RowBox[{"RoptSaltos", "[", 
             RowBox[{"[", "1", "]"}], "]"}], ",", 
            RowBox[{"_", "0"}]}], "]"}]}], "]"}], ",", 
        RowBox[{"Delete", "[", 
         RowBox[{"gammas", ",", 
          RowBox[{"Position", "[", 
           RowBox[{
            RowBox[{"RoptSaltos", "[", 
             RowBox[{"[", "1", "]"}], "]"}], ",", 
            RowBox[{"_", "0"}]}], "]"}]}], "]"}], ",", "\[IndentingNewLine]", 
        RowBox[{"MapThread", "[", 
         RowBox[{"V", ",", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"Delete", "[", 
             RowBox[{"gammas", ",", 
              RowBox[{"Position", "[", 
               RowBox[{
                RowBox[{"RoptSaltos", "[", 
                 RowBox[{"[", "1", "]"}], "]"}], ",", 
                RowBox[{"_", "0"}]}], "]"}]}], "]"}], ",", 
            RowBox[{"Delete", "[", 
             RowBox[{
              RowBox[{"RoptSaltos", "[", 
               RowBox[{"[", "1", "]"}], "]"}], ",", 
              RowBox[{"Position", "[", 
               RowBox[{
                RowBox[{"RoptSaltos", "[", 
                 RowBox[{"[", "1", "]"}], "]"}], ",", 
                RowBox[{"_", "0"}]}], "]"}]}], "]"}]}], "}"}]}], "]"}]}], 
       "}"}]}], "\[IndentingNewLine]", ",", 
     RowBox[{"PlotStyle", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"PointSize", "[", "0.02", "]"}], ",", "Black"}], "}"}]}]}], 
    "]"}]}], "\[IndentingNewLine]", "]"}]], "Input",
 CellChangeTimes->{{3.7439319805101285`*^9, 3.7439319813207254`*^9}, 
   3.7439320145602303`*^9, {3.743933766820575*^9, 3.7439337700984445`*^9}, {
   3.7439338142229*^9, 3.7439338230692787`*^9}, {3.7439338549304056`*^9, 
   3.7439338975943975`*^9}, {3.743933989766115*^9, 3.7439340140308323`*^9}}],

Cell[BoxData[
 Graphics3DBox[{GraphicsComplex3DBox[CompressedData["
1:eJyVvXdcT////99CVM9RIdlEtBQhq+exKxmFZI+UmVRG2TPR0lAhWRmJIsku
GlahKCTSQFKUFTL69X5/z+1x5/g8L7/L+/1Pl9f1/fB4Ps71PPZ5jI5z3Oyd
lRQUFHRVFRSUG/4edIw772vkaYm/y2bPOGmqrsUtNLHc3cU6UQb+vuhWd/V0
Te7km4J6Pes0xk+9qY4s99bk9C5p9zrvmsX4glc3mqSbanL3MvXP6lk/YLy0
9doV0eVSbodJZrZr4SPGv0zr+Mo7WsqNiJjzOtm1kHHtIZfGT5wo5RQV/vO/
YsY9xo1KM1WXcjOT7vnrWZcyrnjokal6uoS7On9fK+uQl4xfCp6+v9xbwrVu
u/ioa+Frxrerl2ikm0o479z+vUL0Khi/tyL928D7Yu7x1qbXkl0rGbfocy3/
00Ax17v/E9vC5HeM39e+mHjihIgLfn+0oL6+mvHiI/FBs3VEHP4bXleqHn3t
2EfKPONvStKAO5NDyTN4B72tnX0mkWfw/EGjtMubk2fweIvTaXW55Bm8h13i
01x/8gz+bXXikbIR5Bnc77te+RIF8gyuaewYF3mRPIN3njs12suDPIPHXjK8
1c6QPIM/q0tuZHyTPIOPSdw4LKcveWbxp4S86HWcPIMve+Xzl2f4a5fh22Xx
wGbMM3hlnyGtfk0hz/gr0zEeEmVKnsHbn8u2GfZNyjyDTxvdd5PvJfIMPsbx
xKgv3uQZvI2+udnhvuQZvFtyq+LOnyXMM/jMr9YLsxPIM3h2/sqTDxaSZ/Db
XsmPpnQhz+DPfN+f+5lCnsGV+hn47e9JnsGnnwlodOkIeQZX7TLzL8/wdChA
vKFTWlPmGbxKu2VtrA55Bo9fuPT+cRXyjL9jegQ/3fuYPIMP/aCzqOtB8gyu
tv7D51xn8gxeK7tTul2fPIMP1mrZ26acPINrT1keEnOEPIPfihs69/Mc8gz+
ocu+qBXtyTP4DPdt4XHJ5Bk8e0ex32xj8gx++du0joMOk2fwqLl9//IMH0LP
4OefaQysvyNlnsG7zQrs3fmhlHkGz48uux93ljzjb7tZyjfObCXP4EqfVryZ
MI48g89tbDYpoAV5Bv/y/aH1swLyDO5g2apfu73kGbzZ1n5Tnk0hz+AzB1Wt
cm9FnsF39NnWq188eQYvXRfVrUU38gx+TPdMj6sHyDO4aYz4L894bqFn8Knx
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
cQf+G54kEv//jhfAWX1zLua/83jwj9+pnBxQOXcUzdehPmk1rPe+6Y2Jw5um
7pPRMedoXQfqk7Ovet9ztyWOfP6u1R3ZexXK/2gX7n3/YV+WReNfcJ8Hn5us
PEftBVsHNESxoE2aGstv8toLPHdexNfOW8yp346/KWq3w3SVaT0buNbnita2
rTXZe0G+yoqfYpDVSpPFg/mMQzofDi0vpOcFz7AIkRysonYZ9VL84gPZTV9R
+4J6qczsRtv5CRQP+Il3iVZtL1A8qJfaas5RtYqVsnkVjC8rnHqPPLOA1nuA
3/2VdKLxSimH50F9deFqtzNpbhQPm8/UVrHWGkrxgBfc1TyTaE3xoLxEnbMz
7TWI4sE8huapxEsGrSge8OBhiW3b61A8KC8F17RPJDaicopy89V8uMrKSCrX
yBf92oxvnbeeOLy+jmz000pK7wvj4toHi+z2RlA+RH9p49UeCiYB1P9Burq/
6lnGGVD+x3vc9u3I54AXFB7v5ZPO4haef/S74PlMQMzmbZ3p/YK3XGu938mV
OHymJJtXH+lO7TLKxav6Xh8NXlO9iv6tsL5FP1bI0V8VcmF/FeWL5XNBeNQP
sunrpaFx9L7Ai763Ls95TemHtwcjBrvGTKfw4KHliceWxJM3ePBfsdXZK4H6
mcgnvwd1293ZkOoN8PQ5nVb3K6LwqD+NFx1TWmpI82bgxY1nGUTsoPoc+aJo
0xWTNDOqB/Bc49q39JMpEEd9WNp5RmPtW5Sfka8urSjNstlGHPXkskN+l7Qm
EUc9uT+2yawWnagfCE9pK5/0He5H+RA81/jBNvOT1C/C32VKotsD4qlc4N8d
0K19mXaKwoM/yGnrV71fkzvQKeaVW+FR2a1S9a42IUmy8OeBWsv2UTzID4NL
PryI20r1GMq3Spffbe9XU/mCN7fZ/nNKqik8+ucrF36SKN2g8PDpbnTfecB1
qk/Qb3caJx19y0HKIV743HDl18CvdhQe/Xn/QesO+ZlQeHh+smBwy0VdaJyO
57vnvL/jm1uanP2hB3Mvu+5lHjTSTqpGHab6BO8n9uUu7+SuxJG/NmeInzo1
12TPhb/5yyNbhze0I0gn6nn9tO/D+gVQ+lFfzRurlpm3mtKPfFV+JW/u41WU
T9j+jhuLS7yjqf/M2v1JQ2r8jmpyZk2+rRhy5N95s987TMbae8f9Mw92I3rI
sRqdM//MayHfJJSOupQ/k/p7Y5y1lbr7X/6nf/LzYae5l+1Oy3bounjfNqF4
7rUvdRifv1cm/O72LNbNpeXgfTLh97KORh6p3fOjZcLvXBkd9px22RQh0491
b9bnEfWTk7490nBbt1+mJT67aGAg1ZORPinHH648IOs4ol9IzUPiZbtD0zbl
HZHZxC40trlJ9efEV1VeehPiZDW3HkYvu0B+0grKfybmJMnuqDgdqHCm/u2q
puV5e0pCWLkAd3CxfbA2NVImXAfucO3M8A9Ox/75njVaOdArrmnCP9+hfl3d
OuNV2r/z26Wvam+9Ee2VCdc/2yttfPpzR5RMuF735BKNZ52UomXC9aXVo5b4
bk7dLxOuh5xsWdXasvaATLh+D/XR7t2Kuidv/DHuKImJcvFtqOf7z4n1fkxc
afIEnwdjjskG2nkdnzKOxh3LVjbeV3z5uOxAvkG4y1XisgGnThm/ipelta22
qz1MHoaaGSzL8faX9Z6epDww9THj7u/3j1mb7C8b3zj3cpHlE8Y3ecWpdDwd
IJs9o9qgz4anjDu36Wi2JjhA9u7WwvdtpcRNLpsuNz0RKBtcN7mtqhPNgw0O
MbUxvRgo+1ARPEjzOvEJ+e43vxUFyfqErfBRVXzB+AnvSC2VJ0Gy0KrWI/ee
K2J8v3bb2DuJgTLhPJta0a0D7mE7ZZt6n3I5vIXey43Ee9avd+2UNa1171+2
n/jF1eplbhOCZR9mi803plC5uNG/f9/a8cGyCN1buWYJxLP0f02ZH3NI9n3z
1NSOJfReipQyHm0ZGSdTPfpayyuJ8nm6RYvr6yRnZP5bRHuzwqj8qmRsjXvb
J1n2xqhjdag5jdcMExv13+B1Qdbqd8BW7f5UD7B1iW5bTxbHpTHebuLO/rNn
eMn+mSfptF3p2a9NsiTXcepPB91hvLg09qFxhpcsbcrp94EHbzKuuT/09jhF
L5lxXaDR3NYUz+vziTczW+2RCecB0lOaxR284Cfz/NFOPfZXPuNuzb0ijw/x
k31vqWoxYzHxqsgI7fI5B2TCcbrZ2eqPF3V2yy6uWrZmTR8qFy1aPi3Tjjoo
E47TOxzUfHAk5vw/499J7davUjy7XVa619rjSouHjKdM+KI4PXyHzPljZEz4
VeIT7mxL0J5y7p/vBeG7Rt861iNEFiW+EHPwKZXf4zPMDRMauOra3hv6PSPu
6LO7rENAlKyb6uD1Hg8o/fku5Rb3W2yTCfuBQWPcrrxdt1k2bsHK4UeOZDOe
07e1cscHPrIO517mF4XcY7zx9tvHxS23y+ZGhW5avCGX0jl5jk672dtkMxQX
3lG9TPHLa0fk5St5PuXlT3ne5NXn8upbee2gvPIirz2V1z7Kq/fktQvy2il5
5Vpeuy+vHpZXb8trv+S1p/LqH3n9E3ntiLx2R177Lq88yusnyCsX8tpBefWA
vP6JvPpEXjmVV67ltdf/a7sgr38lr92R107J61f8r+2jvH6gvPZXXnsqrx2X
1y/6X/sJ8vqx8voh8vot8vpv/2s7Ja+9k9eOyGt35PVX/9f6XF47Iq+9kNe+
yOtX/6/9BHn9DXn9E3n9CvVVbuqKCqfZOPpW2skTMbtpfoDNW9zqqbHaRZML
jyuaqaBwi43XDo/ok2JqSxzhzT4rXNpkosm58b4Q/qhCp1RTdeIIP+Ty2sqa
T1JO625aGwWFPBbeOqku1TSbOMIXKZ5ZpHZByp3nx5MIPyj85jVTf+JsPdRU
j9EODePQqcPCmyooPKN98U7+101tpVz9f//34p99/QiPeOKyijWaW1J44f70
B8/Nf9TXl9B+/L6N0k2zJYyz8wxu5Hp4pkm4GH4eB+Gz8y+nm/oTZ/u3wvcc
5LZIuBW7oz/U179i4dekuGWY2hJH+L571noVD5dwVnx7hvDfnDpmmqoTR3j1
qM1HpjSRcLoTVd/U19P5A+GWh/xmR4oZR/hj9UMGLQwWc1X8vBvCF7n+9p+t
Qxzhh30ZblihJeZSJB5F9fV0XsHcF5MCZ0eKGEd40dDgXf3CRSx/Yl7i3A9x
2bWplD/ZvLVnYOeTAykfgp9QkNW2FlF+A7dU3OTiUkD5Cnyle9pou0OUf9j+
9Gz1zFkLKD+A/34iGdmrB+UH4T56vHdwi2rlyZMu0PsFN5tR1Vq6ht4jS/+P
ohvzZPS+wKOKHkUuVqL3xc4TePsyc/IO8g/eqmV6dxcx+WfztS9u1orCyDPq
pa5xbTXSNckzuNmuM6n26uQZPKK80+i0CinzDG4tye80+wp5Bl/S9U7K6x3k
me2jTZhXI3Mgz+Cznmq929iePAv30cMzeP/g2yMKTpFn8Kktc9wOeJJn8E6R
q29mWpBn8ANFxfOy6yj/s+8ST30f9NhMnsGtjsrcnzQjz+AWI3QSSoLJM9oj
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
C3sP9ynO5PPRkMEjzrumyw5uOS2NNCaf7eTMU9Xw6Yx41X3NsgTyeY1fTxdv
melssIJ87uTTX6Yf1OniAPI5i0//FZ1f4xwVyKcpn/4I6+4+c3zJpwKf/g9v
kmtuiMhnLp/+zPK0v+YDk3U+BxUm58qsJuXEz7tL49BtKf7W1iE5sh6XjE02
55JP/E0eaZNzNJ58xt+yabyk8J6s0qzN08ebyOc6fl1YyayNdxXsyecY7TXe
1iHZsj4r43rktSWfWXLmo5L4dH7+FnnhcAz5jOLXZ45eZTU/0JV8buHTf7Ox
a4hSb/K5mE9/n+uz+oTWUv15nE//UoexAb02kk8vPv3p8XnLLP6Y97Pm028w
RuuveT+PjcGxetaPZLWrftS7LiafQ/UNnEL08mVcad2X3UfJG/66aW7WbrmA
vP3g1xk2WajiMn8QeSvzmPrItfCBrM0mfYs+GuRtm5x5p6V8er5ofuiwaDd5
c+TXA9upv3aKn0veOD6d7xYNmtvRhLx147/T5Vc+bTysirxJMM4wd7r41pu8
fePTX+ic3n1/I/JWzKc/61PEX/N4Jm9N0l0Ln8r6N7nUwvMH9QPv957Vxzrk
iexM+qyTTqPJD/7WfsrLXa9PfvYXfqtOdn0skwb1a570g/onQ+XMIxnxv7u6
XfjEmwHkR5tf/yz5EbzBdyr5+Rl0c01hcoHM8XzAMW198vOS/646v8Sxb1oJ
+cnm0/9yR965bR7kJ4lP/+00lW91CuQnik//o9YL/pqXe2uf/SzZ9YWsm2/j
YT+9yI9f9K+xIXrPZQVlsSeie5AfT/77cl7N4m69JeQHf6sqr7sOrSA/+Cuc
F3rD/27ymy6vkzaSnxx+/fOV3xZFuvbk58K3ueF61kWybidXzi9sT34O8N/H
h38dVKH+mPz48ul/3mWicbNF5Gcpn/67NbU3R/0xz+bIp//H46i/5tny+PQm
V6xPuXqT+rcxm+8muRYWywY13Tb1uJj8YJ3tPfs2khVfqX/r/2h3sJ51sUw6
ccSJgnzyM0POfA7+pljq25su/2Mekl/v/fbC9zAnK/JzyVTxSbJriWyzdmLC
Mh3yY8KvZ1BImz+gczb5OcSnv2zh09vuTuSnBZ/+3At5G4O/kp8dfPrdmo78
a96sZ4iyr571S5lL2IGDz1bQOFf31f25hcllskjtK8cyblO+UrKIGhyiVyYz
L8vZNOsdjQuwzn/ymRX3ezwnb293zG9nHVIqczW9V7foOnm7Imd+xpRPz9qA
/KZ95pM3/NXf4XJuliV50+HTuT7m8KYXEvLmz69LMe8w0EblOnlT4NNf9yXa
PGUqeVvGp18Ud04j+yN5e8Onv3S291/zYDtHPNC2Dnkta3FESW9yPc3PKGOf
eEJIYOpHmp/x4tN7w6yt17It5HNW1cJ7ya6vZLNKn+09eot8Yn+Erc+IOWOv
k08rWd8418KXMr1uj6dXx5FPXTnzMIF8OmVvm7mlTSGfSnw6R/vmWEnMySf+
/rLwKtNtSj7f8uuOlLjYHgnnyOcMPv2Kk/VaVI8nnw/49C8YFTj+x7s/5sP5
9O+fO/Sv+a73dQcOuha+kR3a5bCmao4a8zmb3983/PO580uaks9Ho13X6Vm/
kZ0P6xvx0IJ8phzoN7UwuVw2scnWLlMOkk/sKykwsgu5fph8Hv3UyCJEr1wW
buN13HEX+fSSM99SxadTbanNo1xb8jmLT+ds3Si7pd3JZx6fzo9BFrldFMkn
/hrH9lfufIJ8XuHT/0GhdwsVW/JpyqffgzMd0P6Pea0YPv275iX+d14L3lL5
fY5d1dqf6tmMyrW50kA165C3MpOHe0Tmd8XMD/bXDP5ipu25hfyoHM/LSHat
kB2Yfzsoai35eSRn/sQmwc0kRK9SJi6u2vafcgo/KXx6HK7tz1rXjvz05NPT
1/R20O8PNJ49yq8PFDt0eDojmvzgb8zg14U/h5KfQD79U7banOz7x3yUEp/+
VWG5/52PQn474WR5Odn13/mTtvx+T83rXyvafKH5k5DkZpGuhVWyNm3ehei2
Jm/YfzTgyY7j45zI25xph+0KkytltjsOn02YS97M5cyHHOfT89jd/frCHuSt
DZ+evoEBJ/tp/TEu4NOTXtVho20JeVPh13kGvBp4c3YIefNq+niZnnWVzGn7
Ho2CAeQNf49ELwgc9se80yw+/b8qYv+ad2qso2FVmPzvfAj2L8Yo+pzNukPz
Ie8XFuiF6FXLdNwCFsYOEzEPO+XMh6jw8c+++Dm5qj158OLjH1Y672V0E/Lw
jo9fI1XVqVcOeZjNr6c9VtOr0MCHPORfPaJoHfJeNuKqsl1kL/Jgw+/bvZH7
9dbwp1Recvl+2vHRSe+rNlG/PYDvnygWicOzx0qZH6xvOV2Sddk0W5P57MrP
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
    "], {{
      {RGBColor[0.880722, 0.611041, 0.142051], EdgeForm[None], Specularity[
        GrayLevel[1], 3], 
       StyleBox[GraphicsGroup3DBox[{Polygon3DBox[CompressedData["
1:eJxFm3f8l9P7x9/3/b7PfT6lNGWGrCKjvkKISvZMaSDZe2VlRPaqqIxQRmSU
mTKKSgMZkYzsFaXslkLj93p6ncfj98d5XK/7vM+9zn3ONV7X9W520vldzssr
lcr1RaVSlfxcsqKODyUvzSqVg9Rq1Jbpx/v0U1vJg3VcS22AjpfreLjk7pJ/
qe9VtW3VZun8YyVvlLxB8iK1Fmrv6vhoyRskr5M8T6252r46HqjrtNR1Oghf
KbyJ8AFlpVJHvzeVbKr+meo/Vf2H63g97iW5ifrfVP8p6s+FRwsfIPyWfh+s
FtQ6aVwheafkz5L7q1XV9iktj5K8RPKAzONmqo1O73KEfmsiuZ3kd5qbvXX9
23Wfu3TcUv27SA6Q3EKtWTrvdrVc7WSN+07jT5J8UcdXq22p1lLHX6j/Ej3n
68JfqW+65Ilqc9R/gfrvLjxnp0l+ruMz1F9bci/1bab2uY6P1W+fSh4teYza
XOEekruWns/fQ6XSLlYqO2j8bqW/KfhW/fZ25jniHW7K/P7bqc3RO+6k3wfp
Ok11vHHme2wquYnaZ8J/qm0l3ECym657k8Y2rqlU6ktOUF93PedB6q/Ls0oe
qtZAeBvJ64K/Efh64THC/9MzNtTvu6pN1PEN6n9Scmf1n6lxO6v/WvUN0HU3
V/90PeON6ttPrU7V1+6q9rJ+20XnHMm8Sw4J7uPbXRK8Vlup/3Qdt2Jdqm9a
5u/XXm1o8PPvqjHXFJ7jEyQf1W8d1Q7T8Tq639mSd6n/MdaWWi8dXxy8R3jf
P3KPHaIxe+tad0iuo/l5sep+fm+j/s7q/1ayp66xUP3t+I7Cq4T3KryOmauD
C89l58zHbdN+3L/w/jhC7Ym0D3nHAwrv0R3TPq0WnucD9fsher766t9Ksl7h
+emm/u2qXjOd1Dej8PrdW3IjPetL6t9P8ua0RzbS2Mf4Zvp9Y8npVc/B6tzv
cpzwmtz36ZL5/NYadwjrVXLbqp9rHx0fqXEHakwryRZVr8171T856R+OX8us
dzhnfck9WLvC32r8BZINJb9SO1+4nuS1anq9yrO65lJdq5nwQPXdptZI+Cn1
PyC8lfBM4WuE9fkqTwv3r1oXjha+WgCV+KTwdcJ69MpY4QXqbMh1dNI96t+E
Z1T/QPUv4ftI/q1nfF9trPDdGrOR+l/VmMHC6wk/JzxEuInwOOHbhRsLPyM8
THhj4cnC9wo3FZ4mnOl+rYWHq2+E2hbCb6j/fuEthd8UXla4/2WNvVP9G4DV
f4OwlmDlBeHHC+/fUyRfU/+B6v9V/VPZt8K/CU9D16NDhCcKdxJeIDxeeA/h
b4SfF24r/JXwOOHdhb8Wfky4pfBs7iW8vfAHwi8I78l3E54gvI/wfOZEz/GX
8B6St6i/jvAk9d8qXFd4Sm7d+QfPo3az+teRfAU9IFxL+CXhB4W3Fn5LuJM+
VgfhjTUPb2sxdMSmoA+qxj9qzE3CtYUnCN8lvKHwROGheo6VwntKXqv7/pP2
5g8ac4lwE8nv1S4Sbiw5UtfvjJ7R9d/T8dHCq3SdlcK3C++IfVQbJLy95ArW
ovAOkuelvcq+O0Pnj1D/Cr5dYdt4quT1kmuSTpis9jO6sbAOxEadLtxZ51zF
fEp+yXWF15X8Tu1C4UaSc9ROxMRLvqHWRXiZnvNhPf/x6A+dO0v9PYX/Vf/r
wkcKLxU+t7AvwJ5drf47eAb0cWl9w+LatLROWqu5/1m/XY0+lFxY9bM1lVyi
dpNwc8k/1W4Q3lryD7XrsSuSv6tdJ7yl5Mu63iJsBFLH/bFFkr+xz4W3QPcE
z+0fkl/ruI9wfckf1fqiMyTvKWzfzpBco+M71d9Gcq3aXdgNNj17Ff0vvEpt
KPeVnKd2sfB66N3CNvScwvoQ+3mm8FmFfY32kos17kZsnOR8tUuFN2DOgu3b
btF2tV2yrSOD9dnu6t+ztK05v/S6miv8juRk/fYmzxj9vT5X/wzJvUrboAsk
91DrIHy8ZDu1fYRPlOyhdhL+meRLOv8VXecf4aeEhwovFh4r/AzrVPgZ4YeE
lwrfomd7lm+nvjlq/6KzJD9Q+wddJjlL7RvhepLvqf0iXF/yDbUP07qbLfw3
Ok7yI7WoeVpf8gu1RsmO1NIa+kJj1uU8tQML2+uv9By7ag32krxW7Qm9y3Wl
z5ukZztW5zyu53xfuKXG3yz8DPtdeFW0/9pQ8iKds0D9tSTv1jXuUpuv4wtL
yxGSD6jvfrXF6BTJB9W2Vlsd7e824j2iddaxGv+j8ObYGMnbdPwK/h/+l9pE
4UGSNWoP4f9JblDant0tuX5pO3eH5BC1SfggXEMt0/tOklyiaw+hXy3q+E7J
x7hmjf2hbjqeq3vXxlZLfqxWI7yB5Ptqv2pMA8lxas8Jr9S544XHCv/NPYVn
sA+EpwjPFM4kn1d7Fl2l/keFGxAjCD8uvKFwIfyIcF3hTHiU8Lr4Dbyf8Fs6
N5ecqvY2NlVymto72FTJiWqThVdr/ELhrXTu1pKL1LYW3kZygtok9qLGvCz8
qvC/wi8Kf6kxB+J7qL2L/eZ33ln9LzGHwlPUv4b1IrwR+1N4jHBz4VL4OfaS
xiwXniE8W7iU/IS1qDEbSs5TO6rwnv1BbVPhzXkPtU+xVbyf2lxsEu/N+dgV
nkvtM2wYe5d1jw1mjvlO2C3J+WrNsNmsedZL5jX6mY4PLewb/6S2JTZb8nX2
ns6Nkk/jW6JT9fzPCo8UXib8tXATjd+UvaO2XuH9+6Va48L74nu1LoV93W/U
1hfeTPJztcML+94L1LYQ3lJyROa1xr64WPf4SXIdyWOSvkJvoQ8eUn/7qvXE
SOEOSZc+LNxR8nxdrza+e+G1OUT9rZI+R9+2rtqvQ7c3k+ycO0ZrJnk23w1f
nLVepphUsot+i8RWkhvq+N6K4523NG4kPrPkFTpepv5hkhOIFYhH1JZmHgNe
rPZn2u8zC+/9JwrPPbrl3KrX6Wzh86pepx8In191PFEn+eEbqH+a5AlVz+tU
4eOr/iavCfdmrQg/L3xk1Xt3rHDnqtfdc8JHYDcKx0WHSbbJHOfgr1+UYp8K
OqVwTHac5ODS/nnHFDPVT743+gAdfriuOSOz7sNPbZ05riCmuExjGhFLSLbM
HV9vk3u9TNbvvapeR1O4l/CVhX3xroXXyHvqP6fqtTxL+GzhtpljZ+Lzq9BJ
rKHCe+gd9Z2BDyW8Lr4+cZaOt1P/+7ljvM2FBxTWfay7zfCZdPyV5KUa+0jw
dfaM1pm/CteVfBifD39S/WOCY2pi61bEW8JX6NzWhWPzfsI7Cn/NHAjvJPyN
8OXCXfUMtxDzSG5XOL6+mDUezEW01fVH637zNOZxyavUbhO+RHK/aB6gb+mY
qFOK8T5JsST7p03xH91S+Uyyf+H4mlj+RMlf1D9PrZ4GfKvj+9S2129fqq+v
nmGbwu/Vp2q7jn3vKXlq5vN/w51h76gNx9dPfgL+wt7sJfasZL/Svvc9kt0z
+w/LK46XiJtmaMwufCPhqcLrlvbBX9Ic1BPeNOFFmWNX/NS3C1/rOsk3Je9N
/V1Lcy8dJK/hmTL72QszzxF+dgtd63DJJzTmHZ3fIzM/hcSfWcG+Sr4NPk6X
0nuhveSRavsK7y15XPKF8In6ZO5fq3PryG6O0PXa6/uM0jtuq7739F5jqo6t
Phb+KXNsT0z7XZr7Hyp+B94F/5t73pj2YKc0nu/LPUelOeQ7P5q+Nevi8cy+
7MKEiZM/KLxO6uKTSQ5U+xCfPNkC+Ca4GnzNfsLbavwn6ICq9zr9cFbwN/A4
V1TMZcBpwEfNSvh7fPp0ze9z3/+29AwPpfvC++BfnSM5Jq1n3vfK0vEXHFa9
imMOeC44gvuqPg/e6MfM1+K4pvx/3+rkzH4Ve3h+5nfjvWamOeR+t+JLSfZP
3/as9K13z43b5vbLuA7jvs98DGZ/DE/fKM/9veqjQ3N/i8Nzz/HodK9B6Rmw
s09U/Sxwe+iZEek5iZG55mOF7d6IdH1+477ootl61tasF8mNq+Yt2ycOAB3L
+zOvw9KcHJvbvvTKHc8T1+9a2NfeBT2Q2x/fhm8ufD32Q3i88MXRMRv+/+HR
fMSfum+p/dK8Yh/mpOgYGL+9ZzS/gG+/svB18BOIIU4SrvLdou3wMMnjdZ1r
KvYVrwy219gofPYHhfeWPDfYRmPPzwm23cQCOwh3rdhvvC867sXPP1v9gyuO
ETYT3rdi/61PNKdADEIswrnLc8fnHSuO0fmGQ9J3ZO6HpvmPaZ2wXoam74CP
DN+CP4++QjL/2A/sPvOPz893vyetPfQeGB/mtRRTE1v3Ls3b1ZWeOAsfK8VE
jfRsu1bsP7cMjouJj5sJ71+xH7u58H4V+6twAXAC+NVbCB9QsS8agr8vflpj
4d0q9sOJvZifn9CxiedBJzUMXhv44T2q5ifxBx5WOyczt4huh0s/WbJhbt4J
3U1Mgc4YxzuqfcD+SXEHOgNefHTVPMm83DEL3ObY0r7oHPSqjqdk5t7g7Yhx
0DHPS67IHL/A0U0tPb5u8LnsrXGF7d3HmXU6emha0kWnZ/bD8LvQLdMz8zuf
pLF/6nlmC7eqWB9+mJ4F3TVN9/oIXSM5vfT1NwrOP6CP4UNe0rMewX7NvRZm
pPVAvA7vTaz+iM49V32fBs9bA7X31F87d9wNJ4J+Qk+h89pqXG++e1pTr6d9
PSDpWXIAw5Md+UjX6KD18yhrizhAv32a+fzR6ZroItbgG2lNbhv8zO+W1uvo
fZ53YuJA4ELeSv1812HJp92L+KI0J/BZMF+E3cVe7Ras49Hhg9O790vzjF16
QdccUNpeNS4dnzI3+6I3MseqfPunC+tx/DF08MlJ9+L/Y8ePLm3LwdjBRjpe
KvlcsskXZLa/+K7khFhnW6Zvjz8xPWHsC/4LfgyfE+4CHTC/sE/Db/hFjxS+
Jjz8eun5eY+94KrU307y2cLrjHzNM2qnZSmvkThtuO2l1RQvEPcW9t/3F+6f
+V5ZuifH+GTkI/pl5s8Ha243xu4JNw/m9pmHQ/X75ZmvC7fdN3N8AncEht/u
pPMu4zq5/RHw8MLcEnkauLYFmf0HrkvcDx9BbHJQGsO+g9PC9rOf4QvRA+QP
yB1dlPbDKF33YslhkrsE+zXoij6l1wZr5LzS+w7/i3wC78hc7KPnu1C4o+S+
alfwDLl9D+6LLsCn4/rEaeRWePemyS+7KH3rnlVzX8QX/YJjQ/iKg6rOTeD/
tyrtz+PXzyytw+DviXGxce+QUyi9j3eW3Km0n4+/j//L+mBtBJ1zv2Q79GXp
PNVEyf+h14SfDPbrsB/YmB1L82/wcOxZ4pUHg/mMR4X3q5rnGCW8b4rdHmZu
hPsWjsvIbZAPeVr9h1bNlzwlfAhxYukcTi6b0rx0boscV4vSY24M5r2Yyw3h
FDT2EeFOVR/Tz7d7PTe3/xxxMDFvbv2I7gU/kHR8TW5dCQc+XmNfiNaTtXLr
zI8L66GXJJuob/3ccci0wrlIcpJvaNw6uXUd16uVrkmOeN3cMQv7AcycN5Zs
lNvmYX8aJl2KTgXzLb8tnFuZI/liYR07gXhR91gvt97DlyPmIZbDl6uX/Lmv
C+vGryQXVL32yRfB5UwXPkl4M+FX0UkpPprG3sWXKD1Pw0v7fejMBcm+dpT8
Ifc+Iw5CJ2LHPkj2Bk4Fu/95bq4Ie/1Fbu6qu/DK3LzUUcJ/5bZF2Cb2ErkH
bCs8FT4NPsMSjXlS+H/oYOGnhHcWnsscleb/+wb7HW2wTeovCvfvCT+F/kXn
V83P4W8szM3t4Ycsys3t4W/8LLxXMOcPBzulsI2YVJhDxT7g90xMugO90bL0
PoWrhhc8QZiPBi94smAh2a9wXE+e9YrCXAG5TDi28RpzVNUcCPxGF+Ht8fPQ
YcHc4TjhrlVzhKewX6ted3Vy5y3gC0+VLKv2sXj+DE4oOhf+fTDP2iLpN3hT
7DPxCHxhN3WvyM0Lni5cU3V89l+sWfGaY+2x/omDiDuxr/CFPST/zs1TniYc
8cui5+xSOMY0h8xlJe2dtTquXXpNwTFTE4DdhuNtU1pHw/G+WHoNY+fxUfFZ
iRHwr1YmO/t+6me/9Mhdr9AzN+eLDbis9Pdalr4Z87A8zcW45O/9oOtfWbXe
ezw9YyXt8ZdL7318GbiBIu01xjGeeIc9l6d+5vavNL91Su8P+L8lmbkz/Leu
wXlYeLubonMw5ALICVyj/s1Zm9E1DtdL7hi8X+CH9wxeY/CZV0SvU3IGQ6Jz
SOQRTgjmA+EILw+OR+C3rwjmG+FpySfA+R+mMSOj9wn5hfbB8Q6868RkC5ib
jsHrGQ52v+D1Bn97QPB3h9clj0H8shMcUTTveJtk6+B1AufcKlgPwGnvFLz2
4Lp5B+akQdV5NXxJuOWDgtcknHCn4PUPV/yIxrUQnoXfq/uszpzjgx9YkzkX
j24sEp/D/IfcPhZcxxmZ8yPk0fE5jk4x/sK0vln/P6U90DP1Y/vHpHh/brAO
XJD0ILEtPkt3yZ11rd7CbST7FOY6bynsM+Hj4LfskTgluKX2uTmXDrl9KfyI
+zVm/8Snwas9UJijvLhwA88r7FPhm1Hbgw+NL/180leLks6i5qRX5rqd3rnn
4rjc/t3i5CORB4CXw/+Ho/shM6fEXIDZ7+jpeUlXY2O+S/7AUbn54W5p7zRJ
e3xsio8+CeaMWf/M/9B0LvHp15m/F3EF34pv9h8vmfs3+rfIPbfw1pNLcwIN
S/vKXA+8NH1jjrFZ85PdalCaXyCX9EZhnUe9xqM6/kb4x+B3+TY9z6jSvAT9
69Y4n01u8f7SugabWK/GMQM5xF7R9QdTNP7Y6NqFycLHROfIJxFPRNc9vCZ8
RrQ9e1v4zGh79o7wRdE1BB8KX55yFl8IHx1dl/Cq8GUp5/K58CXRueePhPtG
59E/Jt6KroGYyh6KrnuYhs6IrnuYHsy3wmUdoL69g/O/3OvKlGf5inx6dL55
Gbo3Oke7XPjC6LqHOezFxAm+gT6I5qPf5H2D8/V/ojPSXn0duxpdRzIDnRFd
9zCT/R1d9/CW8NnRdRLvoiOj6y0+ED4numZiFvxBcH75aziS4LoCnvl2bHDF
eatuwTnxhTxLsM9DDq57cN58keT9wf5tmXxd+D94b741sfSK6No+DMFHkh2j
8xt/RdeCUBNyreQ+wTUDX0o2CK794Jv2CM7X/8y7Jy4InXx0cE7/V8nzo2s7
ZrNm1G5mjOS50bUj7xFrRNeCvC88IpjHxl/rHVwvsViyZ3AO/Rf0d3C9wRLJ
J6N5Mbivk4Pz+Ev5XsG5e77pKcE5fb51h2Sb0Md3RNcZMH5odJ0B19wj2O8g
du4eXYszUXhN4doV1jk8PhwieWe4Bvy8F0rzFPC8xNNwH/iO4/le0fVGE9R3
aHSN0bPCWwXXV7AGtmGOKt4jWwfXjbAOD4muPXpG+ODomqSnhQ8SvqrquiM4
dOKu0yS7RNfEjA/O/RCbkYM+MrrGZZz6L03xP/nlHtF1SK+ov2t0zc0Lwbw5
sfpJkn+oHZLb3zgquhbnRY05LLq+6jnhztH1N88H8+/Ee+S7H4z2Wdeo/5bo
WhnW5/bBvhw+3b3RdTB/q69JcA0Se+SBWPmvDmM1ayO6VuNf1nZ0rcYq4eHR
NSj/CK8fXLPEPtqQuat4XW0aXN/COtwguJaJtdcGPVWxbhkcXVPCers7ujbl
L+Gmwb46Pvs90bU7K9W3c3AdJjpqQHQ9EOtzYHStCeu/X3Sel71zc3T9DXv2
1ug6EvbO7dE1MeiTG6Nr134Svio6d4weGBRdO8LeuSG6pmeB8DXROeXvhPtH
552/Eb46Oh/9LXMZXKdE/8HBNTD0Hxpci8K5AxOfA68zOjp2ooaBvA/1nbsV
rpXBd6W+k3pX/NR/ousJyRteWLiGkDzjJYXrNcjl/ZfTK81tr4zOJ5NbJMdY
P8XLxM3kt8lvkufcvbB9I1d7W+Jq4GyoCcMfIZfUNMUdxB/UReH/Uks8LDhH
SZ56UeH6OvYaeXtyjuQeqQ0mP3tB4bou/CDyStRU4VOQu8pq7JecUboG7Ez1
jSzMJ+L/wi9ukuId4h5qc/G7qXOmBuRdXecsvmXVHBo1QXcH16iQ3/+zcK0g
e+3fwrkn7Okfhev92L+/Fa5DY0/9XrhukP37a+FavrHCqwrnSbHLa4V3qNg+
rhNcX4cNWl24Bg87Xju4Zg9bVhNcs4f9qhVcs4e9uyc4t0uNweLCuQn2+5jc
NZNfqO/nwvWK7H1qtsnjk8+vFxxHE09Tv02Onlw9tcc3S/6LncldM8m6KoJj
W+xmHhwLY9OXF65jRGdWg+Ni7Ps/hX1jfIa/Ctdtop9XFK73Q4/dG5xbp4aE
ul58VHJ8xJzEntRsnBnMC7GXzwqOo9E/o4K/XQuNOT+Ye0G3nBfM85Dv6BPM
/6CLLgvmedZK3hTMOVAbA8/DXqDG9tHgPPi2vHtwzcD20bwS/FJz/IXgvPl2
2AfhFyqun7k0mBdCf9YPrpPEv2oXXOOKvzQomN8gzmbN8fzHCx/O8wnPY/0H
x03EZQ8mbog8wJHBdXTokwuCOS70KrV87Gtqt6nlY79Qg3+hfnusYp3cJbiu
D311mtqwinXmEdE1pqzPhUWqZUWnBfMAcGYDE+aZBwTXPFBz0pv9k7nWulfh
+nbqGVqXfqc1GtOzcH6cPDm109RBUN99a3C9BLUu5LP++z9C6TpwciXUdFN7
DMdIvflpVefuqVs4vWrej5qEnwqvc+xs98L1edTS3xdcv0E9Elz5x8nWUw9K
LEEsRZ4Du0+Oon8wv0EB8tXBfAj1Ufhh+GP8F4DafrhrOGzqEuFO4WiHp2+K
L0T9J/kd8jzEntRmU9dPzQ51F9RfjA6uP9khmuOCb5vCd2OtVOx/ko+gH87w
R7VdcsdZcwvzLZ8Wzq+Qp8RHpH6CeIVaAtYMsVfDGnPjvVPcB2d+XOa9/X7V
/+ngvx3weN+gs2rMycO9UyMHX0e89l7h/Bp6lRpFOD14Q84ZRKyfW89Q2wWX
CNe3OLrmg330a/S3oe5iSXTdBnsHrvIT9GONOcy66b2oS6dugDqC39Iaosby
j7TmqBuBZ+a+b0n+Hr3+qBuBZ8YOXo6Mrr1AP2D/sIP8l2RpdL0INYfU9lPz
QO0DdQ78/4U6RmpD4ebJ55CTIuaEkz2wdN0v9YTU08PbMIb8PjEyeSNy69Qg
UYt0eXoe7DM5sEFpvbEO4bSI69bmjoNeKZyPxt97s3AtylRsb415fsYSC/Lf
BHIB5AT4HwU8APmuh6I5dPQb9VTkIvYvnf8j98D7U3eBzQw1rvWnBoK9QA0S
drKs8TmcS+3lw9G8NvsCewpvx702SvPAfJCPIA4lHu2WYhHqHLHRcJP8tiy6
jgddSu6eOJw6L3K4X2Z+T+7NM8CDwd0Rc5PrW6/GNRb45zw3zw/vsWGN1x81
8/B4jGHsh4lf53hG4rDh5uCPshRD4Y/DDcBpU69JP78TjzP3jWocZxGzE7tP
SfuUfUle77P0vWKN/Qb+swNXRsxO7M7/B+an+xY13m/wD3D45ClZ9+vXmDMi
/v0lulYJ+/J94uyp+6hdY7+KXOHy6Pon9Aac5KrMNZNNajyWuAauD0wfcSO6
gfrY/wOFDea9
           "]], Polygon3DBox[CompressedData["
1:eJw1mwf8V9P/x+/n3nPvbdJQxi8aJCJURiVUWiQUSWlomFnZe2SPhEJ29h6J
hlCUJBkZCZWEIjKLUPm/nr3O//FwfM/rnnPH595z3u/X+/V+13jo6b1PS5Mk
uSBLkqC/r+ZJsrP+ztfB/mWS7KTj3StJMkBthfo76NjrGh+k/kr1j9D8y4WX
Cs8X3l8XSTX3ZrUP1R9SJEkn9TfoetWrJElDzXlB83tp/lL1N2i8q/AqjU8r
Pf8Uzf9Xx9qrP0vtc+HputZWOr+D5p0h/J/GG6m/vc55Tf2But4K9ZuqzRAe
LPy9+scHzx2pc25Xf6iud2q8/v7q91LrJ/w+v1/X/1e4s8a+17Wn6PwFOp6q
ZWpvCTdSe0Xj/YS/4d76/c2F39P8Y4T31T3+Ej5J17xV/aN0vVL9U9T/V+Pb
qj2n8cN0/mL1m6i9KjxA+Dv1a+rvqcIb4/s7LvhZeSdj1T9a1xuq/nIdq6n+
rrp/b/Xf0nln6/xFvH9h/ve5+q9rfBfB94UHaHxHtZnCx2r+D+p31jVyXW+l
cKnfP7jws/Mb2qm/Ua2b+j/q/Fc0f4rwBo1/oGtvqfnTdf2dNP6uxvtpfKrw
9jyPcB/hLTR/rXBP4dXqd9d9Dtf5NdUyXeMJtQnq/6E5bdV/Uedvo/40ze+l
8ycKby08Rfhw4RM1J9P8s9Xu5F2r1df4Lbru0aXfM+/7XLW71G8d/LxfqL2m
/nC1bzT/buHH1D8g+PePUfufrnGpnvFbjbfR8T91vWm6/w7Cc3T/o4TXa7yL
8A/CU4Vbad56nfuZ2hSupfl7afwBXetZ1opwU+G3Nb+v8CTh/wlPF+4d9wvf
eonaLPVf0ngDjb+m8SM0vo/+nhi/x3bq36w5JwjvqLZMeDvNeV5jh+t+S9Rv
oPas8KHCX6q/ldr9wgcIf6L+1moPCHcQ/lT9O/V7/hQeo+v+zbX09z1du7au
PVttGx2boPGOmr+Q9a1jI+L+acg70fEjmK9WS+eOC95rndWqa6yb2mHq11BL
Nfab2mY6dy/9Xafrvazfu63wDF3rSOGHdPwqzd0p7tflOl5F7UPhJ3StwZo/
hvWo/nua30xtjvBxwj+q30d/e/Msapvr/GM1/xaN/6Tj72v8Jh07XmNN1Rbo
ulfyHBpfKTxP/Y81/0Thqpp/juZvJtwh8b3raL3fo/f1nfALrD2NH8Zv0HW2
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
msRkxGZ14VPRnpCLax3tEeuLXOGeFf9e4jVi9c3Yk9HekSvcI9qzsRp/R+Nb
4U+FHxL+PHHOYY+4/8hltFG7JXdOH//SL67/2wtrRetYL+q3UdtN/apq26i/
Eo6SOmf8QeGcPvHldF1jnK63nBg5xpvcf7XwCZmfifXws/CJcPrEz0NOkNzg
+7revYV9KHzi5ehbyXmS+/yZ36yxr4X7Elsktm+Tc4/9ora58LuFbQU5jZ2j
v0WLfVDnPK9z9ym8Fquoba3+Mh3rFfxOsEfURFAbQc3Gnbk55IDU/BH7Rk6+
T+o9xF7aiTWXWGPHH1EjcGyM79Gr0K+GxPgZfWkVnChYM0U7JT+IdozGV7tw
jQi1ItRkjM9d40CtAzUbd+Su0Rgc9Yy7cudwyVG9LfyA8E/CxwvPTWzviSGI
JcinUIuwUHP6sx7Vniys6RJLwxmJVfDB+GLiL3LdHwvvnzknfoHmfkDMmDmn
PCJ3TrlR5KeD434eHBwTEVtR44J+OzLy17sLf2ty5sT77N+RwWt4u+g/9wmO
n/9A+9T4MZlrPm6Hr5WuiXhSuGVpzRneMS++T55507OrXVSYP6Mnnxn57rul
9V40H7Sfd4TLzDFxN+F5cLLMMfdBwnOFi8wxcBfht4XzzDHzgcKzS/PhIcL7
YbuEQ+aYt2NuPtokxjPwV9bz3lFDI7dPjr1x5OPw1eVqX6v1VDs0t78h57Qs
+nfs7+PBPuHSuH6pKZiq8b2IF0rn9PGxe5b29zPJC1UcK8M/qFlAs0Drw/5/
Gsz54H5VhK8ItonYRjjs2tSaCNyWGJNYswO/v7RGsjK15oJ2Qs0SMT4+c3+N
ParWP9qHa3LzOWJDamYGFc6BkDsl30tuhP1BzD9H8zuU1ps6xfgRPQl+QU6I
ep1p+F7sfbQn46J/OCfYhjaN9v/MYJvdSPgLze+Zuebj2tz5BeqUDsidb6BP
7RIcnmPUpLxDDJW4VuVp4Ump6xfW6bpPCU9MreGj5VPzMDE4f0X+CA1qUeqc
O9oUOWZyMtSH9dHz1BWeE6xJkU9nffcItvnwCWpIOsZ4Gb1tkfBBmX0A/osY
iHwOMSOxERoXuXhsHtoXGgy1Yt0SazPkc8hfocmhzaFJoG11TLz/+b6TgvOV
8As4LlyXHFWNwnuSvYnGtUn/Kl371SWxloVGRX4IzRbtanZhbkGOsk1uDWld
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
P+SuBaBGgFqBVblzq9QIUCvwf6W381o=
           "]], Polygon3DBox[CompressedData["
1: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
fsDnRm4W10pcWX6FZ1TIb46zgPHO4F+NfT72T6y0uB/xFdjjsX9iNbCTccbA
nsimfBB54RT2DvYUtgo7C8vj19DsGAPWBDuNrxzvofgOeEfaHGe0OANgrfLT
OeZ2Y9ki9gP1v2p7JdaaryjuONaJZmA3Fe0LtfLTvhj74544a9ChbPruie+f
7nG+xLbzVak71g8ri31bNE8xX1P4q/DJcSamw65RkT8d36W+NtWiCbnUdn+R
D/5B7NGRs7LpOyq+p3rGXm6M/4w9Ju/3Vz6zX79fxr2qX8zXwPfwC8SNFzcv
7/dPw8w3cZaJ77+YO+osfmBhmr9cfjpHxXnqGb4cHVBuQZO1HayvwYWpzQ/a
TonzU+xZ+Dgxc/PSt+8+fEBh+maJb5eWtInfoPKV2I/588RVjmdBi2Lfxtpj
VfiN9Gq879j5WFX+I3ob+w7rhdXn/0vvYN9jvbEG/Hp6OfZjrB1Wid9MG7AT
2BVYK76SezuBdaansZuxTfQG/5W4LlhNvsC4z3Q//SM/YZNi/8WqYv2wRdhE
bCttizNDYTp/xjk0nu9OMWWpXOT82PviHVE+ELlc23pF79YvRes21u+TubT3
zMimb5749pmP/R+7uA5u
           "]]}],
        Lighting->"Neutral"]}, 
      {GrayLevel[1], EdgeForm[None], 
       StyleBox[GraphicsGroup3DBox[{Polygon3DBox[CompressedData["
1:eJwtlDlMlFEQx9++3f0ksTAmNoKN2thoqYWxMTExKusROgoIiEYEUbyCEUU5
F+OFB16IQjRhl+Xw6Cm0MhoVjbE0RuMBWFuY+Ptnppj8582bN98c//lW1rXs
ORRDCI1IGtm8KISX4FDWRPpsEkIxE8KzVAgFcBfnKvQ+xyfIMmTa9Re8qeRu
N/pB8CtSFy3OCDiAfRR8zbkd/AH2Is95Nw7+5r6o+MFiTCFLkEnX5fcGv5O8
/QSeAcewnwUbOd8nx3RZCP2c/+F7AXyXWI3rqWkjvnlkOTKObEcGuXvl9ln0
q7z5Cw6AH3h7C/wMrkAW47NFeSIXsb8F3yNt+O8kfo3eoNeCXUgK/25wdWJ1
bANL4ATyOFjPpr2HxcTq7AEL7tedWA4j6B2J1Xjae3s8Wv4nwGHq3oDelrH8
lGcFWJOyPurbH9UffBcSy0O2VYnl1oT9W2K9VV+6wJvRvjsItkWbzSmfXQG9
E7zDeRN13AXXZKyvY+ADzuuwP4yWk3LLg1e8t+qxyJfD3hKNY0/97TGvS/XV
poxn6k/JeVXps2jl/jv4yHm1FVybGAebEstHs2iF3M3OV/FXc57xWed8FupX
A3fVwWZ6j1h/sA1Fe9uespi3vV7VXZ017qkPRz1n5a744lM5Mux9UD/yzsl+
9yl3HjZE68++aDPSdye0O+R/ANsXsCJj+1ifNs5U+a4pRrvHkU+t91m7rH1d
WmZ7M+kcENcWvJ+qu+S1d0Tj8DnwcDTbkWjcPg/+TKy+Od8X7VQf9l9gT7T9
6gUvRevhZZ/tvPN8ynmo/RXP55174vmcc3XU56h51kerd2+0PHMep9N3Srsl
PqgW/Tea/Xvi1HVkB743wGuuyzbjO65/wP6s/WfE8//xN6kv
           "],
           VertexColors->None], Polygon3DBox[CompressedData["
1:eJwtk8tvjVEUxfd3eh1NDEQiEq0JJp0wlRATiYlXELMOXEpKLy5GLhUa+hCC
VDDwig4kvW0jov4DhhKPGjDSCPE2NpD4rawzWPesvc8569tn73VX7m/uPpYi
Yj2ogUl+llcRs2AKPpYj9sD7OiKWdEZcIreO+AVnu+EN9geJl4Lt8I/kDiHY
D+7D77Bu5Owf9u8mn9HZ32AGXic3x/5T4n3wk3xnQ+Uaerh/htwY+23iQRW6
IGIcPgGf5/5N1m2kJ8jdgr/Nrq0P/gneZN3B3iJwHP41W0d6L0u9u+B7wTx8
hNwj7v/S++Grsrk0tpR4Mfxx2e8GP+FbwWZ4R6ffrfd/yNaU9oDqgV9m/Yd+
k9yV5J62a+63en2a3I/Kb9bbh0Gl+8Qj8HNgkrhFfB4+zZ1n4Teon69AL/FV
6cB3ZvfyLDgKP5LNu8Aa+Hcwmqz/Gv4NDCXrv4FfS9b7C67Dv5A7kdzPFfBT
8KnKNbfgB5L7L48chL/nzO3k+cypV2A8WW9Ztt80e3mgp/httsxftQ/rfrjH
7ex+yYv6xqaF1tD8byRra09+rVf2p/ojrz0Bo/BWzf6TZx/UPD+9Zaboqz/P
wxrql/xeL/7W3c/kGskeWC1tcC/Z3+/KvA8n/wfkLc1d89f5RvHsQ9a1YS/L
L6pD9QywdyHbm5p/L/sXiacr96Cf+D8CQXpM
           "],
           VertexColors->None], 
          Polygon3DBox[{{1668, 427, 632, 631, 1742}, {1437, 435, 1195, 1194, 
           1858}, {1643, 337, 1248, 1182, 1642}, {1605, 331, 627, 626, 
           1564}, {1334, 253, 649, 648, 1745}, {1747, 610, 609, 435, 1437}, {
           1359, 257, 643, 642, 1746}, {1667, 425, 638, 637, 1741}, {1710, 46,
            671, 670, 1749}, {1754, 614, 311, 1183, 2051}, {1664, 61, 665, 
           664, 1748}, {1610, 334, 621, 620, 1571}, {1744, 653, 652, 367, 
           1637}, {1751, 630, 331, 428, 1742}},
           VertexColors->None]}],
        Lighting->{{"Ambient", 
           GrayLevel[0.8]}}]}, {}, {}, {}}, {
      {GrayLevel[0], Line3DBox[CompressedData["
1:eJwt0ttPz2EcwPGPkFPJlQmViuSQY4hOzkYHlfMvXDA2N7WJFJvcdWeuXLlk
s2bGFjMzC7eubJJOvxjrwlqbf4DXd+vi3evzPM++v++vpwovtbe0zYqID7pr
SOYrfkzx95yIJXxg/ddcYH6cEVGvo6rTdGbEMa5Vq85ryF6KF3VBpTqpU5py
1sDjatRG7dSo/V3M125VqEwj9vewRpUqULWqNOZsE2u1V6u0X/s07mwzz+is
mlSoQfvN3KJzKlKLijXpbCu3aZkOaLXS9tdxu8qVq4Naowln67lDv9xRHpfr
ULJ2toIbVKLT+mnvME/oiFaqY3bEV3d7g4NMJZ/jzr+ZW8355iFzj7na/N18
z1xjvumZYetOjvAWR9nFMXZznLeZ5h1O8LLnizz/WT+Svz9r1Tc34ov1I37i
ffYn7+MTXudDXmVv8l3ZxUY26Jq5nCmWsI65rGIWy/gv+Z2Y4y6m+dF7c/iK
xRpwJ4ut3zOb75jFt1zEN1zI11zAfs7nS77QPPNz+vh4Rq+NPnptPKUriLTF
UnNG8n3Nf2b+//8DJ6hT+g==
        "],
        VertexColors->None], Line3DBox[CompressedData["
1:eJwl0bdKZVEYBeB9TY9gYecDaGkj9haCYGvhmNPoNY855zQz5hxRGAYVC3sL
O0sF0U5EMaG1heB3sfhYa///2YcDJ7UomlcbCSH0ERJDSBeHSSG8G2bpvfqO
nqMn6x8yn1I9av6pZ7hXJSPOuXqb/k/P10f1/3q5vqgPuXfgvK8P60f6iT6i
H+tnepqeop9z4XwqM2mID+HSuSAuhB8UUsSd54tlCaWUcWNWLiuojD2T4Btl
Nfd2P2UNtUSpo54HuwbZSBPNtHBl/ku20kY7HXTyaNclu+mhlz6ezPvlAIMM
McwIz3ajcoxxJphkihe7afmbP/xlhlfzWTnHPAsscm2+JJdZYZU11nmz25Cb
bLHNbeyfyl32yI69P/L9/78ARBVJZw==
        "],
        VertexColors->None]}, 
      {GrayLevel[0.2], 
       Line3DBox[{1253, 1623, 1723, 1624, 1549, 1722, 1724, 892, 1721, 1720, 
        1865, 1451, 1254, 1866, 1452, 1255, 1867, 1453, 1256, 1868, 1454, 
        1257, 1869, 1455, 1258, 1870, 1776, 1962, 1259, 1871, 1456, 1260, 
        1872, 1457, 1261, 1873, 1458, 1262, 1874, 1459, 1263, 1875, 1460, 
        1264, 1876, 1461, 1265, 2040, 1550, 1462, 1551},
        VertexColors->None], 
       Line3DBox[{1266, 401, 411, 341, 2056, 1587, 1552, 1657, 907, 1267, 
        1735, 1736, 2073, 1463, 1268, 1877, 1464, 1269, 1878, 1465, 1270, 
        1879, 1466, 1271, 1880, 1777, 1963, 1272, 1778, 1964, 1273, 1881, 
        1467, 1274, 1882, 1468, 1275, 1883, 1469, 1276, 1884, 1470, 1277, 
        1885, 1471, 1278, 1886, 1472, 1279},
        VertexColors->None], 
       Line3DBox[{1292, 1480, 1895, 1291, 1479, 1894, 1290, 1478, 1893, 1289, 
        1477, 1892, 1288, 1476, 1891, 1287, 1967, 1781, 1286, 1966, 1780, 
        1285, 1965, 1779, 1890, 1284, 1475, 1889, 1283, 1474, 1888, 1282, 
        1473, 1887, 1281, 922, 1726, 1689, 1690, 1692, 2039, 1691, 1650, 1544,
         1663, 1553, 1857, 2038, 1662, 1673, 1543, 1701, 1656, 1775},
        VertexColors->None], 
       Line3DBox[{1305, 1486, 1902, 1304, 1485, 1901, 1303, 1484, 1900, 1302, 
        1483, 1899, 1301, 1971, 1785, 1300, 1970, 1784, 1299, 1969, 1783, 
        1298, 1968, 1782, 1898, 1297, 1482, 1897, 1296, 1481, 1896, 1295, 937,
         1294, 2066, 1694, 1727, 1693, 1728, 1293, 1715, 2069, 1546, 1651, 
        1545, 1658, 1686, 1853, 2058, 1555, 1711, 1554, 1725, 1752},
        VertexColors->None], 
       Line3DBox[{1318, 1490, 1907, 1317, 1489, 1906, 1316, 1488, 1905, 1315, 
        1978, 1790, 1314, 1977, 1789, 1313, 1976, 1788, 1312, 1975, 1787, 
        1311, 1974, 1786, 1904, 1310, 1487, 1903, 1309, 951, 1308, 1737, 1973,
         1864, 1307, 1859, 1972, 1729, 1695, 1730, 1306, 1716, 2070, 1548, 
        1652, 1547, 1659, 1687, 2041, 1627, 1557, 1674, 1556, 1773},
        VertexColors->None], 
       Line3DBox[{1332, 1492, 1910, 1331, 1491, 1909, 1330, 1986, 1797, 1329, 
        1985, 1796, 1328, 1984, 1795, 1327, 1983, 1794, 1326, 1982, 1793, 
        1325, 1981, 1792, 1908, 1324, 964, 1323, 1980, 1791, 1322, 1696, 1738,
         2074, 1740, 1739, 1321, 1717, 1718, 1979, 1702, 1704, 1703, 1320, 
        1646, 2062, 1647, 1595, 1626, 1625, 1319, 2061, 1630, 1631, 1594, 
        1629, 1628, 1756},
        VertexColors->None], 
       Line3DBox[{1357, 1505, 1921, 1355, 1995, 1805, 1353, 1994, 1804, 1351, 
        1993, 1803, 1349, 1992, 1802, 1347, 1991, 1801, 1345, 1990, 1800, 
        1343, 1989, 977, 1341, 1988, 1799, 1339, 1987, 1798, 1337, 1697, 1731,
         2072, 1733, 1732, 1336, 1719, 2071, 1863, 1653, 1661, 1660, 1335, 
        1648, 2063, 1649, 1597, 1636, 1635, 1333, 1854, 2059, 1633, 1596, 
        1632, 1755},
        VertexColors->None], 
       Line3DBox[{1370, 1517, 1932, 1369, 1516, 1931, 1368, 1515, 1930, 1367, 
        1514, 1929, 1366, 1513, 1928, 1365, 1512, 1927, 1364, 991, 1363, 1996,
         1807, 1926, 1362, 1511, 1925, 1361, 1510, 1924, 1360, 1509, 1923, 
        1862, 1699, 1508, 1700, 2067, 1655, 1681, 1680, 1714, 1507, 2054, 
        1679, 1601, 1678, 1677, 1713, 2057, 1806, 1619, 1600, 1638, 1758},
        VertexColors->None], 
       Line3DBox[{1382, 1526, 1941, 1381, 1525, 1940, 1380, 1524, 1939, 1379, 
        1523, 1938, 1378, 1522, 1937, 1377, 1005, 1376, 1998, 1809, 1375, 
        1997, 1808, 1936, 1374, 1521, 1935, 1373, 1520, 1934, 1372, 1519, 
        1933, 1838, 1590, 1518, 2055, 1604, 1560, 1685, 1589, 1684, 2042, 
        1683, 1603, 1559, 1682, 1588, 2068, 1621, 1620, 1602, 1750},
        VertexColors->None], 
       Line3DBox[{1394, 1533, 1949, 1393, 1532, 1948, 1392, 1531, 1947, 1391, 
        1530, 1946, 1390, 1020, 1389, 2001, 1814, 1388, 2000, 1813, 1387, 
        1999, 1812, 1945, 1386, 1529, 1944, 1385, 1528, 1943, 1384, 1527, 
        1942, 1839, 1593, 2045, 1811, 1608, 1562, 1592, 2044, 1810, 1606, 
        1561, 1591, 1852, 2043, 1622, 1743, 1767},
        VertexColors->None], 
       Line3DBox[{1408, 1538, 1955, 1407, 1537, 1954, 1406, 1536, 1953, 1405, 
        1035, 1404, 2006, 1818, 1403, 2005, 1817, 1402, 2004, 1816, 1401, 
        2003, 1815, 1952, 1400, 1535, 1951, 1399, 1534, 1950, 1398, 1569, 
        2002, 1840, 1397, 2048, 1568, 1609, 1567, 1396, 2047, 1566, 1607, 
        1565, 1639, 1395, 1855, 2060, 1759},
        VertexColors->None], 
       Line3DBox[{1422, 1541, 1959, 1421, 1540, 1958, 1420, 1048, 1419, 2014, 
        1823, 1418, 2013, 1822, 1417, 2012, 1821, 1416, 2011, 1820, 1415, 
        2010, 1819, 1957, 1414, 1539, 1956, 1413, 1576, 2009, 1843, 1412, 
        1575, 2008, 1842, 1411, 1841, 2007, 1612, 1574, 1410, 2050, 1573, 
        1611, 1572, 1641, 1409, 2049, 1640, 1760},
        VertexColors->None], 
       Line3DBox[{1436, 1542, 1961, 1435, 1062, 1434, 2025, 1830, 1433, 2024, 
        1829, 1432, 2023, 1828, 1431, 2022, 1827, 1430, 2021, 1826, 1429, 
        2020, 1825, 1960, 1428, 2019, 1824, 1427, 1580, 2018, 1847, 1426, 
        1579, 2017, 1846, 1425, 1845, 2016, 1615, 1578, 1424, 1844, 2015, 
        1614, 1577, 1423, 1764},
        VertexColors->None], 
       Line3DBox[{1450, 1586, 1121, 1449, 2037, 1837, 1448, 2036, 1836, 1447, 
        2035, 1835, 1446, 2034, 1834, 1445, 2033, 1833, 1444, 2032, 1832, 
        1443, 2046, 1585, 2031, 1851, 1442, 1584, 2030, 1850, 1441, 1583, 
        2029, 1849, 1440, 1582, 2028, 1848, 1439, 2027, 1831, 1438, 1856, 
        2026, 1688, 1762},
        VertexColors->None], 
       Line3DBox[{1757, 1634, 1598, 1617, 2052, 1493, 1712, 1675, 1676, 1599, 
        1618, 2053, 1494, 1705, 1665, 1666, 1654, 1861, 2064, 1495, 1698, 
        1860, 1911, 1734, 1496, 1338, 1912, 1497, 1340, 1913, 1498, 1342, 
        1914, 978, 1344, 1915, 1499, 1346, 1916, 1500, 1348, 1917, 1501, 1350,
         1918, 1502, 1352, 1919, 1503, 1354, 1920, 1504, 1356, 1922, 1506, 
        1358},
        VertexColors->None]}, 
      {GrayLevel[0.2], 
       Line3DBox[{680, 894, 1866, 681, 1242, 908, 2073, 708, 1199, 922, 723, 
        1201, 2066, 936, 738, 1972, 1203, 950, 753, 1230, 1979, 1074, 1207, 
        1209, 1210, 767, 2071, 1231, 1075, 1213, 1215, 1216, 2064, 781, 1232, 
        1086, 1219, 1221, 2067, 1222, 795, 1087, 1130, 999, 2055, 810, 1091, 
        1134, 2045, 1013, 825, 1095, 2048, 1138, 1027, 840, 2007, 1099, 1142, 
        1040, 854, 2016, 1105, 1147, 1053, 869, 2027, 1066, 884},
        VertexColors->None], 
       Line3DBox[{682, 895, 1867, 683, 909, 1877, 709, 923, 1887, 724, 937, 
        739, 1973, 1243, 1244, 1245, 1246, 2074, 1205, 1208, 1206, 1236, 1237,
         2072, 1211, 1214, 1212, 1911, 1238, 1239, 1217, 1220, 1218, 1923, 
        796, 1088, 1131, 1089, 1933, 811, 1092, 1135, 1093, 1942, 826, 2002, 
        1096, 1139, 1097, 841, 2008, 1100, 1143, 1101, 855, 2017, 1106, 1148, 
        1107, 870, 2028, 1110, 1111, 1114},
        VertexColors->None], 
       Line3DBox[{684, 896, 1868, 685, 910, 1878, 710, 924, 1888, 725, 938, 
        1896, 740, 951, 754, 1980, 963, 768, 1987, 975, 1912, 782, 987, 1924, 
        797, 1000, 1934, 812, 1014, 1943, 827, 1028, 1950, 842, 2009, 1102, 
        1144, 1103, 856, 2018, 1108, 1149, 1109, 871, 2029, 1112, 1150, 1113, 
        1115},
        VertexColors->None], 
       Line3DBox[{686, 897, 1869, 687, 911, 1879, 711, 925, 1889, 726, 939, 
        1897, 741, 952, 1903, 755, 964, 769, 1988, 976, 1913, 783, 988, 1925, 
        798, 1001, 1935, 813, 1015, 1944, 828, 1029, 1951, 843, 1041, 1956, 
        857, 2019, 1054, 872, 2030, 1116, 1117, 1151},
        VertexColors->None], 
       Line3DBox[{688, 898, 1870, 690, 912, 1880, 712, 926, 1890, 727, 940, 
        1898, 742, 953, 1904, 756, 965, 1908, 770, 977, 1914, 784, 989, 1926, 
        799, 1002, 1936, 814, 1016, 1945, 829, 1030, 1952, 844, 1042, 1957, 
        858, 1055, 1960, 873, 2031, 1118, 1120, 1152},
        VertexColors->None], 
       Line3DBox[{692, 900, 1871, 693, 1964, 914, 714, 1966, 928, 729, 1969, 
        942, 744, 1975, 955, 758, 1982, 967, 772, 1990, 979, 1915, 786, 991, 
        801, 1998, 1004, 816, 2000, 1018, 831, 2004, 1032, 846, 2011, 1044, 
        860, 2021, 1057, 875, 2032, 1068, 886},
        VertexColors->None], 
       Line3DBox[{694, 901, 1872, 695, 915, 1881, 715, 1967, 929, 730, 1970, 
        943, 745, 1976, 956, 759, 1983, 968, 773, 1991, 980, 1916, 787, 992, 
        1927, 802, 1005, 817, 2001, 1019, 832, 2005, 1033, 847, 2012, 1045, 
        861, 2022, 1058, 876, 2033, 1069, 887},
        VertexColors->None], 
       Line3DBox[{696, 902, 1873, 697, 916, 1882, 716, 930, 1891, 731, 1971, 
        944, 746, 1977, 957, 760, 1984, 969, 774, 1992, 981, 1917, 788, 993, 
        1928, 803, 1006, 1937, 818, 1020, 833, 2006, 1034, 848, 2013, 1046, 
        862, 2023, 1059, 877, 2034, 1070, 888},
        VertexColors->None], 
       Line3DBox[{698, 903, 1874, 699, 917, 1883, 717, 931, 1892, 732, 945, 
        1899, 747, 1978, 958, 761, 1985, 970, 775, 1993, 982, 1918, 789, 994, 
        1929, 804, 1007, 1938, 819, 1021, 1946, 834, 1035, 849, 2014, 1047, 
        863, 2024, 1060, 878, 2035, 1071, 889},
        VertexColors->None], 
       Line3DBox[{700, 904, 1875, 701, 918, 1884, 718, 932, 1893, 733, 946, 
        1900, 748, 959, 1905, 762, 1986, 971, 776, 1994, 983, 1919, 790, 995, 
        1930, 805, 1008, 1939, 820, 1022, 1947, 835, 1036, 1953, 850, 1048, 
        864, 2025, 1061, 879, 2036, 1072, 890},
        VertexColors->None], 
       Line3DBox[{702, 905, 1876, 703, 919, 1885, 719, 933, 1894, 734, 947, 
        1901, 749, 960, 1906, 763, 972, 1909, 777, 1995, 984, 1920, 791, 996, 
        1931, 806, 1009, 1940, 821, 1023, 1948, 836, 1037, 1954, 851, 1049, 
        1958, 865, 1062, 880, 2037, 1073, 891},
        VertexColors->None], 
       Line3DBox[{704, 1077, 2040, 1078, 705, 920, 1886, 720, 934, 1895, 735, 
        948, 1902, 750, 961, 1907, 764, 973, 1910, 778, 985, 1921, 1922, 792, 
        997, 1932, 807, 1010, 1941, 822, 1024, 1949, 837, 1038, 1955, 852, 
        1050, 1959, 866, 1063, 1961, 881, 1121, 1122, 1123},
        VertexColors->None], 
       Line3DBox[{883, 1065, 1188, 2026, 868, 1052, 1146, 1104, 2015, 853, 
        1039, 1141, 2050, 1098, 839, 1026, 1137, 2047, 1094, 824, 1012, 2044, 
        1133, 1090, 809, 446, 2042, 1129, 391, 794, 2054, 443, 1127, 389, 780,
         2053, 346, 1085, 387, 2063, 766, 344, 1084, 385, 2062, 752, 469, 
        1204, 2070, 507, 737, 466, 1202, 2069, 506, 722, 463, 2039, 1200, 505,
         707, 907, 1079, 679, 1865, 893, 1233, 1247},
        VertexColors->None], 
       Line3DBox[{885, 1067, 2046, 1119, 874, 1056, 2020, 859, 1043, 2010, 
        845, 1031, 2003, 830, 1017, 1999, 815, 1003, 1997, 800, 990, 1996, 
        785, 978, 1989, 771, 966, 1981, 757, 954, 1974, 743, 941, 1968, 728, 
        927, 1965, 713, 913, 1963, 691, 899, 1962, 689},
        VertexColors->None], Line3DBox[CompressedData["
1:eJwVz7kuhGEUBuAzTGIYOo1S5wIktt4FuIQJohCjUGrsMvZ9Tywxo0DnBqax
S9CgEhGtQiIRkXimePKe7zvvl/x/fSbb0ZeIiAyNyYgnnnngkcHyiHxZxKE5
TydDpFIRObuiXc75mCma+a6IKMhzNnTudabNJ8xQ5W2LPOKCgs6rzqz5lB/v
52Qrw1xypvOpM2+u8X5XLtDGCFcUdf500vaLznss0cUo19zpJO3Tctl5nxW6
GeOGSvsX+zpWnQ9Yo4dxau1v5Yd9A+ul/6SXX98+Ib/cN7Fp3qLam345SYJ2
u+3S7H5HDvDGO//LrDlz
        "],
        VertexColors->None]}, {}, {}}},
    VertexColors->CompressedData["
1:eJzsvGk0le8fPioJaTIU0iRECUmTqC5KSUmTlAghSTQiSUJlqoQKSZMkSppk
nucp87ztvZ+97XkrFalQzlPrvO231v+8Oees9X1l+Szr3s99PZ/7Gm4+Fjqe
3HNEVERERElSRGQi+XVXuUrwvC0foSCrm5uf04/1uTLys0534HWi7OezawUQ
/dXl4ra6HxkK3RYvvDsx+3dFSY0WF9WTOD8V3gnx2+9JrrFfF44PqUQuUGZB
Yp/T9YplQthpX9foCuxGbf9kT+eTDKxT6U+VjhdAOyo882dsD9Ti5CmqN2n4
ocdij/D4oPaIGRdWUsD67PHBHz3YUVa8kL2Gj8Il6XVB33rxecLOou6Bdsy1
Dj/UGMyDo/CclakaDWHrGQcv9LVg5oQH9vx4Lg5+jan8oUZHdPfaa8vUm8C5
/TL10SMOoo3X3dabRmBqItO7qrkWLy3fDO5PZiOmQ6+CF0JgVsv0R/fYFQgO
vq/qGsuCX7Az89FXAj1Ra7ZILSzDmVyG8gX9PvhLi592XcBASuiOfh/bYqQ9
mjs/opuB47Up48vMGegbT1ZrXJaHiPidcx77ElgaYh7x3YeBKp0ko8HjXYjI
3T2d6OeBsKywqPSiYthrb4HDOh62PBN9WUUIwbLdeMxoYRfapFVPdBSw8bDd
7eUhLyHMj8utXvO9C4HMsvNnJ/TBPnXT/uvjAsTT3TdxGd1ourjCS6WewJon
i2+lHRGApfS28vqXHhjJpZzIuULFymDJS4aFfExRLA5um9GLE3fK2NePdEO/
dnd+/0w+6rd/HzVfTkWnJnX/mQ3tELv8CgfceNjf+fzAV0saTofpcHpDWzD8
sVg52peL0JXNhq9M6OiWfDXYUtCIXA1dqm4IB9zl6/FiNoHCwrjx2CO1kPX3
pU6+xUaexJxW+ygCpxZFHo8orMDGpqMC6Sss+FbNTFf8RmDL5zZxdcky1DE2
r9TQ6oPecnv1UWUG+ledPRy2qxi7OPWtSa0MvNXJmf2FxNmct0j1D84bN3xW
+oPzlrcH/uI8l7ZkMf9XPrznLik9evQtnGhFUh/UKdBVnK/QzGSjf2CZWswF
IeLrGAqtgi6o9D4vDJzPQnp29cAlsm9z4442OwZ14/WRdfG/+hkwWPWZb1cq
wOz7mlul9/bg4xmV6g1zCOyIMr3P0xLAhJN2JX4PBcl+Bk0LXHvxyMFzUVQk
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
hpD0XSGnOlaK7urEaJZSya4iHoiZm9xelJF+PuJ3ms9zkn+CBEyVM2QuEMYo
D0T1ItG+qmRfWif262frLmzgYXVttt3+51QUfSzS1YotREI9/bnXygS8LXhW
GDLy/x4PJ78sD6uypONh1q/VbyQFSPLpmxccScH8o2/v7zvGwNr0jWPz4wRo
q/t8z/xeD5K3OjnR8nsQMLpx0kRzPmSvqNPntfYiaH6uPYfM8dbGpWcSZgjA
fZdf/eYKBc83zpxdqdGCrSalxcL9XCRtN92f6kJHItXDZuhILVy8bh1QusWG
7ZXgwv1RBPwU3RWn81ohH1y5nPedi9D3P7ZX19Cg+cWbsqK+FKIb9bu9p/eh
nmowVq5G5vfpalha2YQ0/yKjnG4OJvzWPeHKpONqs09nqSYLwz8Nn91cLoQd
sfaxqX83RBdQPqxcwoS70rb6N+0CBJ3jnxLX60HLko9bTpL5401pd9m7HQLs
jGyWCVOiQCvrdsXu5eS5afe42v2aj427bk3KVO+F+4/YoAbrHgikvXjz1vHx
I+rat22felEmMtnCyIB875qhk1vzeCi/ZnbiSQ0V1GP3b6hwuCiPOJ2zuUUI
8wSzU+obujDlzVmjZ5vJPrZ743l0Wj+ecysLbas7oSyabrWD9LWyX4zyp8j0
Q9Tp4qs5JZ0wnsKdusmKjweyfq/0pPuxd/4MqfrSTiy6whd9V0rq4tUpsg7f
hfAM+Ky+YagTknFE9Eoy55/7uUpN+FWIE95K7fN/dcKFOTaDqkjF/UeD3/rT
+PA1LLt+XLsXvhvdbui8ZMDo3qlO1ksBzrs+aJL1JnlVeNo+m6yHilbJyKQL
cIM4p1fl1YMo9izJ5tMEth9/8/r1VpL3Jm6pVlKlgNK6Mq16B1lPjQhUXi/A
8IZIDn01BbtusZ1s9/Xg1OJb244akvsu2rTs8kAvpmZGtadP7cESWYUvBcv4
+ExbZ3l2IhWVs/rfGwx3ImuJReBYNw/Jrq71MjFU1Jt+7Axy78T66MrQvjIe
UoY2v+3Oo0Lh+VrLX+cEqK0o9xkwIvNXR3Nb5uFOUJwJUT6fh3A2J+nHLyGU
d1yMUeJ2QuHOoq20jD58c9uTnztPCJOcFY+qn3ZD+p0VdWSUiUmlUXmPfguw
QfXxnfy+blRrhkeWL+5Dy/10nyWkjuyqX/cwt60b95u29TST/LOhNJC+iuQf
6zkSZxeT/JPndua6I+lHBInHf8++Q/Jzs7OahlUvEs7Odjrr1QvHu6nXM6L5
6BoO/46DvXi45l73/Hc8uHz00y0ZEqI//fIV75+dML8TvXLjZD6+nbv3aMPE
fviqyV+429v5/zlf91/9v/p/9f/q/9X/q/9X/6/+X/2/+n/1/+r/f6lPvzif
CLvEQ5x8CF2uX4i0E7O3Fkl1YZHmwITzhziQqt2lrR8pRLoGPSinpAvTFYsd
6SZs7Nrv6SV2WIi1wozCogXd6Ll19I6iJAvfrKM7c5cKMb73+AZ2WDd2hyZ6
195l4knklX1zPwnwS9nQ7olYD8Q0JynY1DOwgKJCZ2cJsK3wstoP5x5cPhUf
6PWIQNDiYwEp+wVodvdxuzyZAoO34zt8JAnsi0tYylQXoM06K51rS8HuE2mx
BheomLqf4vk+n48YnVdOJ2V7UTd4wvyTXy9Wdh5s4N7iY4Q1LUnvQC8myj1f
Gv6+G+LDa4+VLuRj6LDEIZs51H/O9S+uFr+dSnTBMrBAK36ch7UFN56V7Pv3
fPpFflObmmErinUOeuvlclEbY2uwXZyO8wO2lFJqC8zvbcmkxXFxtO+E2U91
OiLfql4Kam/C11dLOvXoHHydLyItRaUjffNHS5ewJmyznqkzuZyDMYWml2nf
6QiQzNlTTK9Hef/AmhViHGTYdZxhWZN4KS2ck+5Sj9f37S7GfWLjeuezOX7O
BGTMxpMvzKxG8vH0uBVL2Eg5/5q6qYLA8cWHdhZkVeHw4kfCZEU24juvSx/+
QEBEyW4+m1KO37NjNzbKsbBeiZF1fCIDwV9qNmvklqNLfs6W2RNZmP9K996N
SQxEzygYYJ8shainLlFEMDFSmG4Zr8lAVqAfdcPBUnxO1EgQ72Ai6vWqJz+W
MvCrYHoJZ2IxIgzKLr7+c79icPFL9W4G3Gw+WQi+FmHn7je2V1IYUFuwg3d6
DwOfL1DLRwRs2JVWp37zEyKbEU3I87rQFr16KR6ywKlR/amxWYjYvPP7sb8b
SwRpppvTmVjRbL054osAp9JyYyp/kX3ovmz5fDEGTPrulT05J0BayXGX9pYe
OP42clWqoWGq/YEm0698VH3dGdKZSYH+6qn3vnpQcN9xTq27Kx/+2+e/Ckvs
xYKQBOO5Il0IVP1+OJrCA6vvCMXm1r/n6AcqvKe3+bXAxJuZsMWbC07/piPs
rXQ4jDo7CwyacFAhM0E8hYPi86W/oyYTaHrMMLgjqMOGl/NDznaxIVX1Onz/
SQLXdJctWWldhWtjV+2rJdhouOB2NLmdwBWzuoiB2HKYztr8Sf1rH6Sva+hl
STCQ4b5rn7NJKWz04ygr6pgIqNymd1CbAfvs62c/UouwQleVsfsJA6qVKel/
5rCsr7Z/+0hnQsXXoJL3UwC+emW1ysdusJNK7FfdY8JAr+uwNXl+Py/cXraE
PL/7BiJiwy4x0BnxRRwPBXhEzPw172YPDu964K+1hIDzsxSmw3IBUoKOLxje
RsEAJV+16igVDo71vjE5fFyfnOteodALmTW5HXt29CD7WOGieQZ8bC7bkZT1
pRdtjpmUPXKdaGoskLz9ngdFi7ztu9v+PUdv9CaGv1axBR5uo5vt93CRMY1n
qOROR7Lu79ujrY0QN18zd9E1Dk7zxgdzFQjsf7lzp/PxOkjs+W1QUsJGd/ve
zT6+BExG3bS7flQi1ez51ZhhFnwez4yZSSMwWmV3dJ1XOR4uGj37nejD/BTt
GN5kBobCazn7dEphe77VxbSYCf9hyclFOgyIWv5q7aguAkdkqdjsBwxUhJ7Z
XEniPEOr8G7EYgIhUWvW6JD4zN6pWGK+nYIr7z/ZP2ATyKDYLOnxECCJ62QR
1dcDu8fBaoY7Cbwuy3SOXS/AurjExJmrKTgrcT5opicN+c8O2T9h8WHxojtV
s4ECWzfHHSZCCj64zz4b6sfH2lti0YsDepH5ri5GRqkbOfNU9Zsk+fi28rik
6BYqhg89eZYzuwMr7RnuITdI3hu/eqlWkfbPOfqwdneD9lfNyKVa35ynzcXt
6/rZiZF0XE/flzxfuxEjCzpC7Tw4eK26Ya2lOoFdzdveTObXQvrM7TP+z9kY
Hv7cQb9K4MwcyXWPYyrBL2YIZrBZ4G8O3pPGIRBa37t26p5ySD/aNz28sQ9q
bDaxcCoDU5QbleUUSyFf2jbJ+D0TT7VidDR0SVzDdS2T3xVhM9Fe2B3HgNGR
Gy9PWzLwY6H0s6t7enCNVZ/+lewr6ZXlN7Z97oU4K1HSZQEN6eUHv03t5IMZ
Wd90hE2B6aOmG0fHqIgsWRRyspkPHwWbk+OfKLDbUBLeuLsHxRxr73ZynTnW
ey77keuUX1i6eklrJ7QGeibZtvHwWCY98fVDKr4lh2VvmtmOqROjdk114mH6
u3td2Q7/npefsmhALXhTM5TsVih5i3MRdNhHJDyTDhe3q9+UAhsQPXgsMc2C
A8sSCbrDKgLXzVW9zzrVYk3GsdFn0WxM2dzcdDOKQIv0Tns3y0osa/eTM2tg
4fHt9cseCQnwjMbdD+mUo29S4ldqQR+y3mhrOU0nz23Cnah7E0rxs8M4QPk5
E7OMVZ9HL2eg9NSELpsHRRh/ulTq9i2yvydRufP2MVA7K3Ej5Ucr7A6ZGnB/
cVGRrCrHLaMhABPito90Q9swPKlWi8STy3vlL0nFlkEH8RNyFMR5PH7CseYj
mHEu2y6vF/EmElfj7nZh7rjmxBVDPAR9+Z1odIwKcffv56+f64DWHLbNnQQe
RN9M2DltnIoJjln565zbYFRFY65V48FDn/Jlz4N/z8Xf4G9brNXaBEmzT+aH
aByE7r3jSSH11NYrlF7f+AGae0WmTV7GwRHtkIksEwJXHyefutlTg9UnFsca
+LIRGzSjNuw+gcchAg1CuRKbL9y+VJrBwhKtoknMTwT6pHhOOlLliNNzsfz6
og+sR3Oj06QZGN2ZWvlJUIKV647fZz9gorZfGDRhBQM+Pas2fQ8tQhFHh24a
wYBGyeZvtSSeB1wbGE6vPmDiVFqA0RIOdPNX8HNMCdglCZ+a7m7HpIbY7kMe
5H6jt7+t2kmDW7rYlF/UTuziF1YqdvBw9q2kQXYCFecnnd1ZVtyBCOGmfMsU
HlKOTw/8LqCiX6x4l+nUdoiU/X6t58CDT2y++RUnGjS8XR/ynrfiPWGSOovJ
hZX8HCsd+r/n33sV6tSS7ZrAaly3ryqDA5XMKVa7JxLYU/NsifTsDzCXv7Pb
YzoHG521WghLAg7ZlnrbLWqwvaF1VO8wGyunX7RvTCUgmnjG2bq/AgfmT+4q
jGeht2xWy4qvBLpVFvtfZJchnuZ0pPJuHwK+T9T+LctAhIrAfGpbCRbcMleL
vMVEesHq4rMrGRC4+J/3OVuEt8O9q7+FMvA8Lq3Dx4qBIx70leV65fCZeXl8
SnEfFotGDc8h+3zXFOufGcJmOK4/3HVhIxcvzR68SL9Ax+ipZqe3CW24f5O9
xkGfh4eHLGsjw2k49XRIfMPidjgHOGhVu/DQKT1SNNmGhntWVJpaXxvmy80K
vLKbB6vHKwL4p2moEFqXisq1YXHsz/J1EjysqD39uSiXRvqV4g46twUGuote
+yZwMWK3yfik6r/n3/MXh1ck1TWi4ekdzZQwDorMenK8FAl00lXFi23rUWfL
pbX0sxF01eTywSMESpOLpt4urIbuY/G2G6ZspM+5vMIxk8Tf9mt1c2YFfIvl
xwwDSD8uUtF95xsBRasqBbPiMnzzTthnHdKHRJ0TCgdmMcA6fOP1YH4JdH5f
pywIZYI5ed8x/ioGikO97eiHilAu1JZKuMxA3Nrv1zX2M3Be0pXlNTMPRrk2
jpSzBOzfqNS0nWcgbf1S3Y/e9dgtNe2Z/xc22pXeG0o7kc8vlTVvjkYLvi3e
npe+nwu/94e02S50qHXFOLnubUUcNW4bpZSLR61nzn74RUP84a7w+2Gt6HQp
JlZ0cBG5lT2lXUBDnEhr+0WpVoicVvNoT+HC/fj+z7sV6NhZUjuSrdSCtwwj
6017yXWuXY8xOP7v+ffXPYar5jU3YFuFdNSgLQe7RY3ZDjoErMvCZmfF12Hr
Ig+pFbVk37oE2Vh6k/5qq6Lc/qXVMFAwKDLVZsN6gsinTWUEpKVjf5kEVCDm
u2LFmiMszAiUdpL8SYCWbR52M74Mqub79j737IPI8fnuuQoM6MTMv5j0tAQb
rl0Ku+3HxHxm4lXHNQwoRiW1L91ahF2PZu5Z58/Az9EpsztJnPc6PNi8pjIT
D5T7hW7fOzDbydasjvzczz6WPmb2Ffi4OEicacnCtYgLv+eNkv7gQlHLtY8N
uPVxgbO4IwcyxxwVWUsJBFBKpUfsmjGiJL91ozTZ/07HQj+l0aEsnzKUo9CC
IuLEveXkeecqHp9oSp53dZ8lKSJfm/HytsjkPBMuiqueJvuep8POcrLcZFKn
FDyOnjMjdap93sGK95n/nn+3eD00evLDBzxtT597X4cDk3t2A4qbCeQFFgQ0
ttTijPFRmZBkNkpMzr1oDiEQQeHPCbxdBY2PM/cckmXDy1V5nXcTAUlb9oP0
rRW4u/Cp+GszFrSDfmRcGyNw90OVxk7PMoQpzb2WfbgPFN6MLYuUGDjsErB+
fkQJTiepDn08xYT1xJC5dH0G+nPOlx7SK0LGe3+JDh8GTjObL4QcIP2Cadw5
j54cxHxuZMQcKIeye06KhScVuiqr7akdxXhl9rZ7qTwTwqyP9LMmDLyY55hx
XaYGp0S5CrZWbMg0htEXvCKwWE7j1JGrDbjSnZd8aicHd16qlIuQev1YhP9s
8/UmyPu/uzejgoMOH/aBF8N0lEVvPdlS3YTJcbFPX/RwwOw+U+jLoMN4o8Zn
J4cmiNzwOeHynoMtbKHlRJJv/zX/Xla5/4pVcT2OV8isivvNxhVCdlKSLQEv
8fJOplgthk4rKFUHsvGhYKSh/S4Bfap42e+flRi3K5OvI/2trc7KphEqAZ8l
g+ulpCtgp/wsIlGbBWn91QrKIgzsO9pjEryjDJkDdRqXLfogY+tVHDeXgZqw
jxccvEvQHrKIsfQIE75VZ1bZGzDgp7tH0mtuEfpiLFWPnSVxv6ubqW/NwOXZ
7/su12VDn1HlN30SHZdcRkbtzzEgXpvzViWqHAYGe4qrP/Vhel3i6kWSDDzo
3psW+LMG027mbSq+xEbA0k8v2+IJMLPOZy2q/4Ar9KvajmRfKQ2caVtF9hVf
S+KY19xG3N6f5XHEjYNXS1ocazQIbO1RXJTDagD3usiBsw4csGPDMlK1/j3n
fjuRsj8stQ6py17O7qpn4wn7s4ukFwFLLyvjWt0a7D+ntGrAho0ZyoFazmkE
3CRWZhseq0TJaTX/uC4WJi8747hTQED9V7LD3o5yhL0PWDRNhoWOujUtFWSO
vmNeprNCvQx9J6L3TDbswxST7OGZC8gcXPWzxM2uBIIK2iwLazJvzWJ2Mg0Z
SFroFX5avAjnLpx/8M2DgTXnpWsE1v+es3Dbseu4Ny8Tepqz3biXOlFJ+dWQ
3kjy0rNjlJajxRhRk96lTWcg/YTkQZ/t5HvJ8ZXWragA49KqN9YhLPgnljq/
HCKw5VfamV+mtVB+2nel5AYb5WVvqMO3yNzyPN9z0uV67FqTuOTZIJvMr9T9
ExxJPsxTXz/lSz0KQ99omUlwsMFpsdrhA/+ec9/SILG2OLQWdXJenJ132ajY
MehiHkH2p47ZSTuratJHcu2+rWQj2NB+ZUARgRv1OlesFSqRP9shX+o1C7dV
jVX9Bgi4VI8FXr1XjsuxSyM+DvYhSXTusotk/pV/eEzX8ncpxM5909um0Ye1
K3zE4hcy8H7irbh1W0rwudJqv+UOJubutJnitp4Bt/KZWns/F2KbW93pC66k
ngUcfH//4L9x1gqxkuPSsvHF8knk8/Yq7CmyWNStRcOWXTOunp2XA9NpVT2x
n+gozDIpzglj/HMOPdM03ujtoRpUmcrc/erExoaAgSPeKQQ8o5penPOqwoXY
84GtU9mYWjtir91KoDFOcpV/Ganv+r3NQcEsBJkIGqvJ95Xkvks2wb4clAN2
wcYdfVAOfXluyxQGtkgfi+K2l0JHp/uTiVwfEiaHT1qsxoCnjWhou3YJ4vZv
cttgzMRF45OdQxsYmJovItVZx4NW/eMM/g8hvtLtp+p86cSB9cTFsWYO9PRO
vGt+IkT9ZZ3W9Pgu9KaVt72LYkHiulEGsVGIRwcX6tbYdGOTaXxW2nImxO77
BBzrEsDDNving3YP4rM23wg8QSC7qiPnkakAJU8elAvVKPDrLJlXaEJFTdwl
m+/v+FA4VzJweGEvVLvyNhx62E3qh//VFfP5OF20o+DUwn/fv/GuZej0CFsg
XnhgAec+F28jBwgpFToyvs7+Ou1RE6Qf1P2aX8/B6ZBA6aIBOjx7NFNUEuqR
lDzNTeUHG24XQygN9gSUlESntH+swutbecM7VNiQKIoLe1pN4MS8u8E3W8pR
ltJbs2wGCwHBzDxRMQaYvuLTBO6lOH414cZmOhNTuvTu1WqSfZQXGfRoPwdb
9Q6fWndTiOCL+4fTy7rQ3jpxVHI+6dtWbf5+4SBZn/FxS5lWN9LkqjsH9PvA
2SmoYEgKMZyQ8mBnYzduJfkZ8Uk+1dyjx7p8T4AR1cCJl+70YGR7jMiaZDo2
SE3aVjpLgLQVtz7r+FKgfJTWfGRTL2r9t91IC+ejJdZl6ejRXliejfl0vqYL
Xw68rmCM8jBy+tWE+bb/vr/anGRTffNaC0ryFr4NvcBFUvE2z4JNdCx+8v2t
y54m2D0qtnR9zcG49JMfXpPI/GLS2Xt7YT0ywqoHNzHZCDNpzQlxIzBvxpqI
C5FV+HLGOf6pDBtrCk13NpH6rn1qTXXO63Ikmfh89/hN5v3+loXq4gw4n/Ta
hf2lKOul+oS3MeFlLr5oiRYD/vqFf+8Jq488/XtPGJpk8feesMX79y47jz5c
U1nz8p2MEH78/J8FBd2IOaNQkPnn/2d+36y1tVSA+6lPl6zZ24NNkoWfDyUR
WHmDc51/QIAXaSZBdhIUSFt1lWvsp2Fo2jKM0/lo7BNMVuqgoD7k2jz95RTw
p8hsTbfjYxlD4aHeu15srPgRTed2YvM4ozG9k4dlpc0TReP/fU81xBSPe0T6
4ZqMjXY00g9v9DQ8l0n6YT3r5U/+L/a+NJrKvw1XSCUqmZqThESZS9OVQoom
VEqDUIZCA2mmUkoqFErIUCpRKkNktg2Z52lv9rPtGSWlMqXz/L0+nbX2+573
fDlnnXW+3msvtvv3u+/7ui7Pc1+7hWvgUTF3eeMDDhIH06+fkyZwZcf1GYNx
5TjvZfa9tZwNpmyr8A1yHhU2zZu3W6sEnS8yRhKE2AgJUXFe3Eog56POT+d7
FExh0d+4f2GCkdu8fhc5T28mDs4+YlgAGjWSnfq5E9R7L3v9Ncg8hxwY0wNf
GsmP6YF+ZgljemDHBJrFU5K3NYX1mj3e34Uz1iV7LolSMSE3fWsEWQcS95Km
33HoQuAtA8rFH22IUo3M0btOx7yzKc5KM7pg89zA4vN1Kq7mvbLR/ErDsYSt
4jLxfNC414IVDGiI6upThmQb3t9Vnt24gg+Lc61ZZiLteORM3BsdbMI2Rv+j
6+94SJ4YudSIKniv4yrLytAvubUIcJwgRdPmYlWEW5HQHTrELb44PjhcjVkf
jp05fJaDiJhHS7oWEUjZUF+ybnE5/HNGTBgpbBwKV1pf6kMg6Pnxl/tqisHR
l3tzoJcFNvXcnacMAjcc9S5GHaegyb5aVZfGhKXNIXVfcZKHEosGty8rwFNj
9YiSnE6sLdYV/racgclalWO6n43swjHdT3Wax5jut1wv4+roEyrmqZXp17jz
sbX6GJUbQoODsm9e9hQ6Lktz+PEjfBjuTps47zmV5EFCaeHOVNipnj2S6ciH
zFHJ9Mw4GrTu9jpcamrBX69FSwf+8NDnGmEdYN0Oa2Ive+PfRlCq5OxMb/Mw
SWelhKSCYN3pWVHezL1WtZgUGn7hrAQXbh9czr5IpmMNQ1PCPrUKMyZf6hOy
5mD6djdepSaBNR/0Nu16WgaNPLmSPZFs0FYYDFoEEEhstYzSO10M89tmd8Xb
WWDyeEtz+ASGf4Oy25QCdSm9iMwyJnL+TBPNlWCAaVx9abJsAT71X3PI/UDy
zem19taaDJQ5Co3peJn9n8d0vLiue2M6nlxAkbCRUCPynsxW4dvwUOA35eZH
xw7MeJmuH1PSCu3t7RdfKfERPD2B5yDXjsRH4or8O80wNe/Y+aWUh5lGFr5r
P7Rjsq6xxgfhRrxXC71bcoCHR8s2nOo4JlhHunDg/ocsVg3sFvGnx7I4GG37
Rk1tpmOEq978a2IV5G/L7vuwisSTdeos5Q0E8jvrvBfNKoNHXN2alTfYqBq8
VKL8iADThMrfiWIUfxf/3ljIQse3ZP+fPQR2lHzUv6dEQcRd3fXCGUw8cq2g
T5hO4o1N+jp3R/NRom4iFvmyE5M838ylaDFQuq22+R9d7kzmwjFdzvpOx5gu
Z04x7T00vwYbyi5svxjJgdLDNvfsaSSeTzsbd1KsBQu1PY6E0nj4qBxi9TSo
HW+pNGUv9SZUNjbr3g7kYb+z+pF46Q4o27kfYe9qwJarGcvezOchdIA7P+eZ
YF2oSF7a58/JGhCydhKWnziYumdi3lwhAusMe+rUdlViv5AHTs7iYLLOhvUD
Owg41cWuirj7Ge9/P7bzPsGG/R2FjcZk//1W4V16emoxbv/+WbUkgYUWs4o3
a78RWBngqmciRIGxiNpG8RdMsO5/aDWXYoC9kP6Kxs1HcR/F1DayE2/ok7V0
dBi4mz5xTGdbNaw4prP5m2we09nmK310NssvQsgeYfkTN1gwdpA+0kPipYB0
lRg1pSbMH5TbpXufB7PkAL0vsh34YaF2RKytAbcv792/aTsPOYNl5+Z4dsDs
nfn8wrB6WMe5Hd5A5WLKJKkXDHaHQD3H933+596+aixnHve4HMiBw67DUvNk
CZSYV51pC63AkmmLF2r9ZmNrrPpSY1sCC44mct/8LYXpc3xZZsnGyxHhycnJ
BBS/lf4ObSqCjs3wpIH7LMgvWUJ98IPkdx5PFl6iFoKbkNRa+5CJWT/nSERL
M5CQE+/6qyYfD48Ofp8c3In301ReP9dlYHTT9jHdTG1q7ZhuNm3BmzHdbNoB
xZVyhTlovFzzfPNBBr7w7sZPPUDy6G6L1d2L6yG9+V4A7x0Xky3Svx6fRof5
7veH9pxvQGJ3+qv8ZTx0Zxg9+RbagfUiS5vmdNSDm9sx16afiw2r9TI3VXZg
ea9nKqu+DnPqFyzdF8LFqeu2Vq5qgvWZBVdrvaQHq+CqKD9L1oED2ZPvqQw1
8p7YekYSTeWwd2+z7m1gY95MBdaMUwT++rmXmLiVovfuhmsGBiROXhOc7ZRN
4OBf/aUZ0UXw7pC5uNWThZoNTruHfxFQ//Jr5/K0QsTGh+laX2NiuU1w0LAs
A9OdcsXbMvLBX3a7PPRmJ8Ru7w+aq89Aw1GTMR1srZDimA42nDMwpoN1TvVM
OnAjncQnPx7q9bXCuP30vX9wy9+fxNuXr4uxmlt5v4bHwrbDM6waWQQWqYrb
7L1Tg/2NVfczKRx8C/qdPfqLjvdBfeG6s+txb8fDbNk3XLx0tfu0bCYd/fK/
/erq6oBC6x2/H3Jx7/LrzZVk3qKF78QRE+uwblsyvc6MiwMdH6Rvnhasw3zU
8EhQ+F2J+S4IldQn+1VfmeYZQwInjR1eykuVQ8rniu6zd2yIunlkHrpG4GL4
pYadrSXIh0T2MxKf3nV4IXGqjMDZqDPCjc5FCNpyWGjufhbauyY4nBki5+bc
lEU2gYWYoit6NcKdiXClTt/DsxgQjXkn4Rebj5cNRY+mXOyEUuDfrocrGdBw
8xjTu0pTJo/pXQeuSo7pXbQ0uRn3b6XDL1D9il5IBeJqDkdMVCX7bZxV1WWV
AqRr7HzJzCLrnWVWqLGCgYojFaquJ8pRuSr/8rd8NmQYrrOPXCBg6Cl7xym6
Fl9kgi0iVLh4k5gTOjmUjlsNrhs908k6XbFrZdMKLizel4f9vkvmeXRlg5lG
LS65HTL3G+XAX7b+4K4cwfsGb50amlDbXQFhyhzb/WIcJDg0rWoieW50gpXT
PmOSL+cZdpqSfLnx5SIR7YckHjNdU52xoQQvFu5Z7iLChsXIoWdlzSROht98
jlYRErm6Lo7rWYgMmbN95A+B5VMDOUIuhViwyro78gCT5N3iEyrmMBA17eDo
iH8+EsyTFI64d+Kl1OVcKQMGvoduGdO1VMtOj+lajY71Y7qW8NrSBc7xmZhb
pfojnPx+OScfT9hxmYGa1dKeedQiSDP2XL8ZzMJQ58m9G8h+4j/ngthW8n7K
9HIrU8n7OePcSieR33R8lTo8IXMLOV8OcMt2JJH1eP3UnSExwfrJMpETeu1k
nR6zXZ/9lazTps3HNaXIOjVO2qnjfeYzfJT5F5sc2XDIWKBwL56A1izmOrdn
xfh5yv3ATS4L84p7VnmxCSRkSk/hDVBwKGDrDQ1FFn4teWATOoGBGWFt3+Zv
KkSnikmUzRYmXs8xWmQ4n4FZToPOa87kI3R3l2qkPVm/j4zkglczECSpOKZH
HXhtOqZH7VyoPaZHCeL14hvv+rHPpOO0jvau8NetiBZpdpATYuBll6qC3OUC
1K3cNLCZ24kXeVN+U5YykKf8JlDzSRWmxtrrW1lyYKky98UsHRK37zykfYnE
UfK+e9wmkjjKt1s1tVxTsB4iZV2w7E96GcLnLazJjmFDecjymJo/yesDHvOP
PCkFR0pPzMSQjSNxyZfPZhCoyviVK7euGCfYzYGfCljImCbzYPYXAm8NHpo2
5VAwtLp61vGJLJjxhRoNJzJgL331XvLcQujsrC9o0GPCqWpEKHchmc+z8q2G
NvnYLtp4NntvJxxW1/2SXcvAq1GjMd2p577rmO4UPir1b3WnmyU8IuVJKuIU
aJQHqbXYI9f5pJq8Dz4FL5KLaVkIkGotaiP7INXx2G3n44L1EGbGH3nevc+Q
OSDzJJPECXIFsw1USZzQ/OnoaGtWCY69OHk6cDYbNS/jg75WEDgtZqpl3FUE
Bm2xUfpjFkbumXjs/k7i/GexVonXKbh1+x5nPo8JHe1XIn9JHtSRNVs8/UcB
4r0P+kxWZELtXusnY0Wy/yyMbZi+KR+7TM5U55t1IuJOolPkOgbebt1x0q2X
hl07udKbSf7i9Kphx+dVNISfQe6f7laM/BKR9VbjY86tYcPjEu3YzmrTnULy
84CZ5ikNJj2IEU27OrC7GXcm+L9cJpIHrYErDZZJDLDCXSgNuxiQ9KsQOtmf
i5PqhTQWyWdnc36FHSX5rNrXXIsPX8h7YCTX5HK5GzUDG89rcFvwoeVVAc6y
IH3ousfG9d3IfySiMeLQCpMym+WbLpF9QnTBoFZUF3IvxvzlB7aBZ5/kp32S
5FUhPhbfMvlYLu2tcFaWhqS9dxxH+pvQd+xtR2oyD4rSFE4crR1lG63eJc2j
QXRj4pyzvnwstlvnFH6ahjbDbKInrRlsnWadhmoeOOp5ke4v2rH073NV+/Am
JHEPOqrH8sBd5/Tkys92eC+MKjJ7XY8lsR1TDTq56H3pGjeV3iFw35qguLq3
5vd1+mU4YbSlINSfjbrfDw/7hhCoyd/zMnABec/Eq5yNBzlYZTN7/vlCwfvW
BMWL76ucbppPQfBXl2tvUplkPU2970bi8Pe3c8rLX1fAaads3ZchNiZJsGef
PCR435qguJFfTKj+1xycjzjw8Kcj2ZfTjcre7GdALKFgk1xkMRyeT2Dpc1iQ
27Hyw1yO4H1rguIK2+yf3JWtwYzP0dPehXOgecokeu4MAvHv6rYFr6/GDcNH
BRdPkrxgiuL+SiUCMg2T0hYZf4REbuvxS19ouFZbsC7DlAG95Ci+gUEh1M2e
hnsaMZFq/WoJY77gPWyC4nlOpeGPmirwdZ7430BhDsI7Xni/20/ykZr4XZTW
clxLydp7ppGNmS6V6jUnCYF72ATFZ3wLy6Js/QzVzcN9QbZsGBbNslqQQCDJ
rnzFxHWlkAlyd3TXZCP6xqO+9Px/s7ftpyr9BKcYJx+Xztn2g4X3w+yF7+gE
Pps6ybuJVkB9RMNoRjsbivab42RcCWhfypuyzL8MF057PAt8TOLPSuZL9XsE
zjgHTOvNr8C22qa5jFE2cug8E58D/0b33vatpEmtHC1ny/atTWND7ddV6QU+
BGLXvV2i8S0HdxQ2TTrtxEDGie+8KPKeRHKm3FNoz0Fy1CP3THsGDBQ5QgY2
DFwsjLWIouZgcrF4+X4yPu+mgZ4xGTeyndDmuoEL+VnDZUfTuvH5uSEn0bMF
molPogau1EJ8Wbd9EslTakTMtbJInuLtnVI8LFKKH8pz6YbKbHg0NjulFhOI
6E/c7/u0HpOWuDNEO7igaftx1ZgdiP0WXL3yVx4uv6RO+rCkE4F/Nkaf28hA
rHj8DfbCGnA21c6wi+Lg9oad5uYkD20aeGwt4VyPqAo994dlXBw18UtZ/Utw
vRNf+Bdnzf2IxMrYnH5jGnwrZ5xfRM7xuoOG9zIvlsJrJHxS9Bo2dCMun16T
ReDekLju+aYaTFooz/Snc7D+ZXXGB5rget+aXfJ2XmMq1BQKvr3aUYu5GQdv
55Hz+g518SNz1ULs6MNF6bVM1PTrCf1YwAAW7X1hPr0C1sYaFUJ0Eid3Bmst
OiG4D6z9ITuvWSQHnbny2z6ZxOP0QIVV9LE2XKNGLqpozEKOXdtBBSZZnx07
/sSQc/Cleb1Bkm4x5gTeEA7KYSHoTsvrmC+C6/2E87TUxrRqJNwODOm7wYHT
18OfN88RvE9ANyxS378jHfZ10mpRVlSoyQ21zF3CgHhb2i0mrQA2xzadypRj
YnLgd7H0xYLrPYTqu3zj/gqIPDSQPNLDhpiY+q7gowSG2FfrpxaXIrR+9mCn
KRuZPKG+zFQCxe5+zvq8z7CboYeES2yYHt0rah1B4gFKrKLHtzKE4q5+7Ws2
HjdK5RrcIPFe0YOWlf0cpJ5Tpj541Y3tqR6H9e+34GTWvJs1f2iYtzevM+Ql
H3mrjms269LwRaJZveBOE9pA+NQ/5eH5NpWRq4PteONKM3lnUovGYz0hYZO4
yFr4a7FbKh2vA7db6L4vgbefsVSCPBuyezSmtFeSdRp1irhO5CHC94/Djzmd
6Mpk5jRvYkCdOt9RhbyHXzSe62ia0DDynBuvTN5Dv6avD2bkpaK9d2LIJM9a
BLfKK55fIzj/EnPFF2pHsOGku/Vrins3Mku+SVwWboVHiG/3ru8sXLTUdF1k
2Q3fHAd95zWtMD3sKU+524npC/9ekevpwnMxNpEwuQ0SbB2Nv18YyLpnG/yu
oAv6t679vGbRhgAdkawU8r7Hrfod6rOgC6Fnt0msPU6FTaeOrtnDDny0GAqr
4vORmZ22w6qIikPV5vJ1zFY8VNvqtWIpH2KZ6jNfTWuHxOEf1aaOLThwUMhR
oYcH26jmYUmvdtipMgJfZ9ZDxYb1JpXLhZdG2eaE1g5Ih5kW3H9Wh5YGPsXD
l4sbl1Sz/6ymQ+zokZXS2yqxUUFsR6o8B2elKGzLnSQe44Utr6wrg++LIy9u
xrOx3vc0/Z//+yed849qmknBJw/WtzXJTDwa7rimMIOcRwmvSv+8LEDUaplb
Yn86Ea27O35UmYG277uiE0YzYVzW9NnTjYB80QrZGxcYKO+L92VUfoTeByOV
S9Po2CYXuFqb5EMTD4jfVShLw6vvrk4TJjVDdUI0Q7mIgIfF4SNTNdIw6vHd
ZOBhAz7tk2yNIvv55OwYW+2sDMjtd0/8UkjBWmmH7Ev+7Tj3JjE8POwTfjrt
29+6Nws+9rPz32r893vego9wWwdUW8l56HJUdyofcsritt2G7ZjSU9w3qFWP
FSxZZk8aF8mzL932mUKHK8f+9U+ZCmjtDDsoQrBRGP70eOxxAmEBt2/fsS2E
ftyttK97mej9M3XS0bkMFBt8+K5inQZ3i4Vmnzc04pnkSZ3QSAK0I/z1MSt4
eGR94n1sRzdYK778uLGkBROya/NPPuVi/6ZS6yPF3RBZuD+laXcLHtDuhZ1c
wkKWvJ93gmY3LMVyZs3wacWc3V/bywwZWH+p0dvtTheGphx/PposeE/RfxtP
XOF8d5DsI7vjE+anHulG5KyZbYcXtOJAz5BFiV4n1pyviM9s7YJJi5y/wrI2
qNUsKQxbQ0e9zJW4eNEuqOm8/eUWRsXt7Spnd6h1YnGXw1WJpi5Erp9pc1yr
Db5nGw8/es6EtHeS6NK53UheMb2Ik9AK85K8xw4SJL/52fLQ7AJZRzecZ5lV
tWHeuvJKv08M/Nl54qn3+y7IWwe56Li1IXtve2hyFB1qnZ0r7sp0wehW9XFc
oiLI4O9JzgSSb7PKThUrdWH3vS9e12wF7zkRFP9TuixHIYgGIveF65IwPoJ3
Fei9tBD8eQ/1d2z2Ohr0lnU+K7vNh6ifofNlZxpom1krF3tRURozasIhP6+u
PtVUNFrwvhRB8es/uDaR11oxf01pWOhsPqqOrK+2XCr4827HV28oJO/5qYjU
8mVkXGLOIZkhMh6gG3V327YWCM1S0vjJ5WGblOaL5VcE710RFMfIxgSaUhM6
hpU7d97nIUdz+aEs2Q6Bn9++xsxMl9KICdrqt6q8efjkk/t4g2YHyTdj73h3
NyD07fEibyse/JYFT/vj1oGVo0F+a8uZyLK8P3p5UTeuz7ahbolqhYjq8UvL
fhNwzF089dKZLsyWOSf9rbUNFCfLT0t30pB11Z77MYAPxff6ry840DAxaNRf
urAR167t0Ikmf2/0yZia++TvPZg3c+H5lBpca0686lTPwbnsvSWPeXT8MX5m
d8CtGJkXSsIVqSzkZ11xHeET2Mm85ZG0OA/RcxS3umYzsKFkW1vxDgbORZta
OCa2w6c+0fYxhY8+hcUdfaI0pIuJLurKaoO/gx9X1JyP4+7h8XPqafibZ/M9
z6cZJn+HxRaX8LD6krqUeVo7RFLeqZy9zYVp2evWNwXdiA04K6t7sAXBV6ZG
7A/l49dMiayhOT1gWicpWSQ1I7Q10OzCTj7aVM4/Mpjegz1LFFdmUZoF7rsQ
FBe070JQ3FZZOfajdReOMqp6E9f0YJ5Xo5TWCfL7JO3ZWtfBx6qZn84uU+mB
3OGKz1NCmnFK9e5DkVtMBGZOW7xCrhttwsJbalIE76/4b/daCIoT4cnb+nu5
eHReK6Snvhv9IQ8W0lYL3qcnKP5mQcyH9vZsHHF8d2uG3Uuo+/BqLl377/ut
wreQi+dSaZjN5hkORfCR/CKd/taUhstuYS0p3Ww8WzP0S+ZyN665Pr/Zwm1B
GuX+iOkSJuqiuJcfTOzGns/fDrMbyf5sNi3VnyAwS3qCnMGJLrxdmuSwn9MG
OlMvSyy+HRXDzOMPCvlwSJ6c806Mhjrio2I5OTesX/0tNSP7RoDK19R6sm+k
Hy03emrViJJ2l8VcVx5azzsM0LZ3oJ9OSdF8WIf9gRGTI0ncvqlnqevHDXTM
iZp07ll1NQ415jYd8uegXbp96bxZBNSGr36df6YMHGvD6DMhbIRNONSnGUhA
eHjhzJOFRZjid6/24k0W9udGpXzuJ+BllH9v49RC0A+0vnunwcRcyZTqUgWS
N/lUWUyyIHFgu9yfIw0MLFX0+tVizgBNUj71fGsa4hPEotWNmqEpNJ91oYyA
Kf9W1x7y5/Khdfj3hm7Y3g3uCjvciqYJzEVMpU68ObFmaHtDF9ZuT5U7qtuG
V6nHPnhtJvllY2747DVdcNFZLrt3NRUbOhtXmrylQcSl9dPwEz6yyr3E7bfS
cL1X6uyPjy0YzlMYXD3Ig7nDhOB423YMXjfSjW9uADX99DaXbTxwUkK293p2
YHbw2SHHjXXosogZOHGEC/FXd233HqSjorDwbf2OatS40UQCz3DA0x8gti4m
wP8mwUucWYZLFeoT1/uysUBpx+/oRwRaCz1+VEUXoeFPofFuTxYeZhL9g78I
hH55O9XsZwHs1wmF1SgysfZ1nI66Iskj/h7M9N+ch4YHvc6a1QwcEF729No2
BsLlJiqO+bNkvBzzkQyvO/JvfUPKcx+W/7Vg4Eejomx/YBfCVZ9U3H3Rhozj
S3vnbaYjk81q8RbrgpDEJa7xQypsM/Rl9ROo8Gr11Zl1mrzPX48cnRBMQ+Ob
3PxH3GbU3P91Oq6ZBxvJradkw9vRUbXFWsO1geR791+5qJA4SII7SftJB1RM
lafN+FqL+ltUactNXBxR0o2iXqCj4cfnCbSKKsiZhuhqHeDg+jlrzbzlBKze
qk11Tf6MGzZddamn2aDU3rpoEENg1UFDXtrlIhgN/qn/Yc+C5pYlGVqDBI4O
x9stphfgWkpIXLM8Ez8a/GODSZ6lKzE6S2RdHhw4Hw4PfmZgsfSxIfXtJM5Y
lDLmv2lmunssb7vOnRjLm6D9bGbsLnlxdwIrn8y/U7G5C1N3zGqLVqLiaTt9
xz5eO7o+8NJWVvHR1aHe691PxcywFKkloW2Y9uDNkQpjPq4c/OCe3U7D/hlf
n++TIPvt7vRQzxQeRpr3iq9paof0Ji9q2Gg9Ct/P3f/jLxc24TKL2PkdOLHp
up98WC0GY5iLtyhxMTgQs87sMR0djoRXokkVrB1n2sGIg54PzAeXV5Pnn5ff
vcf8M9oPuaS12rLxTtRUafgVgfydMsHK+4tg15VYtceChZDpwfKnhgnYo2VV
eWkB0BSdUCzBhG2ssuKIEgMNYQkOJ7XzoNrv2ppFYUD5cNnkFjJvuzTsF/6T
N7/mCWN5m7LAayxvt5iy036T/GxzQGmc08ou3IlpSo/fQIUJfdn7m70dqAot
lz89wMf1W8GztiVSce/6HMruUzRstEm+PDWYj2iNPuEjNjTYyhjMOXi6FRb7
Dk0fluNjbtLpeZ812vFx3YOLdcpNkF0y0TGGxCF35DM+aJM4JMzFJ7rwTj0y
mZu1B5q4ED121F+mqwMdYt0pJ9bVQuygSoupKBczbERPJn4kcb78rE6d7ErM
il5xMX0ZB/eNAgJ8TQg82rtA3J5Tij3v5u97uZ0NSYrPY857AjsqW+/P0y/C
iMmPm5c3sLBqp5fyxz/k5yGqs/F9AXaHf7sSOYGJUKs1H51I3nTj0r4HdSp5
iG9RqruQyyB551DZdRI/pKyaOeZDWnrszZhvY17h1bG8CdrTm+4jMf3c5XaI
h5Wfk8rm44TuIak6KRqS9Xujfak0mM5SnScbx0exvWQt1tNwcGLprkyiDcds
OcOFu/hw6VTy2fyZBgPz+4GL17dgg/rw1ptssv+3force60dZ4fKXSL1G8Gx
9w2Qc+bB0brl4Ky9Hcg7QmfdlamH09ztZScSubiQ/d21QpoO2fMFEX+IGrB/
OBSbMTmw3fnRe2IrHcqhN5ttNSshlBPpEDqTgxmFG6KbLAgc3Div/vaVUvQt
+2OrsJYNj3NtviOfCGzQol8OkyrCpa0vzB2Xs7Dj/Y4RMSEGLAMu/PR7UoBk
sXk/bH51QmPnQ5cWFQZuXh0KXzo/D9OTaEY6mQxcz31kqLmTgclG+fP+yafo
r/1j+TznHDCWz5fXc45l9TYgcsCxT3gPDxsOnXe86ip4b6q7hLjvgZVtEJrL
FA3T5+NaaPuUnN80fHU5UriKrN8s72f+1WT95l14NPkjWb9Stcp1ynqtCFN2
TVaV5IP/aK3ww/WC/TGXfjOLzBhoQlWau+eOdzxoi5huj6QK9s08WlJs43Cn
AafKM7R0tHkojdSY9zRQsJ/myeQR4/pHdbAt3HzVyIeLlp1tGrNBF/g8yfK3
Q6PpV2swt13vuFk+B4+iC6oPDAn23xSdKpO+KLoCacaTBlsG2Fgr1LbP87Bg
X86fj62iC2VK0VMRdHLDUjYye14HrSsS7Nf5tr7pZ0gPBX2NVm7S81gIFc17
e1CYIdDH8/LsOUoRvgV4ZXOtdUJ3J8LlRWG2VLC/Z9QBr1OeM/Ow5naoOieF
gYoGU9f2nYJ9P112nBzzVzW6MWnsXq2YHjZ2r/5bP9Bv69NOqV5rRMKBA6F6
njwo6F+acHhjB+zCvaw+3mzAN6dn1rc0eRitn//aMLgDV3t0LH1165GfPvy3
IZ0LT+kHXyMm02GxY+Mq5+BaiKs7XohU5OKr8pdHX8PpuLjunUbamWqsym7Z
8vs8B81hvaoqCgTuOepZXfQoB09zynnbQjbazvu9STxPoNxZM21odQmKFZYn
2guzYZrEtjZrIfBe9sNO4RgKePtUtj3/xYQm55Sj0iSyvmymUJfsKYDJwljp
v/WdsOx6/HW1OgNnk+6P1g3mYs/RpL2rExjw3PhbdDWJJ2Yeqxrz8cyJsx3L
z9P9if82P25JSw82TmuAcfON+bkTeeh4f3K5flYHqNTRad+C6vGr9O0a9VYu
ulS0PLu5HejZ1ySXeKkOhvf37lt1louch6wjP0zpUAs7+tV2Ui3J313E/n7j
4Pz3oAOh5XToL599XD22CqvEzqx/YMVB1g3FtZe0CfiOrtzGaymDV9j6kMgX
bFTMYM7f4keAVslQYJcV4/yEPRfsv7Ig7EzPmN1JICmyt+jEBQoU5GL23mYy
YRqlFvdwCgOHnhlcD19fgPQCm4HdpZ0w/cJvTtcg+7zbubWLWbko3Ttwj/qM
ATue92k+mZ9jpy6P+W8OaUuO5WePUPq/zY+QS+9yr6Q6LBYKM4r14+JAWc8U
YiV57j5HGiQC66DZXleseJmLRWft9izbSEfx67/csKxaPLmRe/S1FheK2kM3
lgXQsWpl0G9NrxryHO88up3NgXJrYP/UUTq2v5Dw3V5WiYCnZrOmLecg8fvU
aYeNye/V/eHXI4MyjEpHTdW8w0bzt58rDUIItB9MuJXhWAzxWfzVrc0sSE7Y
V+bYRUAzZsklK0sKoqeuilGvYcJLWE1RUoIBfevkEapyAYYdaq8/yOqExQbT
PytXMKDx7lPOgapcTFmntMTrKQMhc76EPbZk4PMldbl/8rO6IGPMz3FafP6/
cMW4j8zWcR+ZzP9NH5kBVbG3Uvq1sHs9ofblBC5iJkm54BMdBb4SSQE+tVBO
awxbN4+LL+I7ypbH0PHIL0dFqL8Go/pvQ2S6ODinaHT8UB0dX7fO/nK0sBoe
jqneK25xMNv657HlswlsNTil8rO7AlhiVW8rxkHGoY3T661JfhSpef1C6Gcs
P77qqowbed8CiJgrcQQ5N493CGkUo+D9dCVKJgsjDzVq5n8lYNF7YjR9GQWa
99eeupfFxMYlE0buTmNgv10ljz+tAAmfl/ilJ3fiXOlbh0+aDHif5p70/piL
e8MKspLhDKxfy/LcasXA/FvUMX9Mr13HxvJZbFYxls/3Hm7MAY10lBd2vWpt
qgRhtHfwogsd4XcGZ3YsKYASTbRQljyvHLreFFPyvDqV65k7D5RhRmasuF0Q
G0E/B6JWBBM4cdzZ9eruavS3LXB94MHBvG1a78oVyTqSi6v4YleD6P09NtvT
yPvmkRkVJEzgzx2p3AjFGtzvLV2+/ykHp07Pja+TJOBzuf2gz90qFLS18zp3
cvBD4dwaM10CCpHWTwbEKrD82mdr33Y24hVvZVDJ+SJ8ROzX+d5SrO19H7x5
JxvPFVmic0mcNuv7DR+9viLs8k8QUolkofmDkTa7j0AwHBtDRCjYzCmWfPOS
iYXdTqbyUgz4GVznFf7KR+QV4/r8Z52I2q0os1GbAfM3l9ffic3FYx/qvsiH
DLyRmio5Qubz1AN/6X/ymULMHMvn5b6msXx+HYyMndefDTVLw3fzlV/AfpLl
NbXTbdhb1HjCMjwLFKetRscaCNQNvpO67spAi2NPFXOkCE/EOcO9sSwYukav
VCW/p4PhmrNXJ1VA3TmAEkH+vbK+NnnV5N+rr5p84JBrFS7YX5+kYsaBdtm6
7jkrCWR9zH+8NbAKz6TXH7DbxUGlXniOBJm3wJuhSvbmlbBt/MAMkefAsN1i
m/1OAqPv5Siac8thHuvlc+oDicc+qd+/dJVAxQ+pJb5GpdA3CGko0mJDJnrt
tBn5BPzN32+1TCnC1BMRhX+vsECdHq2TQ9aXzQMTv562QgidzPzk/5AJgzjD
ha+kGeiz2xvh3JGPufO5q94/6oRO+EupCh0Gauz6Z/oE5MI6f91XlfskH8ub
dOjNPz7CUQZjvqK/3XPH9pDrhjH+bT/MXNrXF6j5ESseVW2++YSGQO+24BBD
Bp6uvTC/+3Aheq8pbnq6l4lofXc197kMxH1bYqh0qxSUo3Izm9eR9/ZmrdsS
En9yPlpdjv1VDqvQ+pnhbWx8bDgWucWNwIeYiLexpRWwMAjdIC3Ewen39zS6
bAj8aq2PyP1bDpOAFMfVNDbmBbEuX3Yl4C1MXeapWoatETIzF91i49pDuzkZ
oQR6vHwzb4SUIOHHk/o7M9n4KT7gdriGQNDD1TP2nC3Cy65wG3NbFg6Wf5Z/
RfJWQ3Z9WOa7QrztL81Z7MOE+ZPgR5vkGLg6ZPesrSgfpnfv3LoV0IkgRQv7
fXoMaIamth48mwvdrOWVibcZ+F7p43xkDwOqCbwxHyjNv8fH8tmztmcsnzNf
TDjL38wB7/qJ5LCAbtz7HS36o7QFfUsoGztuMtHdH1b+R7Ybph8sg7VTW6Gm
WTnxxhIGEmIuVdlc64LpMsf6q3ltEA1oPDi8ogMpgw5Kaa18aDlmqLcSVFT+
dKXkirfBQt73qtsKPhL/PFIaFmkX+H5Q4KeB1IsgeUTn5S8vXnFQM5RjXzSZ
wMb5Hp0nFcvRTQilZ6Ww8Xs5lrX5kPdC3nqd8LxiTIxindr3noW9n8oKNHsJ
XFcfyWiwL4RDk6bF/X1MtFHp7SvIc3fKn3rlcUIe6n3cIyHUiZ6yWNENmxmw
VRoxvUz/hKNv5s9UjCdQesvN3eUMAxuDXRwnZHeiRfda9eT+Lrz0mR/ZNNCK
7Ds7RB+WEPjUl7VB36ELChPlKRL9bbCLKJJbmtIOk1MMoZYiPk6Ze8ypFabh
9zSzRzl5rRhyr3p1bzEfB8I+eJjOahf4/s7F6zOff3IicZr+nKLN+Wy8erO3
7gN5bv33XhVIbC/GGd/No4vKWbCkcJZN6iHAyuxQYscWQjjjlmj5OSaqZwSF
6Mgz8Ng1jXnqZx7e1kkK71rSiZFrVoo3NjJwe+XPKQoBWZBi0id3kvcvpc+g
75/nyzgnD4npk/xMe/EzvYD1XQjULJ9xWpeKlujV6x7Lkzx7qodQRiIfyztz
7CgaNNycdSOIdqgVTRIjw63SfNxSUc9S1GkX+L6McEW+LM+7GDeTBhgTGGR/
2/944ytyXrP+9m2Z1VGInj06lHmhTDS90q7zJPuGfsVQYu/afOTN1VDLMO3E
pheS14XWM7D2hnzTFq1sJCi0by0l6+S50FF2thMDjgaS0fm7aThr6P4y6i4f
uWas1j47GjQpsrTVnS0QftB3v+0vD90z0oIsd7cLfN9kqj9r/lZZCtL7Nqaf
fseE5yde28B0Ep/s1V0qdDUfvyepNri5dOLD9eW7PxiQ/WTttuqjNdnw2biZ
snwRAzGDXnVp9gwYFT1en765BYuOaiVN5/JgnK43Jd27XeB7GQWHOMcC8/Nx
sW1NlJN/JxrOa5ZHkXXtpBrR5OScg0bKgpSZ5H19UeA0k3FI8HsKZuyvWZtH
cvB8vuPuU8cZULjz9u/a/eS5b/XJCBqsAWXpof1SPRxsXCR863gNHQYnQ1yF
nzThY8WDn8axJN+vG+Fb/GxHh94kpxWKLQhXTZQUZ/CQc72/XNhfMJ8VxFsF
8VNBvFIQfxTEEwXxQUG8TxC/E/T+giB+l+Ii8Vluej2WN6p4nU/gwnrd02lp
siR+FlVbuXxXI3TM+JR9rjz4nj2eWLWjAyGVW7d1P25E11+riInneYh3yTVq
W9OBOZFiuetfN8BJevPRoHU8+EDd9fyNDmSbTtnccLQe7vHhu90+c6Hw8be8
zW/y80fbZGqHynFty8r5+6hsrJOe86ObnDtT1mjrHispQd4dT9PTc9nYneJo
JVxB5idzlphlFwVxRa0p/XNYWPJIyuQayaPlXoUT1jEFYD7bsH/dYCeWGSpY
XFBhgPJg+HbsljxIZSeWGNQwsEHsXoHtNgbyHNM/FpR/Qr5Ww1HEECB4SWLi
Hgz4ELe81srWo8KUKv86kYsZDkv23JemY3n/kKqDRAOib7eN/OMjeUOtfHBG
dgeuPXcqVafUY0bJXak53VzkTTxTsKepA2/Na+31q+swML30StIDLjbnX02e
oU5H5uKcsOLmEnwveGZ/aAEbosUX/B+UkXPB61m1xOQiVF+dcztpKQvXoW0T
I8TAHK2jPWU1JF51mFqTNYMJ2m+3jAtKDKSZ3R794peHkayaL9K9DCSfrug5
uYWB0e+qj/2PZCFw4OPVPcUEZOxfOG93Z2Df44WBA6froJtoKFxwmgt/C4dr
1uYkzxItWHAktQ7b2VXmnv5cJJofkZirR4fTmdDs/vl1WGCnQ3Gx4sKdvYs3
i8TPtPOfGX8XFuHsq/ci/noshOtmMOf/JXHCPU9+4nABBtdFlAwuYeKWtPJ3
Ctk/ukXTYnwL8sDJdVabJdEJRvNFyWxjBiJXNzjO7ctC46l9UUw+gVSehnSR
CwNCTZpfVl6ohZg2TW14Nhfn3O8MH42jw2PANtpkRy08Hg+XvRDn4sTn9KWu
7+lgiascalpUiJJJa/WIVUwct5p9x2YhA9vtYh0tBvPgZt52f61KJxyWfnUy
IedFP6ckz/lCNlarxPKZUxk4v+HoYbdjDNgMc7fr2tbA7UGr2+5UDuyHzydM
FSGwMixFaJN6PpTaB6d5beiE36zszdNAzpcJ71e4/MnGApdTd63USbyX+DNh
qx0Dwb9rVkhdyAEr4sFbbTMG1OwkLPeT/Y35q0tpZ30nbor2en7+3YWgthvi
B/taIUfTOtrMZWL10LbGbcrdEH76UC7loWAfbUHxl9NjVU4qE7jlQVnso9mF
us3htmfNqYhzlbyzYD2BkDT5qNmrurD76TrFc6DCi6pOLfLlY+HJ7dETZ/XA
4oyksf6HZoze/Nfzwyf+p+eHTabuGfO/rlo6MqaHd6rvHesbtFPrXmiSONK8
9pyUn083fqmquQwTLXi8XC6apsuClItozEadbhypOKbBviDY51pQPC6mzvlM
YTM2mtakNNXyEKou3P83rh17hu8s9l1FQ8qK6w++3OKjWOud7W8Xwc/PCL34
l99Q57jfUPC431DJuK/Q3nFfIaVxXyH/1qZhqboCwPtX2SEpJsLN5acdI+uu
5VTHDKv+Kmj/8tNfa88BJcNay3zZf+9zFzDuy/x+3JdZftyXOXY8nvO/6Ne8
ezx+ejyu/b/p4ywoXhVnoOX0Nx1PYzhKT5qpeKRjRfEl+fiLUb3fi5MyYV+r
/NB4P4FDPjJBsy4zwDB9UO44rwgp5xhWBTosOCTumWJN9odzc0a+qLVWQl92
yUCKJgcD8cl6M40IRMSdy4xeWYPDEvfWtMVzoDL1udEScQJirPL3tH3pKOHT
1ousqcSPy/X2plvp2Bt5bKZMHtnPV/i0dIp3okur+waL7CeIPe90I74MNmuS
2p5GscE66hnz7g6BA/TMdOf+SjyTZzwI0uNg64/UP28NBZ/XYZlPvxBTArfA
6HtxMiTvNtQusq4m+WP8WsO8sHI0di2Jef2ZjYbe27mhZwksOytpujmtAtpp
sxIrRsg5Hr/G8sZBAhS2+uyt8yvgbunW6c1go2fOPCrXhQB72OgS8fETtD4Y
mQVHEAi3ECqNJeeOruIiVydvDvbr/7z3JaQbh0X++uxPa4HWuG+L2LhvS/l/
8G2JZl9bvuhaPaz2Un741XNBnIxJPvOlA/qXsndLhWbitgu9654VgTusTXr1
5HlF89e9j/Mtx4UnM0I2FrMhXWNVvvEcgQ1UyubDAbXYs3tXnqcCFz3PhSOm
RtJx10CMeleyAd5Pt6zZOpGH5JCg8pdZHVCO70p4kkNDgvuasFNRfITmvFZZ
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
Vi3YtZIxjJ8mxFMa+7tov7//C1/GGXk=
     "],
    VertexNormals->CompressedData["
1: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
oeSnf95q61FCsZpUci+9HUM/vc6fmS7D7Lz4xEN6ZOLIquG605YULEl+s7Mq
mQSLSVntcuUxIqWaX7DCsQXtB49UxXoU4nYhYw2RMkasDfiezs/VhGvee8UL
EnNxftRTZPLnGFGc9FqnaVc9EtWOXfoVmgEvN0Wfya1s4n3Zxsh4lRoYuWeb
uC388L+uRyI2xL41fv2wdVj78WUEBWWPW+V0N1IRKL4nTLXtI0aZkytOc/rO
ZH+flVJ6NKTxTsQx5gUR+0/klY4m0mFj8WGg/Tkd38/kZf0SJBPmXNPLTilS
ccnQLUhIhARWjNevv/rnqnS3Ujs+UZhteSurbMXWePRj1yc3s15i3ty7bRFc
dKw41TNEsSRDX6VTlZpIJybM4+fpOZBhcP28ZoZYN8bfXwnaeJBNOMnIT4qF
VsGbbRZ2i/UeL33juDJrhoiDbnbp5ZN9sCX7Lk9Z2AzxTMYPRxs2kR+twF2x
qwKXI+cunlqRBJOdc4INPdlESdr5+QmaZZgY2Dt/WX4cnHSp9Li6EeLa3NRn
1Z86sVXhY9+T9CqUdz1x7QhmE5nyESX1r0ogekxMP+LYG6w7EG+75BSDeNzD
XJz6nIS7u3X7fs/r/iPPq9TWXxqLYxO+3/2D3RWLEUs605SfFI3ctVcVmntH
iTtLktN/fGmFksxMUc9kMYQKBB070tkEqXi9fOf3QmxfOPngi3QkFg5t+JRq
PUTEnYxRdt7dD9ZSrfEvZS24d/tN25dbY8Tt7OqKyg3NIOXESc6fLQB3V+HI
efkRQk19wKdrezcMiK2e7i71oHkbGQ12jRFPH079MpzTCHrTI1IPk1NHeiel
WsDpAxVavG7P7cCNfd0BmtyVOH7dY6p3OZuYnMOro/+mFosLgyerUtLwsNDU
LWp0lLB70RWw+U4rGpN/fwsyLUHSijhfTW028fTr1w1ln6swgF5qvlUqvsq8
zn1iMUbcuOpJO3ytGTnHabu2kon/ddxatjikDHFTcFTo9uPLJ0nQfxrVP8zB
Yx/6BsMC6RjInXBRyLVCX0iw9KMkOp6aWEVrU+gEafMzVpMEGVlF4kenNLvx
cqGhvMqWekLooOM3iigNMhtMzz7to+OE1SU9kxtDxFsNnRunrvWjVU/HtVmp
BZZsC0WeO/0Ef/NhgzpQ0cpN5d7gS8HU2TvnaBYjRMeh7ujr/V3QcjhvnBNS
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
Recrmw8Q4tspux9N1EClT6tdXCMHqXKXTDZ49hHsTduXLVRqwq2Bz9kbD9VA
h+xD/zmlD33X43Mie4LqoCoa4OTeWoIiU0Grp3nc8fnW6NBX0wKNkzWfJlty
0TIxxOZh9sGtzPaz1+JOvPRMLKENpeOkgsGjiDl93HGP5P/zuBtH+fQnHGMT
uLxJxy5UpxfjunXG88Io3HWXSSl/GokIuQaeSm689X7LHz7vBhU225OHZ/96
g+zJi2E7ufHWvGPBmjn7uyE1xPeDcagbxUYFWbuVmNBraAvTodHQN6YrpKDS
BLG7Zld6tzARuLb5S7Y4AwkJG2qfitbC+MT21CodJtjUJT9LufFPMZ1vg8qZ
CryJq4qjGjNhs+kVZxqXF4etWO53Rq8YzEchr+SuMBEfZ6a7YysTF47X3Oze
nY+kCqVj/rbc9/K4NyieY2J5ps+9su/Z2ORlt2bo1r/1t+gp9Tfm5+Fgce7n
yCX017/xTcXwzTldvtVMrFxS8XjSgPtej5uaiu2J+HTGyKewiMmN89pnVbh5
362ikJgJk1h4Hvnw6ivBxOXx93NfOjKh2lq+r2QoApOFm9RqUpmoDDe6auLO
RMZpaXH6hiCwQ9m3tyUwoRiccMruORM8Txkl9kK++E5z7BT6xMSm/NVrNhRV
wCEnzS/jPh3bzUMXbTJnYfiig6Uzd5+FzKEeWNbXhhnWT5autmLh5so6vvkn
abixUFXffrIeQQJzQgo3s7DtR6Bv7TMu71BNe1X2vBqt93fdKl3Awq0dc06z
NjEQ5pRSfKOzFNkbHz2c+YeJdQtsxk+9Y2Day1O/Q4QL8f1l/NCZr9xxNMkP
y6AxILc5JGfL5lxItT03/EBn/lO/ejalfnVSd57I4wYGGtKoaS960pASvKVW
YjULV3L1zsX+YeD9mvD9AblJINRPyv0WZeHb+ULe98uZSPoSNaKiEwc3Mape
9SwW3pr+fnxgMxMyLaaXEROJ0eIymaafTDxIVLb/pMfEowaZwx2BQXho/pb9
rJ+JPKX2XbNOcv/eQYND9Fu+/8nPagOpTPRXTlzWM2Mijkas3vTSFe9mZdz8
0sxdD9FHzW7+yCecZz/I/viZCX15n4TDvQw4y/Ds0RnvRtbuimkKx5sx3yS3
xEODjcJtUqHBEjRcvplwdHZeLQzjXy+KpLOwqnaOgrcaHUtGS/RnlVXAmzO+
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
Y12561Brj2FI+muo+iv/knnERuRhDb+vpXQUKZrWqBW5QT+sokDzMBsdO1Ul
eLIHCHMLXtj7VGOj2d5v3j9Tue9tT1ji3Etc7EuZnq3chotF5ZOfNtfi6OKx
9TpmdKL63jUfjh4FNaKmQ8HPKCDeOmf6qIfCZHF9RdXlDoiP73/QZdKHp07P
TzzmqwH/C5ZNpHsjFONvHIj43IfdjpHxpxJb4CKkKv2ZVY3tb0XnBAv1IYms
w2hNqcOc2kxIXFnajUjLFuvbJ/Jhp93lKqbUi1wpA+dnjyi4NlfiybxjX/Bx
SXi/+Z0eBJ0yUyvyoMLuysig+P4UjIbunzZvkIODTeoG27RocBBcOH81NRZ/
UkN2n3PgYEuQyGR6GQ01+xLm3XwVhqcmG0fEJLjrfGtC3qAqHU9r8opnwh+l
H96e/lDORo79DPYWNzoaG+7s9Fzmjuv9h984erKxbW78+GfeQaL/5zzzWa0V
EF/80rs+MAkbLlat7onoI5R7Tzje39cM/sJK+dyUCtgMpJVUebOI04siqnjD
urArfbFwi0cHLm05PfC8NJNYnCPtWFjQifUOav3P6nqxy/uB1JPt+fBYo5nI
u6MZrwKvaRoo9SNQ+NTtZUoNOJJgaxS2tRYmAouyZpX2wYGstzhM0Rs8vv8I
j3Qh9xzaqJcy62UBnPVPrM+r7EU6sTd2VWQ3OuWiWEvoBMLnqJm0zuqFXAXz
m1g3BQppXwkrfIa0v19d57keLMtgN37/QsVMw2eNt2/HYaVK85/1rRwMmZkk
XjKh4fG2F0N1a8JRsGPuiruXOZA8U/ZYsZsbV9lf23oL/eHg4oAP8zlQrq8+
N2cHNz78qo+xsnOHfM6XO87c+MDYFB573LKfyL19SJfa14DINcxXs98WYzvz
vNa3HA5xwH0k/HJROwSv+r9bV9QMt5grR24EBeNtyAPfA0QLljdcvs/e3Y/l
GUbT3pVV4djSmCH5Z3Xg1wuyLr7Uj5Nk/URzik6gXZ8vZ2KyFZ5Pbp8J7yrk
8oaVS49e70Pmy6S0IoMucDq6U3bnZSPRYDFf78tehJYo7HkpR8G+MPHxz+qp
WKRTJizY0oMQo9T+GSpU7HAyCa6dF4/4x0tmnNPgnu/fSucd5Z47kTt96IcK
w3HvDd+KzV84+CJhoiXvRkN+7IVpZw4H4ESRg5+EIQcnbXgj947RYNFxbH9Z
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
qWIiqkJzg7gNE35e81X92Z4I03zukFLOhNVgkDLlBhMuj7bpXec7jlOTvbwC
pUwoNG99p3KAhsFEK5FvH+sRKGIV2nmUhTHxjwlG1+moWDBzySGJalA2rvSp
12Jhwjc6uk+QAQWLz4eexpcg8xczbvw/OjNHwiLXWjMw6t6XcudTPgbMfJ0U
1v3bv/N2Sv/OQakz22XFmNDT7pUy84zFDL8t7Zfns1DeVcHvo8hExIY/NLO8
cEQZmfsI87OQ4nnH9j96MizlJcFKtLcQupRdNzCNheuZ+7eZ7GTCX3jXcYuI
p4hlX03knWAi41bDt0g9JvRjn6yI/2iOzFU/lPW/MzFv42Vpy0U0bL0k4eZz
rRb3l+yYoz7OwrU4P5e7stz1cNnp0p/ycujc63mfX86CQ+pE/uYCOlqNskxa
qgvxQrUs8vTHf/tl3Kb0y1x5k1FWwOHmga9fGxpbR+J1s62ywG4WVP1v24Zy
x4GdWLbRQfU9PvQ7+vuqsXDhvslk1Hwm+qXiV8wv9cb5OH4+49UspIoNx8yX
ZEIFKxeOZF/H5n7jzjVSLGgcPBM57RuVy3+a9QM0qzE5pNPN48BG/0qnrQWD
NAT6msn67i+BzIhjd74a+59+E7Ep/SbTV8yx/5bDwEBrkuvnx0Fw4V1E3LJm
IXTP2KsHrQx0paTLOjT7YNqeVbOFjLnfa1V562T/f3xetTR9jW6hfcX7NXH7
WMitqzN7RKXCdnsItV21HHZyv/vWtLKxlezLsCX7Mq6SfRmJgf33rd8zsPNt
/b5lPL6INX9jecaHBb0ML17RDAb8xUcqt813xvLcqM8CTv/2KSRN6VO4LUFJ
53FlwLJlRcwNTxeseF9s7BDDwg5vHYmLPH0EZ3xB7z5WK3Ks527g/VwJyfvw
1A3uIlzTPrw6k0xDaOMvSkwQDYLHvjdPN/MlLgkuUTD7RoFY126DScceHCf5
7LUpfHYjyVspU3jrf/kpP8lPaSQ//S+v3DeFV/6XP/ZM4Y//5YkmU3jif/ng
ril88L+8b9MU3vdffvd8Cr/7b/+C0JT+hf/yOx4ede//N7878joic4zCIE7c
NFeOSKOg8ZXrRSnTTgSdDFkXPr+aOJ7gISjeRMW0C8dW6vqyUa6eGaLF+AKG
Ya5Q95lOeDUkTjpz+V2XbrflYYcGmD5ad3qOSyPWdyovyf3Ri8sexhUvhDvQ
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

     "]], 
   {GrayLevel[0], PointSize[0.02], Point3DBox[CompressedData["
1:eJxTTMoPSmViYGAQAWJmIHYyfLJvj0KP/ayZILDSfuNJdibr40IOpd+jnf/O
mQ8V32m/eC1/z/1eIYcXkk9zem6stDcxBoHD9tmc/7ftihByCFP95vwraxNU
/Un7GdwhCqfVhBwyi99E/HbeYc8ABhfsD3V4/978XdDhDNOjR09j90HNuWzf
GJuu43Ja0IHzz8ncn4GH7NPTQOCa/eJ/PzsiFgo6WHD+rexsOgo1/6Y9y6/b
dZcqBR0C2j1PL9x5wv7sGRC4Y1+zSPnDlBBBB0+VBP/Wj6eh9j6wd/jbbdVs
KOjQuT6eq0X1PNSch/bpZRzcjQKCDqv7X/M817gIdc9j+4L5vJVFHwUc/J/p
cq7ceQlq/hP7yuvupjZXBBxCjzTrnHW+AnXnM/ulMv7bD+8QcPj59VRj9LGr
UHtf2L+9Kp/8fp6AQ2uvqP9kh+tQe1/at/GtWbKsTcDh3paWukcbb0DtfW0v
kizGdClfwMHL9632PclbUHvf2E8L+aQaHSXgMCk3+7F1xW2ove/sHev4Huu4
CTicg/ofYu8He7BxxgIOAGgi3B0=
     "]]}},
  Axes->True,
  AxesLabel->{
    FormBox["\"R\"", TraditionalForm], 
    FormBox["\"\[Gamma]\"", TraditionalForm], 
    FormBox["\"V(R)\"", TraditionalForm]},
  BoxRatios->{1, 1, 0.4},
  DisplayFunction->Identity,
  FaceGridsStyle->Automatic,
  ImageSize->{730.8294848762068, 293.},
  Lighting->"Neutral",
  Method->{"DefaultBoundaryStyle" -> Directive[
      GrayLevel[0.3]], "RotationControl" -> "Globe"},
  PlotRange->{{0, 1}, {0, 1}, {3.2197923664804913`, 4.761904423962154}},
  PlotRangePadding->{
    Scaled[0.02], 
    Scaled[0.02], 
    Scaled[0.02]},
  Ticks->{Automatic, Automatic, Automatic},
  ViewPoint->{-1.3787909930689002`, 
   1.4393608630523005`, -0.16485054851176711`},
  ViewVertical->{0., 0., 1.}]], "Input",
 CellChangeTimes->{3.743935056688609*^9}],

Cell["Em particular o caso \[Gamma]=1/2:", "Text",
 CellChangeTimes->{{3.7439342461733546`*^9, 3.7439342729432135`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Module", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"V", ",", 
     RowBox[{"n", "=", "1"}], ",", 
     RowBox[{"\[Gamma]", "=", "0.5"}]}], "}"}], ",", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"V", "[", "R_", "]"}], ":=", 
     RowBox[{
      RowBox[{
       SuperscriptBox[
        RowBox[{"(", 
         FractionBox[
          SuperscriptBox["R", "\[Gamma]"], 
          RowBox[{"r", "+", 
           SuperscriptBox["R", "\[Gamma]"]}]], ")"}], "n"], " ", "*", "F"}], 
      "-", "R"}]}], ";", "\[IndentingNewLine]", 
    RowBox[{"Show", "[", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"Plot", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"V", "[", "R", "]"}], ",", 
          RowBox[{"V", "[", 
           RowBox[{"calcR", "[", 
            RowBox[{"0.5", ",", "1"}], "]"}], "]"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"R", ",", "0", ",", "1"}], "}"}], ",", 
        RowBox[{"AxesLabel", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{"\"\<R\>\"", ",", "\"\<V(R)\>\""}], "}"}]}], ",", " ", 
        RowBox[{"PlotStyle", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"Lighter", "[", "Blue", "]"}], ",", " ", 
           RowBox[{"{", 
            RowBox[{"Black", ",", "Dashed"}], "}"}]}], "}"}]}]}], "]"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"Graphics", "[", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"PointSize", "[", "0.02", "]"}], ",", "Black", ",", 
         RowBox[{"Point", "[", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"calcR", "[", 
             RowBox[{"0.5", ",", "1"}], "]"}], ",", 
            RowBox[{"V", "[", 
             RowBox[{"calcR", "[", 
              RowBox[{"0.5", ",", "1"}], "]"}], "]"}]}], "}"}], "]"}]}], 
        "}"}], "]"}]}], "\[IndentingNewLine]", "]"}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.7439348647934475`*^9, 3.74393492902129*^9}}],

Cell[BoxData[
 GraphicsBox[{{{}, {}, 
    {RGBColor[
      NCache[
       Rational[1, 3], 0.3333333333333333], 
      NCache[
       Rational[1, 3], 0.3333333333333333], 1], AbsoluteThickness[1.6], 
     Opacity[1.], LineBox[CompressedData["
1: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
      "]]}, 
    {GrayLevel[0], AbsoluteThickness[1.6], Opacity[1.], 
     Dashing[{Small, Small}], LineBox[CompressedData["
1:eJxTTMoPSmViYGAwAWIQ7ZX64uKBl6F2Dn+7rZoNBR2aG7sruiRb7GH8lJL3
kp2SU+B8jimeCz98XALnb79g5O4utx7Oj2i+c+tw9xY4P39jse6MLzvh/E8T
rp1gZNwP5584eGz/eZtDcH5mpSdv5JsjcP5BTqP/a3KPw/nLFh/5J6V6Cs53
ENu7KHjdGThf9/idHce0zsP5VxyC3618dwHOz+HKvnTV4BKcf/pG+F6+vstw
frBbxMMnT67A+WYLusMXqFyD8x/8m3wlo/46nP/U8/xiscM34PwNM+9XXlS8
Becv7WDu1Ky6Ded/TY56lbb7DpzP7dIWtFH8HpxfI/CU52HMfTifZ582w3Xf
B3C+bZn/38O/EPw5S3oWK895COfHhZqc5fR+BOdvvZo6ed83BN/yzAamZ9Me
w/kKrmlfJ7s8gfNNTUwnbnmG4N//1HtycetTOP+NcWCrpNEzOF/tte4rxssI
/hGV0ksFjc/h/P4rV5ODVF7A+e+DD0xkOoLgbwoVdbYsfAnnLz7bPPeR0Cs4
//vxmGqhQwj+g4n7vwrkvYbzv120lmziewPnF0xROlC5B8EXP6sk8CTuLSJ+
r675I/MPwf8UvzDnzqp3cP7+hPWtfD7v4Xxth1hb9mUI/nR57q///yP4ACfd
eW8=
      "]]}}, 
   {GrayLevel[0], PointSize[0.02], 
    PointBox[{0.21830812812575776`, 4.298352160257593}]}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{
    FormBox["\"R\"", TraditionalForm], 
    FormBox["\"V(R)\"", TraditionalForm]},
  AxesOrigin->{0, 3.58},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{"DefaultBoundaryStyle" -> Automatic, "ScalingFunctions" -> None},
  PlotRange->{{0, 1}, {3.605990306359924, 4.298352160257593}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{
  3.743934278779799*^9, {3.7439348917477083`*^9, 3.7439349296094985`*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"calcR", "[", 
  RowBox[{"0.5", ",", "1"}], "]"}]], "Input"],

Cell[BoxData["0.21830812812575776`"], "Output",
 CellChangeTimes->{3.7439386432717724`*^9}]
}, Open  ]],

Cell[BoxData["\[IndentingNewLine]"], "Input",
 CellChangeTimes->{3.743934275113892*^9}],

Cell[" ", "Text",
 Editable->False,
 Selectable->False,
 CellFrame->{{0, 0}, {0, 3}},
 ShowCellBracket->False,
 CellMargins->{{0, 0}, {1, 1}},
 CellElementSpacings->{"CellMinHeight"->1},
 CellFrameMargins->0,
 CellFrameColor->RGBColor[0, 0, 1],
 CellSize->{Inherited, 5}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"n", "=", "3"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"gammas", "=", 
   RowBox[{"Rest", "[", 
    RowBox[{"Range", "[", 
     RowBox[{"0", ",", "1", ",", "0.05"}], "]"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"V", "[", 
    RowBox[{"\[Gamma]_", ",", "R_"}], "]"}], ":=", 
   RowBox[{
    RowBox[{
     SuperscriptBox[
      RowBox[{"(", 
       FractionBox[
        SuperscriptBox["R", "\[Gamma]"], 
        RowBox[{"r", "+", 
         SuperscriptBox["R", "\[Gamma]"]}]], ")"}], "n"], " ", "*", "F"}], 
    "-", "R"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"calcR", "[", "\[Gamma]_", "]"}], ":=", " ", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"d2", ",", 
       RowBox[{"i", "=", "1"}], ",", "max", ",", "ptstat", ",", "maxrelat", 
       ",", "neg"}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{"(*", 
      RowBox[{
       RowBox[{"ptstat", "=", 
        RowBox[{"Flatten", "[", 
         RowBox[{"Values", "[", 
          RowBox[{"NSolve", "[", 
           RowBox[{
            RowBox[{
             RowBox[{
              RowBox[{
               RowBox[{"r", " ", "R"}], "+", 
               SuperscriptBox["R", 
                RowBox[{"1", "+", "\[Gamma]"}]], "-", 
               RowBox[{"F", " ", "n", " ", "r", " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  FractionBox[
                   SuperscriptBox["R", "\[Gamma]"], 
                   RowBox[{"r", "+", 
                    SuperscriptBox["R", "\[Gamma]"]}]], ")"}], "n"], " ", 
                "\[Gamma]"}]}], "\[Equal]", "0"}], "&&", 
             RowBox[{"R", ">", "0"}]}], ",", "R"}], "]"}], "]"}], "]"}]}], 
       ";"}], "*)"}], "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"ptstat", "=", 
       RowBox[{
        RowBox[{
         RowBox[{"Flatten", "[", 
          RowBox[{"Values", "[", 
           RowBox[{"FindRoot", "[", 
            RowBox[{
             RowBox[{
              RowBox[{
               RowBox[{"r", " ", "R"}], "+", 
               SuperscriptBox["R", 
                RowBox[{"1", "+", "\[Gamma]"}]], "-", 
               RowBox[{"F", " ", "n", " ", "r", " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  FractionBox[
                   SuperscriptBox["R", "\[Gamma]"], 
                   RowBox[{"r", "+", 
                    SuperscriptBox["R", "\[Gamma]"]}]], ")"}], "n"], " ", 
                "\[Gamma]"}]}], "\[Equal]", "0"}], ",", 
             RowBox[{"{", 
              RowBox[{"R", ",", "0.1"}], "}"}]}], "]"}], "]"}], "]"}], 
         "\[IndentingNewLine]", 
         RowBox[{"d2", "[", "R_", "]"}]}], ":=", 
        FractionBox[
         RowBox[{"F", " ", "n", " ", "r", " ", 
          SuperscriptBox[
           RowBox[{"(", 
            FractionBox[
             SuperscriptBox["R", "\[Gamma]"], 
             RowBox[{"r", "+", 
              SuperscriptBox["R", "\[Gamma]"]}]], ")"}], "n"], " ", 
          "\[Gamma]", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             RowBox[{"-", 
              SuperscriptBox["R", "\[Gamma]"]}], " ", 
             RowBox[{"(", 
              RowBox[{"1", "+", "\[Gamma]"}], ")"}]}], "+", 
            RowBox[{"r", " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", "1"}], "+", 
               RowBox[{"n", " ", "\[Gamma]"}]}], ")"}]}]}], ")"}]}], 
         RowBox[{
          SuperscriptBox["R", "2"], " ", 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{"r", "+", 
             SuperscriptBox["R", "\[Gamma]"]}], ")"}], "2"]}]]}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"maxrelat", "=", 
       RowBox[{
        RowBox[{
         RowBox[{"Negative", "@", 
          RowBox[{"Map", "[", 
           RowBox[{"d2", ",", "ptstat"}], "]"}]}], "//.", 
         RowBox[{"False", "\[Rule]", "0"}]}], "//.", 
        RowBox[{"True", "\[Rule]", "1"}]}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"neg", "=", 
       RowBox[{"maxrelat", "*", "ptstat"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"Norm", "[", "maxrelat", "]"}], "\[Equal]", "1"}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{"max", "=", 
          RowBox[{"Norm", "[", 
           RowBox[{"ptstat", "*", 
            RowBox[{"neg", "/", 
             RowBox[{"Norm", "[", "neg", "]"}]}]}], "]"}]}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"max", "=", "0"}], ";", "\[IndentingNewLine]", 
          RowBox[{"tam", "=", 
           RowBox[{"Length", "[", "ptstat", "]"}]}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{"While", "[", 
           RowBox[{
            RowBox[{"i", "\[LessEqual]", "tam"}], ",", "\[IndentingNewLine]", 
            RowBox[{
             RowBox[{"If", "[", 
              RowBox[{
               RowBox[{
                RowBox[{"V", "[", 
                 RowBox[{"\[Gamma]", ",", 
                  RowBox[{"maxrelat", "[", 
                   RowBox[{"[", "i", "]"}], "]"}]}], "]"}], ">", "max"}], ",",
                "\[IndentingNewLine]", 
               RowBox[{"max", "=", 
                RowBox[{"maxrelat", "[", 
                 RowBox[{"[", "i", "]"}], "]"}]}]}], "]"}], ";", 
             "\[IndentingNewLine]", 
             RowBox[{"i", "++"}]}]}], "]"}], ";"}]}], "\[IndentingNewLine]", 
        "]"}], "\[IndentingNewLine]", "max"}]}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Ropt", "=", 
   RowBox[{"Map", "[", 
    RowBox[{"calcR", ",", "gammas"}], "]"}]}], " ", 
  RowBox[{"(*", " ", 
   RowBox[{"lista", " ", "R", " ", "optimais"}], " ", 
   "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"RoptSaltos", "=", 
   RowBox[{"Append", "[", 
    RowBox[{"RoptSaltos", ",", "Ropt"}], "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.743829885090917*^9, 3.7438299678088236`*^9}, {
  3.743830061964511*^9, 3.74383006284582*^9}, {3.7438301294858637`*^9, 
  3.7438301443384495`*^9}, {3.743830294530046*^9, 3.743830294780611*^9}, {
  3.743830524126585*^9, 3.743830524267198*^9}, {3.7438310419444056`*^9, 
  3.7438310504764147`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"0.0012412458120030555`", ",", 
   RowBox[{"max$3841159", " ", 
    RowBox[{"If", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"Norm", "[", 
        RowBox[{"{", "}"}], "]"}], "\[Equal]", "1"}], ",", 
      RowBox[{"max$3841159", "=", 
       RowBox[{"Norm", "[", 
        FractionBox[
         RowBox[{"ptstat$3841159", " ", "neg$3841159"}], 
         RowBox[{"Norm", "[", "neg$3841159", "]"}]], "]"}]}], ",", 
      RowBox[{
       RowBox[{"max$3841159", "=", "0"}], ";", 
       RowBox[{"tam", "=", 
        RowBox[{"Length", "[", "ptstat$3841159", "]"}]}], ";", 
       RowBox[{"While", "[", 
        RowBox[{
         RowBox[{"i$3841159", "\[LessEqual]", "tam"}], ",", 
         RowBox[{
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"V", "[", 
              RowBox[{"0.1`", ",", 
               RowBox[{
               "maxrelat$3841159", "\[LeftDoubleBracket]", "i$3841159", 
                "\[RightDoubleBracket]"}]}], "]"}], ">", "max$3841159"}], ",", 
            RowBox[{"max$3841159", "=", 
             RowBox[{
             "maxrelat$3841159", "\[LeftDoubleBracket]", "i$3841159", 
              "\[RightDoubleBracket]"}]}]}], "]"}], ";", 
          RowBox[{"i$3841159", "++"}]}]}], "]"}], ";"}]}], "]"}]}], ",", 
   "0.014083462492055525`", ",", "0.02666541900472352`", ",", 
   "0.04349125650716114`", ",", "0.06441268945747013`", ",", 
   RowBox[{"max$3842361", " ", 
    RowBox[{"If", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"Norm", "[", 
        RowBox[{"{", "}"}], "]"}], "\[Equal]", "1"}], ",", 
      RowBox[{"max$3842361", "=", 
       RowBox[{"Norm", "[", 
        FractionBox[
         RowBox[{"ptstat$3842361", " ", "neg$3842361"}], 
         RowBox[{"Norm", "[", "neg$3842361", "]"}]], "]"}]}], ",", 
      RowBox[{
       RowBox[{"max$3842361", "=", "0"}], ";", 
       RowBox[{"tam", "=", 
        RowBox[{"Length", "[", "ptstat$3842361", "]"}]}], ";", 
       RowBox[{"While", "[", 
        RowBox[{
         RowBox[{"i$3842361", "\[LessEqual]", "tam"}], ",", 
         RowBox[{
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"V", "[", 
              RowBox[{"0.35000000000000003`", ",", 
               RowBox[{
               "maxrelat$3842361", "\[LeftDoubleBracket]", "i$3842361", 
                "\[RightDoubleBracket]"}]}], "]"}], ">", "max$3842361"}], ",", 
            RowBox[{"max$3842361", "=", 
             RowBox[{
             "maxrelat$3842361", "\[LeftDoubleBracket]", "i$3842361", 
              "\[RightDoubleBracket]"}]}]}], "]"}], ";", 
          RowBox[{"i$3842361", "++"}]}]}], "]"}], ";"}]}], "]"}]}], ",", 
   "0.11736050341260233`", ",", "0", ",", "0.18251857614800726`", ",", "0", 
   ",", "0.2564821308947179`", ",", "0", ",", "0.33598227818351656`", ",", 
   "0.3768965680704212`", ",", "0.4181645978087854`", ",", 
   "0.459562028421822`", ",", "0", ",", "0.5417275491642085`", ",", 
   "0.5817841764277032`"}], "}"}]], "Output",
 CellChangeTimes->{
  3.7438296800732217`*^9, {3.74382984314114*^9, 3.7438300130368595`*^9}, 
   3.7438300919753294`*^9, {3.7438301506656566`*^9, 3.743830177161686*^9}, 
   3.743830301051244*^9, 3.7438305411173773`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"n", "=", "3"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"gammas", "=", 
   RowBox[{"Rest", "[", 
    RowBox[{"Range", "[", 
     RowBox[{"0", ",", "1", ",", "0.05"}], "]"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"V", "[", 
    RowBox[{"\[Gamma]_", ",", "R_"}], "]"}], ":=", 
   RowBox[{
    RowBox[{
     SuperscriptBox[
      RowBox[{"(", 
       FractionBox[
        SuperscriptBox["R", "\[Gamma]"], 
        RowBox[{"r", "+", 
         SuperscriptBox["R", "\[Gamma]"]}]], ")"}], "n"], " ", "*", "F"}], 
    "-", "R"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"\[Gamma]", "=", 
   RowBox[{"gammas", "[", 
    RowBox[{"[", "2", "]"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"ptstat", "=", 
  RowBox[{"Flatten", "[", 
   RowBox[{"Values", "[", 
    RowBox[{"FindRoot", "[", 
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{"r", " ", "R"}], "+", 
        SuperscriptBox["R", 
         RowBox[{"1", "+", "\[Gamma]"}]], "-", 
        RowBox[{"F", " ", "n", " ", "r", " ", 
         SuperscriptBox[
          RowBox[{"(", 
           FractionBox[
            SuperscriptBox["R", "\[Gamma]"], 
            RowBox[{"r", "+", 
             SuperscriptBox["R", "\[Gamma]"]}]], ")"}], "n"], " ", 
         "\[Gamma]"}]}], "\[Equal]", "0"}], ",", 
      RowBox[{"{", 
       RowBox[{"R", ",", "0.2"}], "}"}]}], "]"}], "]"}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Plot", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{
       RowBox[{"r", " ", "R"}], "+", 
       SuperscriptBox["R", 
        RowBox[{"1", "+", "\[Gamma]"}]], "-", 
       RowBox[{"F", " ", "n", " ", "r", " ", 
        SuperscriptBox[
         RowBox[{"(", 
          FractionBox[
           SuperscriptBox["R", "\[Gamma]"], 
           RowBox[{"r", "+", 
            SuperscriptBox["R", "\[Gamma]"]}]], ")"}], "n"], " ", 
        "\[Gamma]"}]}], ",", 
      RowBox[{"-", 
       FractionBox[
        RowBox[{
         RowBox[{"r", " ", "R"}], "+", 
         SuperscriptBox["R", 
          RowBox[{"1", "+", "\[Gamma]"}]], "-", 
         RowBox[{"F", " ", "n", " ", "r", " ", 
          SuperscriptBox[
           RowBox[{"(", 
            FractionBox[
             SuperscriptBox["R", "\[Gamma]"], 
             RowBox[{"r", "+", 
              SuperscriptBox["R", "\[Gamma]"]}]], ")"}], "n"], " ", 
          "\[Gamma]"}]}], 
        RowBox[{
         RowBox[{"r", " ", "R"}], "+", 
         SuperscriptBox["R", 
          RowBox[{"1", "+", "\[Gamma]"}]]}]]}], ",", 
      RowBox[{
       RowBox[{
        SuperscriptBox[
         RowBox[{"(", 
          FractionBox[
           SuperscriptBox["R", "\[Gamma]"], 
           RowBox[{"r", "+", 
            SuperscriptBox["R", "\[Gamma]"]}]], ")"}], "n"], " ", "*", "F"}], 
       "-", "R"}]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"R", ",", "0", ",", "0.2"}], "}"}], ",", 
    RowBox[{"PlotLegends", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{"\"\<root\>\"", ",", "\"\<DV(R)\>\"", ",", "\"\<V(R)\>\""}], 
      "}"}]}]}], "]"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]"}], "Input",
 CellChangeTimes->{{3.7438305668509407`*^9, 3.7438307292148914`*^9}, {
  3.7438307624294004`*^9, 3.7438307947416534`*^9}, {3.743830922135255*^9, 
  3.7438309312191906`*^9}, {3.743830969256982*^9, 3.7438310081614223`*^9}}],

Cell[BoxData[
 RowBox[{"{", "0.07555572921794584`", "}"}]], "Output",
 CellChangeTimes->{{3.7438309320795865`*^9, 3.7438309699143577`*^9}, {
  3.7438310001281996`*^9, 3.743831008489538*^9}}],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{{}, {}, {
       Directive[
        Opacity[1.], 
        RGBColor[0.368417, 0.506779, 0.709798], 
        AbsoluteThickness[1.6]], 
       LineBox[CompressedData["
1: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
AVZqKg7hb4fyzX9y4F8/PqA9
        "]]}, {
       Directive[
        Opacity[1.], 
        RGBColor[0.880722, 0.611041, 0.142051], 
        AbsoluteThickness[1.6]], 
       LineBox[CompressedData["
1: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
irdwsP8BnP9RVA==
        "]]}, {
       Directive[
        Opacity[1.], 
        RGBColor[0.560181, 0.691569, 0.194885], 
        AbsoluteThickness[1.6]], 
       LineBox[CompressedData["
1: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
euKx31Kfx6Wm0uHwtjqxq9j/A/82pmE=
        "]]}}}, {
    DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
     Identity, Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, "ScalingFunctions" -> None}, 
     PlotRange -> {{0, 0.2}, {-0.6494210417321177, 10.459583672681472`}}, 
     PlotRangeClipping -> True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}}, Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{"\"root\"", "\"DV(R)\"", "\"V(R)\""}, "LineLegend", 
      DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], 
                    "RGBColor[0.880722, 0.611041, 0.142051]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.37345400000000006`, 0.461046, 0.12992333333333334`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], 
                    "RGBColor[0.560181, 0.691569, 0.194885]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2, ",", #3}], "}"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{{3.7438309320795865`*^9, 3.7438309699143577`*^9}, {
  3.7438310001281996`*^9, 3.7438310085610075`*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Simplify", "@", 
  RowBox[{"D", "[", 
   RowBox[{
    RowBox[{
     RowBox[{
      SuperscriptBox[
       RowBox[{"(", 
        FractionBox[
         SuperscriptBox["R", "\[Gamma]"], 
         RowBox[{"r", "+", 
          SuperscriptBox["R", "\[Gamma]"]}]], ")"}], "n"], " ", "*", "F"}], 
     "-", "R"}], ",", "R"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.743830830679086*^9, 3.743830896027742*^9}}],

Cell[BoxData[
 RowBox[{"-", 
  FractionBox[
   RowBox[{
    RowBox[{"r", " ", "R"}], "+", 
    SuperscriptBox["R", 
     RowBox[{"1", "+", "\[Gamma]"}]], "-", 
    RowBox[{"F", " ", "n", " ", "r", " ", 
     SuperscriptBox[
      RowBox[{"(", 
       FractionBox[
        SuperscriptBox["R", "\[Gamma]"], 
        RowBox[{"r", "+", 
         SuperscriptBox["R", "\[Gamma]"]}]], ")"}], "n"], " ", "\[Gamma]"}]}], 
   RowBox[{
    RowBox[{"r", " ", "R"}], "+", 
    SuperscriptBox["R", 
     RowBox[{"1", "+", "\[Gamma]"}]]}]]}]], "Output",
 CellChangeTimes->{{3.743830615832289*^9, 3.7438306612786245`*^9}, 
   3.743830730448825*^9, {3.7438307630750904`*^9, 3.7438307958143516`*^9}, {
   3.743830843576043*^9, 3.743830896493452*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ListPlot", "[", 
  RowBox[{
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"Transpose", "[", 
      RowBox[{"{", 
       RowBox[{"gammas", ",", 
        RowBox[{"RoptSaltos", "[", 
         RowBox[{"[", "i", "]"}], "]"}]}], "}"}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", "1", ",", "2"}], "}"}]}], "]"}], ",", 
   RowBox[{"Filling", "->", "Axis"}], ",", 
   RowBox[{"PlotLegends", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"\"\<1 jump\>\"", ",", "\"\<2 jumps\>\""}], "}"}]}], ",", 
   RowBox[{"AxesLabel", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
     "\"\<\[Gamma]\>\"", ",", 
      "\"\<\!\(\*SuperscriptBox[\(R\), \(*\)]\)\>\""}], "}"}]}]}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.7438295632558284`*^9, 3.74382962087426*^9}, 
   3.743829829759932*^9, {3.7438303303648357`*^9, 3.7438303393185244`*^9}, {
   3.743830382154664*^9, 3.7438304275668297`*^9}, {3.743830464315768*^9, 
   3.743830507635749*^9}}],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{}, 
     GraphicsComplexBox[CompressedData["
1:eJxTTMoPSmViYGAoA2IQPWsmCKy0Z0p7djp7p4Y9hL/T/nTi8vs61v72JsYg
cNh+vrvPFZEHKVD5k/ax9yxi6oxL7RnA4IK9qfvcws60Jqj6y/ZVLEITlC72
2KengcA1e5+Gdcaiv6ZA9d+033Hk8r2Lr+bYnz0DAnfsj1y/17VcajHUvAf2
nwwlb6xPWwFV/9D+h9mk87cD1kHNf2xvtmFvd3D6Jqj+J/b9sVM3qL3aCrXv
mX2v/VP7Bat2Qs17YV9e2+PvvWgv1LyX9v8LJgqGPT0ANe+1feqJhVM38B2G
mvfGXupQzwdZr6NQ897ZdzLHX1wx5TjUvA/27wJ3yLW+PmkPCz+eHYJHZG66
wMNvvUjA41PnM+DhJ1yfGd3XUA8PP52w5LsLJvXBw2/20WinR1Uz4eH3xDvh
QZXNYnj46a70PeUkvhoefj+n9WiJyG6Ch19L3K4pi1y3w8NPLqJAPebbHnj4
KfqdiJ7bfxAefnftm86+un4EHn7Kxz0+f/E+AQ+/LS9Dne49Pg0PP4M7RjKG
M87Dw+/4pFfBvzdchIcfAxTAwu/f0W27UvquwsOPAQV8sE97apnPXHITHn4w
GVj4wfiw8EOVP4lm3gU09ZfhfFj4oeq/iebeO2jmPUBT/xDN/Mdo+p+g2fcM
zbwXaOa9xAgv9PBBVT9ywwdX+kI1DzN9oZo3Wr6Nlm8DU74BAO7rzpE=
      "], {{{}, {}, {}, {}, {}, {
         Directive[
          RGBColor[0.368417, 0.506779, 0.709798], 
          Opacity[0.3]], 
         LineBox[{59, 1}], 
         LineBox[{60, 2}], 
         LineBox[{61, 3}], 
         LineBox[{62, 4}], 
         LineBox[{63, 5}], 
         LineBox[{64, 6}], 
         LineBox[{65, 7}], 
         LineBox[{66, 8}], 
         LineBox[{67, 9}], 
         LineBox[{68, 10}], 
         LineBox[{69, 11}], 
         LineBox[{70, 12}], 
         LineBox[{71, 13}], 
         LineBox[{72, 14}], 
         LineBox[{73, 15}], 
         LineBox[{74, 16}], 
         LineBox[{75, 17}], 
         LineBox[{76, 18}], 
         LineBox[{77, 19}], 
         LineBox[{78, 20}]}, {}, {
         Directive[
          RGBColor[0.880722, 0.611041, 0.142051], 
          Opacity[0.3]], 
         LineBox[{41, 21}], 
         LineBox[{42, 22}], 
         LineBox[{43, 23}], 
         LineBox[{44, 24}], 
         LineBox[{45, 25}], 
         LineBox[{46, 26}], 
         LineBox[{47, 27}], 
         LineBox[{48, 28}], 
         LineBox[{49, 29}], 
         LineBox[{50, 30}], 
         LineBox[{51, 31}], 
         LineBox[{52, 32}], 
         LineBox[{53, 33}], 
         LineBox[{54, 34}], 
         LineBox[{55, 35}], 
         LineBox[{56, 36}], 
         LineBox[{57, 38}], 
         LineBox[{58, 40}]}}, {{}, {
         Hue[0.67, 0.6, 0.6], 
         Directive[
          PointSize[0.019444444444444445`], 
          RGBColor[0.368417, 0.506779, 0.709798], 
          AbsoluteThickness[1.6]], 
         PointBox[{79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93,
           94, 95, 96, 97, 98}]}, {
         Hue[0.9060679774997897, 0.6, 0.6], 
         Directive[
          PointSize[0.019444444444444445`], 
          RGBColor[0.880722, 0.611041, 0.142051], 
          AbsoluteThickness[1.6]], 
         PointBox[{99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 
          111, 112, 113, 114, 115, 116, 117, 118}]}, {}}}], {}}, {
    DisplayFunction -> Identity, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.05]}}, AxesOrigin -> {0, 0}, 
     PlotRange -> {{0, 1.}, {0, 0.3977058969681678}}, DisplayFunction -> 
     Identity, AspectRatio -> NCache[GoldenRatio^(-1), 0.6180339887498948], 
     Axes -> {True, True}, AxesLabel -> {
       FormBox["\"\[Gamma]\"", TraditionalForm], 
       FormBox[
       "\"\\!\\(\\*SuperscriptBox[\\(R\\), \\(*\\)]\\)\"", TraditionalForm]}, 
     AxesOrigin -> {0, 0}, DisplayFunction :> Identity, 
     Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], Method -> {}, 
     PlotRange -> {{0, 1.}, {0, 0.3977058969681678}}, PlotRangeClipping -> 
     True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.05]}}, Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{"\"1 jump\"", "\"2 jumps\""}, "PointLegend", 
      DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.7], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.7], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], 
                    PointBox[
                    NCache[{
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}]}, {
                    Scaled[{0.5, 0.5}]}]]}}}, AspectRatio -> Full, 
                    ImageSize -> {10, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.7], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.7], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], 
                    PointBox[
                    NCache[{
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}]}, {
                    Scaled[{0.5, 0.5}]}]]}}}, AspectRatio -> Full, 
                    ImageSize -> {10, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"PointLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.019444444444444445`", "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.019444444444444445`", "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], 
                    "RGBColor[0.880722, 0.611041, 0.142051]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2}], "}"}], ",", 
           RowBox[{"Joined", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{"{", 
                 RowBox[{"False", ",", "False"}], "}"}], "}"}]}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}]}], "}"}]}]}], 
         "]"}]& ), Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{
  3.7438270330376673`*^9, 3.743828800597088*^9, 3.743830340363867*^9, {
   3.7438304001817856`*^9, 3.7438304172940893`*^9}, 3.7438305088856244`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Table", "[", 
  RowBox[{
   RowBox[{"\"\<n=\>\"", 
    RowBox[{"TextCell", "[", "n", "]"}]}], ",", 
   RowBox[{"{", 
    RowBox[{"n", ",", "1", ",", "5"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.7438296504106913`*^9, 3.743829706002458*^9}, {
  3.7438297716180525`*^9, 3.743829807001445*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"\<\"n=\"\>", " ", 
    InterpretationBox[Cell[BoxData["1"]],
     TextCell[1]]}], ",", 
   RowBox[{"\<\"n=\"\>", " ", 
    InterpretationBox[Cell[BoxData["2"]],
     TextCell[2]]}], ",", 
   RowBox[{"\<\"n=\"\>", " ", 
    InterpretationBox[Cell[BoxData["3"]],
     TextCell[3]]}], ",", 
   RowBox[{"\<\"n=\"\>", " ", 
    InterpretationBox[Cell[BoxData["4"]],
     TextCell[4]]}], ",", 
   RowBox[{"\<\"n=\"\>", " ", 
    InterpretationBox[Cell[BoxData["5"]],
     TextCell[5]]}]}], "}"}]], "Output",
 CellChangeTimes->{{3.743829683236084*^9, 3.743829706817111*^9}, {
  3.7438297770360255`*^9, 3.743829787449087*^9}}]
}, Open  ]]
}, Open  ]]
}, Open  ]]
},
WindowSize->{1366, 685},
WindowMargins->{{-8, Automatic}, {Automatic, -8}},
Magnification:>0.9 Inherited,
FrontEndVersion->"10.0 for Microsoft Windows (64-bit) (September 9, 2014)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[580, 22, 107, 1, 61, "Section"],
Cell[CellGroupData[{
Cell[712, 27, 103, 1, 45, "Subsection"],
Cell[CellGroupData[{
Cell[840, 32, 112, 1, 35, "Subsubsection"],
Cell[955, 35, 142, 3, 27, "Input"],
Cell[CellGroupData[{
Cell[1122, 42, 535, 17, 27, "Input"],
Cell[1660, 61, 425, 16, 38, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[2122, 82, 346, 11, 27, "Input"],
Cell[2471, 95, 613, 20, 54, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[3121, 120, 657, 21, 27, "Input"],
Cell[3781, 143, 599, 18, 54, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[4417, 166, 1089, 36, 53, "Input"],
Cell[5509, 204, 152, 2, 27, "Output"]
}, Open  ]],
Cell[5676, 209, 325, 8, 27, "Input"],
Cell[CellGroupData[{
Cell[6026, 221, 397, 13, 27, "Input"],
Cell[6426, 236, 1583, 52, 54, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[8046, 293, 2464, 80, 74, "Input"],
Cell[10513, 375, 126, 2, 27, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[10676, 382, 1643, 53, 53, "Input"],
Cell[12322, 437, 597, 18, 54, "Output"]
}, Open  ]],
Cell[12934, 458, 44, 1, 3, "PageBreak",
 PageBreakBelow->True]
}, Open  ]],
Cell[CellGroupData[{
Cell[13015, 464, 117, 1, 35, "Subsubsection"],
Cell[CellGroupData[{
Cell[13157, 469, 810, 23, 46, "Input"],
Cell[13970, 494, 7957, 225, 367, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[21964, 724, 2260, 67, 119, "Input"],
Cell[24227, 793, 2057, 64, 89, "Output"]
}, Open  ]],
Cell[26299, 860, 44, 1, 3, "PageBreak",
 PageBreakBelow->True]
}, Open  ]],
Cell[CellGroupData[{
Cell[26380, 866, 178, 2, 35, "Subsubsection"],
Cell[26561, 870, 222, 4, 27, "Input"],
Cell[26786, 876, 436, 8, 46, "Input"],
Cell[27225, 886, 94, 1, 27, "Input"],
Cell[27322, 889, 171, 5, 44, "Text"],
Cell[CellGroupData[{
Cell[27518, 898, 3407, 85, 182, "Input"],
Cell[30928, 985, 13397, 286, 123, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[44362, 1276, 3505, 94, 200, "Input"],
Cell[47870, 1372, 16746, 356, 123, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[64653, 1733, 1371, 45, 87, "Input"],
Cell[66027, 1780, 79, 1, 27, "Output"]
}, Open  ]],
Cell[66121, 1784, 281, 6, 44, "Text"],
Cell[CellGroupData[{
Cell[66427, 1794, 5354, 132, 231, "Input"],
Cell[71784, 1928, 19033, 421, 234, "Output"]
}, Open  ]],
Cell[90832, 2352, 329, 7, 64, "Input"],
Cell[91164, 2361, 4143, 118, 231, "Input"],
Cell[95310, 2481, 3280, 101, 195, "Input"],
Cell[98593, 2584, 270, 4, 27, "Input"],
Cell[98866, 2590, 2162, 54, 298, "Input"],
Cell[CellGroupData[{
Cell[101053, 2648, 4429, 119, 254, "Input"],
Cell[105485, 2769, 21645, 476, 123, "Output"]
}, Open  ]],
Cell[127145, 3248, 402, 10, 27, "Input"],
Cell[127550, 3260, 150, 2, 64, "Input"],
Cell[127703, 3264, 271, 9, 9, "Text"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[128023, 3279, 158, 2, 38, "Subsection"],
Cell[128184, 3283, 534, 10, 50, "Input"],
Cell[128721, 3295, 224, 5, 49, "Text"],
Cell[128948, 3302, 7345, 185, 558, "Input"],
Cell[136296, 3489, 136, 4, 47, "Text"],
Cell[136435, 3495, 2787, 55, 170, "Input"],
Cell[CellGroupData[{
Cell[139247, 3554, 102, 1, 29, "Input"],
Cell[139352, 3557, 493, 9, 28, "Output"]
}, Open  ]],
Cell[139860, 3569, 478, 10, 49, "Text"],
Cell[140341, 3581, 2578, 68, 130, "Input"],
Cell[142922, 3651, 29508, 632, 227, InheritFromParent],
Cell[CellGroupData[{
Cell[172455, 4287, 4603, 115, 290, "Input"],
Cell[177061, 4404, 9928, 179, 241, "Output"]
}, Open  ]],
Cell[187004, 4586, 146, 2, 70, "Input"],
Cell[CellGroupData[{
Cell[187175, 4592, 6142, 146, 270, "Input"],
Cell[193320, 4740, 9794, 178, 384, "Output"]
}, Open  ]],
Cell[203129, 4921, 148, 2, 70, "Input"],
Cell[CellGroupData[{
Cell[203302, 4927, 6294, 151, 295, "Input"],
Cell[209599, 5080, 9693, 174, 385, "Output"]
}, Open  ]],
Cell[219307, 5257, 72, 1, 50, "Input"],
Cell[219382, 5260, 148, 2, 70, "Input"],
Cell[219533, 5264, 271, 9, 9, "Text"],
Cell[219807, 5275, 111, 1, 28, "Text"],
Cell[219921, 5278, 192, 4, 29, "Input"],
Cell[220116, 5284, 511, 16, 75, "Input"],
Cell[220630, 5302, 167, 4, 29, "Input"],
Cell[220800, 5308, 2702, 68, 130, "Input"],
Cell[223505, 5378, 169289, 2794, 277, InheritFromParent],
Cell[392797, 8174, 120, 1, 28, "Text"],
Cell[CellGroupData[{
Cell[392942, 8179, 1972, 54, 175, "Input"],
Cell[394917, 8235, 8376, 153, 228, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[403330, 8393, 83, 2, 29, "Input"],
Cell[403416, 8397, 91, 1, 28, "Output"]
}, Open  ]],
Cell[403522, 8401, 87, 1, 50, "Input"],
Cell[403612, 8404, 271, 9, 9, "Text"],
Cell[CellGroupData[{
Cell[403908, 8417, 6298, 168, 566, "Input"],
Cell[410209, 8587, 3255, 77, 210, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[413501, 8669, 3385, 100, 246, "Input"],
Cell[416889, 8771, 190, 3, 27, "Output"],
Cell[417082, 8776, 28912, 542, 210, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[446031, 9323, 426, 13, 49, "Input"],
Cell[446460, 9338, 732, 20, 63, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[447229, 9363, 957, 25, 27, "Input"],
Cell[448189, 9390, 14093, 312, 229, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[462319, 9707, 324, 8, 27, "Input"],
Cell[462646, 9717, 670, 19, 30, "Output"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}
]
*)

(* End of internal cache information *)
